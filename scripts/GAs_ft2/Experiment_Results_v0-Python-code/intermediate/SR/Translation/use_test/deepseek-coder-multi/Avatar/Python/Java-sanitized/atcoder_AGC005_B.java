import java.util.* ; public class atcoder_AGC005_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] par = new int [ N ] ; int [ ] rank = new int [ N ] ; int [ ] size = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { par [ i ] = i ; rank [ i ] = 1 ; size [ i ] = 1 ; } int [ ] b = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { b [ A [ i ] - 1 ] = i ; } long ans = 0 ; for ( int k = N - 1 ; k >= 0 ; k -- ) { int l = 1 ; int r = 1 ; if ( k > 0 && A [ k - 1 ] > A [ k ] ) { l += size [ find ( k - 1 , par ) ] ; unite ( k - 1 , k , par , rank , size ) ; } if ( k < N - 1 && A [ k + 1 ] > A [ k ] ) { r += size [ find ( k + 1 , par ) ] ; unite ( k + 1 , k , par , rank , size ) ; } ans += ( long ) l * r * A [ k ] ; } System.out.println ( ans ) ; } static int find ( int x , int [ ] par ) { if ( par [ x ] == x ) { return x ; } else { return par [ x ] = find ( par [ x ] , par ) ; } } static void unite ( int x , int y , int [ ] par , int [ ] rank , int [ ] size ) { x = find ( x , par ) ; y = find ( y , par ) ; if ( x == y ) { return ; } if ( rank [ x ] < rank [ y ] ) { par [ x ] = y ; size [ y ] += size [ x ] ; } else { par [ y ] = x ; size [ x ] += size [ y ] ; if ( rank [ x ] == rank [ y ] ) { rank [ x ] ++ ; } } } }