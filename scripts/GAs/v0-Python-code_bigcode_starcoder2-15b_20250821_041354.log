+ model=bigcode/starcoder2-15b
+ dataset=Avatar
+ cache=tmp
+ src=Python
+ tgt=Java
+ python3 translate.py --model bigcode/starcoder2-15b --dataset Avatar --source_lang Python --target_lang Java --cache_dir tmp --use_test
INFO 08-21 04:21:20 [__init__.py:241] Automatically detected platform cuda.
found 231 inputs
INFO 08-21 04:21:21 [utils.py:326] non-default args: {'model': 'bigcode/starcoder2-15b', 'trust_remote_code': True, 'dtype': 'bfloat16', 'max_model_len': 4096, 'tensor_parallel_size': 2, 'disable_log_stats': True}
The argument `trust_remote_code` is to be used with Auto classes. It has no effect here and is ignored.
INFO 08-21 04:21:26 [__init__.py:711] Resolved architecture: Starcoder2ForCausalLM
INFO 08-21 04:21:26 [__init__.py:2816] Downcasting torch.float32 to torch.bfloat16.
INFO 08-21 04:21:26 [__init__.py:1750] Using max model len 4096
INFO 08-21 04:21:27 [scheduler.py:222] Chunked prefill is enabled with max_num_batched_tokens=16384.
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:21:27 [core.py:636] Waiting for init message from front-end.
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:21:27 [core.py:74] Initializing a V1 LLM engine (v0.10.1.1) with config: model='bigcode/starcoder2-15b', speculative_config=None, tokenizer='bigcode/starcoder2-15b', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=bigcode/starcoder2-15b, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"cudagraph_mode":1,"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"pass_config":{},"max_capture_size":512,"local_cache_dir":null}
[1;36m(EngineCore_0 pid=2767448)[0;0m WARNING 08-21 04:21:27 [multiproc_worker_utils.py:273] Reducing Torch parallelism from 26 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:21:27 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_92744141'), local_subscribe_addr='ipc:///tmp/7d6c337b-4ab8-4986-8c9b-21ed8501fd3f', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:29 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_76995c0e'), local_subscribe_addr='ipc:///tmp/532a968f-a326-45c6-bc4f-60135d4880c1', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:29 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_c90f928e'), local_subscribe_addr='ipc:///tmp/b350423d-9b45-46e6-b842-5ee9790cd8b9', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:30 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:30 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:30 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:30 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_0a028cc4'), local_subscribe_addr='ipc:///tmp/08ae08c3-b793-4d46-a74b-7f66682e2a3c', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [parallel_state.py:1134] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [parallel_state.py:1134] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m WARNING 08-21 04:21:31 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m WARNING 08-21 04:21:31 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [gpu_model_runner.py:1953] Starting to load model bigcode/starcoder2-15b...
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [gpu_model_runner.py:1953] Starting to load model bigcode/starcoder2-15b...
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:21:31 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:21:31 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:24 [weight_utils.py:312] Time spent downloading weights for bigcode/starcoder2-15b: 52.830082 seconds
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/14 [00:00<?, ?it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:   7% Completed | 1/14 [00:00<00:10,  1.19it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  14% Completed | 2/14 [00:01<00:10,  1.14it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  21% Completed | 3/14 [00:02<00:09,  1.13it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  29% Completed | 4/14 [00:03<00:08,  1.13it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  36% Completed | 5/14 [00:04<00:08,  1.12it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  43% Completed | 6/14 [00:05<00:07,  1.12it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  50% Completed | 7/14 [00:06<00:06,  1.12it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  57% Completed | 8/14 [00:07<00:05,  1.11it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  64% Completed | 9/14 [00:08<00:04,  1.12it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  71% Completed | 10/14 [00:08<00:03,  1.12it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  79% Completed | 11/14 [00:09<00:02,  1.11it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  86% Completed | 12/14 [00:10<00:01,  1.16it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards:  93% Completed | 13/14 [00:11<00:00,  1.15it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards: 100% Completed | 14/14 [00:12<00:00,  1.14it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Loading safetensors checkpoint shards: 100% Completed | 14/14 [00:12<00:00,  1.13it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m 
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:37 [default_loader.py:262] Loading weights took 12.46 seconds
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:37 [gpu_model_runner.py:2007] Model loading took 14.8674 GiB and 65.906962 seconds
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:22:37 [default_loader.py:262] Loading weights took 12.85 seconds
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:22:38 [gpu_model_runner.py:2007] Model loading took 14.8674 GiB and 66.526627 seconds
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:22:46 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/9af23a13be/rank_1_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:22:46 [backends.py:559] Dynamo bytecode transform time: 7.70 s
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:46 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/9af23a13be/rank_0_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:46 [backends.py:559] Dynamo bytecode transform time: 8.17 s
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:22:49 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:22:50 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:23:16 [backends.py:215] Compiling a graph for dynamic shape takes 29.43 s
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:23:18 [backends.py:215] Compiling a graph for dynamic shape takes 30.92 s
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:23:31 [monitor.py:34] torch.compile takes 37.12 s in total
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:23:31 [monitor.py:34] torch.compile takes 39.09 s in total
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:23:32 [gpu_worker.py:276] Available KV cache memory: 52.81 GiB
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:23:32 [gpu_worker.py:276] Available KV cache memory: 52.81 GiB
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:23:33 [kv_cache_utils.py:849] GPU KV cache size: 1,384,320 tokens
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:23:33 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 336.65x
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:23:33 [kv_cache_utils.py:849] GPU KV cache size: 1,384,320 tokens
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:23:33 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 336.65x
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   4%|▍         | 3/67 [00:00<00:02, 21.93it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   9%|▉         | 6/67 [00:00<00:02, 22.89it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  13%|█▎        | 9/67 [00:00<00:02, 22.51it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  18%|█▊        | 12/67 [00:00<00:02, 21.93it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  22%|██▏       | 15/67 [00:00<00:02, 21.40it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  27%|██▋       | 18/67 [00:00<00:02, 21.92it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  31%|███▏      | 21/67 [00:00<00:02, 22.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  36%|███▌      | 24/67 [00:01<00:01, 22.40it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  40%|████      | 27/67 [00:01<00:01, 21.93it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  45%|████▍     | 30/67 [00:01<00:01, 21.67it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  49%|████▉     | 33/67 [00:01<00:01, 21.46it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  54%|█████▎    | 36/67 [00:01<00:01, 21.62it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  58%|█████▊    | 39/67 [00:01<00:01, 21.19it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  63%|██████▎   | 42/67 [00:01<00:01, 21.00it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  67%|██████▋   | 45/67 [00:02<00:01, 20.54it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  72%|███████▏  | 48/67 [00:02<00:00, 19.97it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  76%|███████▌  | 51/67 [00:02<00:00, 19.55it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  79%|███████▉  | 53/67 [00:02<00:00, 19.15it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  82%|████████▏ | 55/67 [00:02<00:00, 18.77it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  85%|████████▌ | 57/67 [00:02<00:00, 18.71it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  88%|████████▊ | 59/67 [00:02<00:00, 18.82it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  91%|█████████ | 61/67 [00:02<00:00, 18.85it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  94%|█████████▍| 63/67 [00:03<00:00, 18.61it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  97%|█████████▋| 65/67 [00:03<00:00, 18.98it/s][1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:23:36 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:03<00:00, 20.54it/s]
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:23:36 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP1 pid=2767456)[0;0m INFO 08-21 04:23:36 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 0.72 GiB
[1;36m(EngineCore_0 pid=2767448)[0;0m [1;36m(VllmWorker TP0 pid=2767454)[0;0m INFO 08-21 04:23:36 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 0.72 GiB
[1;36m(EngineCore_0 pid=2767448)[0;0m INFO 08-21 04:23:37 [core.py:214] init engine (profile, create kv cache, warmup model) took 58.66 seconds
INFO 08-21 04:23:37 [llm.py:298] Supported_tasks: ['generate']
Translating 231 files...
  0%|          | 0/231 [00:00<?, ?it/s]100%|██████████| 231/231 [00:00<00:00, 10325.18it/s]
Adding requests:   0%|          | 0/231 [00:00<?, ?it/s]Adding requests:  39%|███▊      | 89/231 [00:00<00:00, 885.06it/s]Adding requests:  81%|████████  | 187/231 [00:00<00:00, 939.86it/s]Adding requests: 100%|██████████| 231/231 [00:00<00:00, 939.60it/s]
Processed prompts:   0%|          | 0/231 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/231 [00:05<21:58,  5.73s/it, est. speed input: 95.22 toks/s, output: 24.94 toks/s]Processed prompts:   1%|          | 2/231 [00:06<11:18,  2.96s/it, est. speed input: 129.91 toks/s, output: 50.90 toks/s]Processed prompts:   1%|▏         | 3/231 [00:07<07:47,  2.05s/it, est. speed input: 172.99 toks/s, output: 77.56 toks/s]Processed prompts:   2%|▏         | 4/231 [00:10<08:49,  2.33s/it, est. speed input: 164.16 toks/s, output: 96.19 toks/s]Processed prompts:   2%|▏         | 5/231 [00:13<09:59,  2.65s/it, est. speed input: 194.40 toks/s, output: 116.16 toks/s]Processed prompts:   3%|▎         | 6/231 [00:14<07:52,  2.10s/it, est. speed input: 223.45 toks/s, output: 151.54 toks/s]Processed prompts:   3%|▎         | 7/231 [00:18<10:11,  2.73s/it, est. speed input: 226.51 toks/s, output: 164.53 toks/s]Processed prompts:   3%|▎         | 8/231 [00:48<41:48, 11.25s/it, est. speed input: 96.67 toks/s, output: 110.18 toks/s] Processed prompts:   4%|▍         | 9/231 [00:49<29:31,  7.98s/it, est. speed input: 104.91 toks/s, output: 154.55 toks/s]Processed prompts:   4%|▍         | 10/231 [00:55<27:06,  7.36s/it, est. speed input: 122.22 toks/s, output: 183.52 toks/s]Processed prompts:   5%|▌         | 12/231 [00:55<14:31,  3.98s/it, est. speed input: 178.57 toks/s, output: 273.68 toks/s]Processed prompts:   6%|▌         | 13/231 [00:59<14:50,  4.09s/it, est. speed input: 188.81 toks/s, output: 298.68 toks/s]Processed prompts:   6%|▌         | 14/231 [01:00<11:31,  3.19s/it, est. speed input: 209.32 toks/s, output: 340.46 toks/s]Processed prompts:   6%|▋         | 15/231 [01:00<08:37,  2.40s/it, est. speed input: 230.61 toks/s, output: 383.98 toks/s]Processed prompts:   7%|▋         | 16/231 [01:00<06:17,  1.76s/it, est. speed input: 252.42 toks/s, output: 428.31 toks/s]Processed prompts:   7%|▋         | 17/231 [01:01<04:48,  1.35s/it, est. speed input: 272.91 toks/s, output: 471.09 toks/s]Processed prompts:   8%|▊         | 18/231 [01:04<06:32,  1.84s/it, est. speed input: 278.77 toks/s, output: 493.76 toks/s]Processed prompts:   8%|▊         | 19/231 [01:04<05:05,  1.44s/it, est. speed input: 295.03 toks/s, output: 535.04 toks/s]Processed prompts:   9%|▊         | 20/231 [01:05<04:22,  1.25s/it, est. speed input: 309.19 toks/s, output: 573.64 toks/s]Processed prompts:   9%|▉         | 21/231 [01:06<04:08,  1.19s/it, est. speed input: 321.15 toks/s, output: 609.43 toks/s]Processed prompts:  10%|▉         | 22/231 [01:06<03:06,  1.12it/s, est. speed input: 336.81 toks/s, output: 652.47 toks/s]Processed prompts:  10%|▉         | 23/231 [01:07<03:12,  1.08it/s, est. speed input: 347.65 toks/s, output: 687.54 toks/s]Processed prompts:  10%|█         | 24/231 [01:07<02:23,  1.45it/s, est. speed input: 362.52 toks/s, output: 730.77 toks/s]Processed prompts:  11%|█         | 25/231 [01:08<02:04,  1.66it/s, est. speed input: 375.73 toks/s, output: 771.27 toks/s]Processed prompts:  12%|█▏        | 27/231 [01:09<01:44,  1.95it/s, est. speed input: 401.07 toks/s, output: 851.04 toks/s]Processed prompts:  12%|█▏        | 28/231 [01:09<01:29,  2.27it/s, est. speed input: 414.21 toks/s, output: 893.01 toks/s]Processed prompts:  13%|█▎        | 29/231 [01:09<01:27,  2.30it/s, est. speed input: 425.81 toks/s, output: 932.29 toks/s]Processed prompts:  13%|█▎        | 30/231 [01:10<01:30,  2.21it/s, est. speed input: 436.54 toks/s, output: 970.34 toks/s]Processed prompts:  13%|█▎        | 31/231 [01:10<01:14,  2.67it/s, est. speed input: 449.04 toks/s, output: 1012.60 toks/s]Processed prompts:  14%|█▍        | 33/231 [01:10<00:51,  3.82it/s, est. speed input: 474.51 toks/s, output: 1098.14 toks/s]Processed prompts:  15%|█▍        | 34/231 [01:10<00:46,  4.20it/s, est. speed input: 486.70 toks/s, output: 1140.17 toks/s]Processed prompts:  16%|█▌        | 36/231 [01:10<00:33,  5.89it/s, est. speed input: 512.13 toks/s, output: 1227.06 toks/s]Processed prompts:  16%|█▋        | 38/231 [01:11<00:30,  6.31it/s, est. speed input: 536.25 toks/s, output: 1311.21 toks/s]Processed prompts:  17%|█▋        | 39/231 [01:11<00:37,  5.18it/s, est. speed input: 546.52 toks/s, output: 1349.86 toks/s]Processed prompts:  18%|█▊        | 41/231 [01:11<00:28,  6.59it/s, est. speed input: 570.45 toks/s, output: 1435.86 toks/s]Processed prompts:  18%|█▊        | 42/231 [01:12<00:38,  4.91it/s, est. speed input: 579.59 toks/s, output: 1472.45 toks/s]Processed prompts:  19%|█▉        | 44/231 [01:12<00:36,  5.17it/s, est. speed input: 600.99 toks/s, output: 1554.19 toks/s]Processed prompts:  20%|█▉        | 46/231 [01:12<00:27,  6.84it/s, est. speed input: 623.95 toks/s, output: 1640.68 toks/s]Processed prompts:  21%|██        | 49/231 [01:13<00:27,  6.52it/s, est. speed input: 654.96 toks/s, output: 1762.75 toks/s]Processed prompts:  22%|██▏       | 51/231 [01:13<00:28,  6.41it/s, est. speed input: 674.86 toks/s, output: 1843.86 toks/s]Processed prompts:  23%|██▎       | 52/231 [01:14<00:53,  3.34it/s, est. speed input: 676.45 toks/s, output: 1863.75 toks/s]Processed prompts:  23%|██▎       | 54/231 [01:14<00:42,  4.19it/s, est. speed input: 695.38 toks/s, output: 1946.82 toks/s]Processed prompts:  24%|██▍       | 56/231 [01:14<00:32,  5.32it/s, est. speed input: 714.57 toks/s, output: 2031.58 toks/s]Processed prompts:  26%|██▌       | 59/231 [01:14<00:23,  7.20it/s, est. speed input: 743.38 toks/s, output: 2159.36 toks/s]Processed prompts:  26%|██▋       | 61/231 [01:15<00:27,  6.16it/s, est. speed input: 758.83 toks/s, output: 2235.42 toks/s]Processed prompts:  27%|██▋       | 63/231 [01:15<00:22,  7.58it/s, est. speed input: 777.17 toks/s, output: 2321.17 toks/s]Processed prompts:  28%|██▊       | 65/231 [01:15<00:24,  6.69it/s, est. speed input: 792.41 toks/s, output: 2398.14 toks/s]Processed prompts:  29%|██▉       | 67/231 [01:16<00:20,  8.02it/s, est. speed input: 809.82 toks/s, output: 2483.08 toks/s]Processed prompts:  30%|██▉       | 69/231 [01:16<00:23,  6.78it/s, est. speed input: 823.80 toks/s, output: 2558.90 toks/s]Processed prompts:  31%|███       | 71/231 [01:16<00:27,  5.79it/s, est. speed input: 836.62 toks/s, output: 2632.17 toks/s]Processed prompts:  31%|███       | 72/231 [01:17<00:30,  5.27it/s, est. speed input: 842.19 toks/s, output: 2667.54 toks/s]Processed prompts:  32%|███▏      | 74/231 [01:17<00:22,  6.95it/s, est. speed input: 858.05 toks/s, output: 2752.98 toks/s]Processed prompts:  33%|███▎      | 76/231 [01:17<00:22,  6.78it/s, est. speed input: 871.28 toks/s, output: 2830.94 toks/s]Processed prompts:  34%|███▍      | 78/231 [01:17<00:24,  6.28it/s, est. speed input: 883.30 toks/s, output: 2906.48 toks/s]Processed prompts:  34%|███▍      | 79/231 [01:18<00:22,  6.72it/s, est. speed input: 890.02 toks/s, output: 2947.25 toks/s]Processed prompts:  35%|███▌      | 81/231 [01:18<00:17,  8.66it/s, est. speed input: 904.48 toks/s, output: 3032.54 toks/s]Processed prompts:  36%|███▌      | 83/231 [01:18<00:20,  7.40it/s, est. speed input: 915.69 toks/s, output: 3108.12 toks/s]Processed prompts:  37%|███▋      | 86/231 [01:18<00:15,  9.29it/s, est. speed input: 935.79 toks/s, output: 3233.61 toks/s]Processed prompts:  39%|███▊      | 89/231 [01:18<00:14,  9.98it/s, est. speed input: 954.63 toks/s, output: 3356.52 toks/s]Processed prompts:  39%|███▉      | 91/231 [01:19<00:12, 10.81it/s, est. speed input: 967.21 toks/s, output: 3439.81 toks/s]Processed prompts:  42%|████▏     | 96/231 [01:19<00:07, 17.38it/s, est. speed input: 1001.52 toks/s, output: 3658.49 toks/s]Processed prompts:  43%|████▎     | 100/231 [01:19<00:06, 21.02it/s, est. speed input: 1027.96 toks/s, output: 3831.66 toks/s]Processed prompts:  45%|████▍     | 103/231 [01:19<00:06, 19.36it/s, est. speed input: 1046.03 toks/s, output: 3956.72 toks/s]Processed prompts:  46%|████▋     | 107/231 [01:19<00:06, 19.55it/s, est. speed input: 1070.35 toks/s, output: 4125.35 toks/s]Processed prompts:  48%|████▊     | 111/231 [01:19<00:06, 18.66it/s, est. speed input: 1093.44 toks/s, output: 4291.99 toks/s]Processed prompts:  49%|████▉     | 114/231 [01:20<00:05, 20.47it/s, est. speed input: 1111.37 toks/s, output: 4420.41 toks/s]Processed prompts:  51%|█████     | 117/231 [01:20<00:05, 22.15it/s, est. speed input: 1129.01 toks/s, output: 4548.78 toks/s]Processed prompts:  52%|█████▏    | 120/231 [01:20<00:04, 23.67it/s, est. speed input: 1146.37 toks/s, output: 4677.15 toks/s]Processed prompts:  54%|█████▍    | 125/231 [01:20<00:03, 26.58it/s, est. speed input: 1174.95 toks/s, output: 4892.15 toks/s]Processed prompts:  55%|█████▌    | 128/231 [01:20<00:04, 25.39it/s, est. speed input: 1191.18 toks/s, output: 5018.43 toks/s]Processed prompts:  57%|█████▋    | 131/231 [01:20<00:04, 20.77it/s, est. speed input: 1205.50 toks/s, output: 5139.61 toks/s]Processed prompts:  59%|█████▉    | 136/231 [01:20<00:03, 25.28it/s, est. speed input: 1232.50 toks/s, output: 5355.56 toks/s]Processed prompts:  60%|██████    | 139/231 [01:21<00:03, 24.81it/s, est. speed input: 1247.46 toks/s, output: 5481.89 toks/s]Processed prompts:  61%|██████▏   | 142/231 [01:21<00:04, 22.25it/s, est. speed input: 1261.19 toks/s, output: 5605.09 toks/s]Processed prompts:  64%|██████▍   | 148/231 [01:21<00:03, 27.09it/s, est. speed input: 1291.19 toks/s, output: 5863.91 toks/s]Processed prompts:  67%|██████▋   | 154/231 [01:21<00:02, 33.51it/s, est. speed input: 1321.17 toks/s, output: 6125.98 toks/s]Processed prompts:  68%|██████▊   | 158/231 [01:21<00:02, 32.12it/s, est. speed input: 1339.57 toks/s, output: 6295.69 toks/s]Processed prompts:  72%|███████▏  | 166/231 [01:21<00:01, 39.00it/s, est. speed input: 1377.66 toks/s, output: 6644.70 toks/s]Processed prompts:  74%|███████▎  | 170/231 [01:21<00:01, 36.09it/s, est. speed input: 1394.90 toks/s, output: 6814.07 toks/s]Processed prompts:  77%|███████▋  | 178/231 [01:22<00:01, 41.52it/s, est. speed input: 1430.74 toks/s, output: 7162.69 toks/s]Processed prompts:  80%|███████▉  | 184/231 [01:22<00:01, 43.99it/s, est. speed input: 1456.59 toks/s, output: 7423.69 toks/s]Processed prompts:  82%|████████▏ | 189/231 [01:22<00:00, 44.00it/s, est. speed input: 1477.28 toks/s, output: 7639.71 toks/s]Processed prompts:  84%|████████▍ | 194/231 [01:22<00:00, 42.86it/s, est. speed input: 1497.12 toks/s, output: 7854.64 toks/s]Processed prompts:  86%|████████▌ | 199/231 [01:22<00:00, 39.93it/s, est. speed input: 1515.69 toks/s, output: 8067.54 toks/s]Processed prompts:  88%|████████▊ | 204/231 [01:22<00:00, 42.05it/s, est. speed input: 1534.48 toks/s, output: 8284.61 toks/s]Processed prompts:  90%|█████████ | 209/231 [01:22<00:00, 36.66it/s, est. speed input: 1550.86 toks/s, output: 8494.29 toks/s]Processed prompts:  92%|█████████▏| 213/231 [01:22<00:00, 33.14it/s, est. speed input: 1563.08 toks/s, output: 8660.68 toks/s]Processed prompts:  95%|█████████▍| 219/231 [01:23<00:00, 39.06it/s, est. speed input: 1582.94 toks/s, output: 8924.07 toks/s]Processed prompts:  97%|█████████▋| 224/231 [01:23<00:00, 31.20it/s, est. speed input: 1595.54 toks/s, output: 9127.25 toks/s]Processed prompts:  99%|█████████▊| 228/231 [01:23<00:00, 15.47it/s, est. speed input: 1594.89 toks/s, output: 9240.28 toks/s]Processed prompts: 100%|██████████| 231/231 [01:24<00:00, 10.61it/s, est. speed input: 1588.89 toks/s, output: 9313.09 toks/s]Processed prompts: 100%|██████████| 231/231 [01:24<00:00, 10.61it/s, est. speed input: 1588.89 toks/s, output: 9313.09 toks/s]Processed prompts: 100%|██████████| 231/231 [01:24<00:00,  2.73it/s, est. speed input: 1588.89 toks/s, output: 9313.09 toks/s]
+ python3 clean_generations_translation.py --model bigcode/starcoder2-15b --dataset Avatar --source_lang Python --target_lang Java --remove_prompt --use_test
  0%|          | 0/231 [00:00<?, ?it/s]
import java.util.*;
import java.text.*;
import java.time.*;
import java.time.format.*;
import java.math.*;
import java.security.*;
import java.security.spec.*;
import java.net.*;
import java.io.*;
import java.nio.file.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicBooleanArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.Sync.HoldCounter.

import java.util.Scanner;

public class atcoder_ABC112_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        sc.close();
        System.out.println(solve(n, a));
    }

    public static int solve(int n, int[] a) {
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = a[i];
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = a[i];
        }
        int[] d = new int[n];
        for (int i = 0; i < n; i++) {
            d[i] = a[i];
        }
        int[] e = new int[n];
        for (int i = 0; i < n; i++) {
            e[i] = a[i];
        }
        int[] f = new int[n];
        for (int i = 0; i < n; i++) {
            f[i] = a[i];
        }
        int[] g = new int[n];
        for (int i = 0; i < n; i++) {
            g[i] = a[i];
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = a[i];
        }
        int[] i = new int[n];
        for (int j = 0; j < n; j++) {
            i[j] = a[j];
        }
        int[] j = new int[n];
        for (int k = 0; k < n; k++) {
            j[k] = a[k];
        }
        int[] k = new int[n];
        for (int l = 0; l < n; l++) {
            k[l] = a[l];
        }
        int[] l = new int[n];
        for (int m = 0; m < n; m++) {
            l[m] = a[m];
        }
        int[] m = new int[n];
        for (int o = 0; o < n; o++) {
            m[o] = a[o];
        }
        int[] o = new int[n];
        for (int p = 0; p < n; p++) {
            o[p] = a[p];
        }
        int[] p = new int[n];
        for (int q = 0; q < n; q++) {
            p[q] = a[q];
        }
        int[] q = new int[n];
        for (int r = 0; r < n; r++) {
            q[r] = a[r];
        }
        int[] r = new int[n];
        for (int s = 0; s < n; s++) {
            r[s] = a[s];
        }
        int[] s = new int[n];
        for (int t = 0; t < n; t++) {
            s[t] = a[t];
        }
        int[] t = new int[n];
        for (int u = 0; u < n; u++) {
            t[u] = a[u];
        }
        int[] u = new int[n];
        for (int v = 0; v < n; v++) {
            u[v] = a[v];
        }
        int[] v = new int[n];
        for (int w = 0; w < n; w++) {
            v[w] = a[w];
        }
        int[] w = new int[n];
        for (int x = 0; x < n; x++) {
            w[x] = a[x];
        }
        int[] x = new int[n];
        for (int y = 0; y < n; y++) {
            x[y] = a[y];
        }
        int[] y = new int[n];
        for (int z = 0; z < n; z++) {
            y[z] = a[z];
        }
        int[] z = new int[n];
        for (int aa = 0; aa < n; aa++) {
            z[aa] = a[aa];
        }
        int[] aa = new int[n];
        for (int bb = 0; bb < n; bb++) {
            aa[bb] = a[bb];
        }
        int[] bb = new int[n];
        for (int cc = 0; cc < n; cc++) {
            bb[cc] = a[cc];
        }
        int[] cc = new int[n];
        for (int dd = 0; dd < n; dd++) {
            cc[dd] = a[dd];
        }
        int[] dd = new int[n];
        for (int ee = 0; ee < n; ee++) {
            dd[ee] = a[ee];
        }
        int[] ee = new int[n];
        for (int ff = 0; ff < n; ff++) {
            ee[ff] = a[ff];
        }
        int[] ff = new int[n];
        for (int gg = 0; gg < n; gg++) {
            ff[gg] = a[gg];
        }
        int[] gg = new int[n];
        for (int hh = 0; hh < n; hh++) {
            gg[hh] = a[hh];
        }
        int[] hh = new int[n];
        for (int ii = 0; ii < n; ii++) {
            hh[ii] = a[ii];
        }
        int[] ii = new int[n];
        for (int jj = 0; jj < n; jj++) {
            ii[jj] = a[jj];
        }
        int[] jj = new int[n];
        for (int kk = 0; kk < n; kk++) {
            jj[kk] = a[kk];
        }
        int[] kk = new int[n];
        for (int ll = 0; ll < n; ll++) {
            kk[ll] = a[ll];
        }
        int[] ll = new int[n];
        for (int mm = 0; mm < n; mm++) {
            ll[mm] = a[mm];
        }
        int[] mm = new int[n];
        for (int nn = 0; nn < n; nn++) {
            mm[nn] = a[nn];
        }
        int[] nn = new int[n];
        for (int oo = 0; oo < n; oo++) {
            nn[oo] = a[oo];
        }
        int[] oo = new int[n];
        for (int pp = 0; pp < n; pp++) {
            oo[pp] = a[pp];
        }
        int[] pp = new int[n];
        for (int qq = 0; qq < n; qq++) {
            pp[qq] = a[qq];
        }
        int[] qq = new int[n];
        for (int rr = 0; rr < n; rr++) {
            qq[rr] = a[rr];
        }
        int[] rr = new int[n];
        for (int ss = 0; ss < n; ss++) {
            rr[ss] = a[ss];
        }
        int[] ss = new int[n];
        for (int tt = 0; tt < n; tt++) {
            ss[tt] = a[tt];
        }
        int[] tt = new int[n];
        for (int uu = 0; uu < n; uu++) {
            tt[uu] = a[uu];
        }
        int[] uu = new int[n];
        for (int vv = 0; vv < n; vv++) {
            uu[vv] = a[vv];
        }
        int[] vv = new int[n];
        for (int ww = 0; ww < n; ww++) {
            vv[ww] = a[ww];
        }
        int[] ww = new int[n];
        for (int xx = 0; xx < n; xx++) {
            ww[xx] = a[xx];
        }
        int[] xx = new int[n];
        for (int yy = 0; yy < n; yy++) {
            xx[yy] = a[yy];
        }
        int[] yy = new int[n];
        for (int zz = 0; zz < n; zz++) {
            yy[zz] = a[zz];
        }
        int[] zz = new int[n];
        for (int aaa = 0; aaa < n; aaa++) {
            zz[aaa] = a[aaa];
        }
        int[] aaa = new int[n];
        for (int bbb = 0; bbb < n; bbb++) {
            aaa[bbb] = a[bbb];
        }
        int[] bbb = new int[n];
        for (int ccc = 0; ccc < n; ccc++) {
            bbb[ccc] = a[ccc];
        }
        int[] ccc = new int[n];
        for (int ddd = 0; ddd < n; ddd++) {
            ccc[ddd] = a[ddd];
        }
        int[] ddd = new int[n];
        for (int eee = 0; eee < n; eee++) {
            ddd[eee] = a[eee];
        }
        int[] eee = new int[n];
        for (int fff = 0; fff < n; fff++) {
            eee[fff] = a[fff];
        }
        int[] fff = new int[n];
        for (int ggg = 0; ggg < n; ggg++) {
            fff[ggg] = a[ggg];
        }
        int[] ggg = new int[n];
        for (int hhh = 0; hhh < n; hhh++) {
            ggg[hhh] = a[hhh];
        }
        int[] hhh = new int[n];
        for (int iii = 0; iii < n; iii++) {
            hhh[iii] = a[iii];
        }
        int[] iii = new int[n];
        for (int jjj = 0; jjj < n; jjj++) {
            iii[jjj] = a[jjj];
        }
        int[] jjj = new int[n];
        for (int kkk = 0; kkk < n; kkk++) {
            jjj[kkk] = a[kkk];
        }
        int[] kkk = new int[n];
        for (int lll = 0; lll < n; lll++) {
            kkk[lll] = a[lll];
        }
        int[] lll = new int[n];
        for (int mmm = 0; mmm < n; mmm++) {
            lll[mmm] = a[mmm];
        }
        int[] mmm = new int[n];
        for (int nnn = 0; nnn < n; nnn++) {
            mmm[nnn] = a[nnn];
        }
        int[] nnn = new int[n];
        for (int ooo = 0; ooo < n; ooo++) {
            nnn[ooo] = a[ooo];
        }
        int[] ooo = new int[n];
        for (int ppp = 0; ppp < n; ppp++) {
            ooo[ppp] = a[ppp];
        }
        int[] ppp = new int[n];
        for (int qqq = 0; qqq < n; qqq++) {
            ppp[qqq] = a[qqq];
        }
        int[] qqq = new int[n];
        for (int rrr = 0; rrr < n; rrr++) {
            qqq[rrr] = a[rrr];
        }
        int[] rrr = new int[n];
        for (int sss = 0; sss
and
import java.util.Scanner;

public class codeforces_678_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int value_1 = scanner.nextInt();
        int z = scanner.nextInt();
        System.out.println((value_1 / z + 1) * z);
    }
}
import java.util.*;
import java.io.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors.Characteristics;
import java.util.stream.Collectors.Characteristics.*;
import java.util.stream.Collectors;
import java.util.
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.

import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_55_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int number = scanner.nextInt();
        List<Double> list1 = new ArrayList<>();
        list1.add(7.0);
        list1.add(82.0);
        list1.add(17.0);
        List<Double> list2 = new ArrayList<>();
        list2.add(89.0);
        list2.add(17.0);
        list2.add(26.0);
        TTest tTest = new TTest();
        double pValue = tTest.tTest(list1, list2);
        while (number % 2 == 0) {
            int divisor = 2;
            List<Double> list3 = new ArrayList<>();
            list3.add(84.0);
            list3.add(31.0);
            list3.add(74.0);
            Collections.shuffle(list3);
            double result = divideNumbers(number, divisor);
            number = (int) result;
        }
        if (number == 1) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
    }

    public static double divideNumbers(int number, int divisor) {
        return number / divisor;
    }
}

import java.util.Scanner;
import java.util.Random;
import org.apache.commons.math3.stat.inference.TTest;

public class atcoder_AGC046_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int row_start = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int col_end = sc.nextInt();
        int m = 998244353;
        int[][] d = new int[C + 1][col_end + 1];
        Random rand = new Random();
        TTest ttest = new TTest();
        d[row_start][B] = 1;
        for (int i = row_start; i <= C; i++) {
            for (int col = B; col <= col_end; col++) {
                int variable_14_11 = d[i][col - 1];
                int variable_17_11 = d[i - 1][col];
                int variable_20_11 = d[i - 1][col - 1];
                int variable_26_11 = d[i][col];
                int variable_30_11 = d[i - 1][col];
                int variable_34_11 = d[i - 1][col];
                int variable_25_11 = 1;
                int variable_33_11 = 1;
                d[i][col] += compute_value(variable_17_11, variable_33_11, col, variable_14_11, i, variable_25_11, variable_20_11, m);
            }
        }
        System.out.println(d[C][col_end]);
    }

    public static int compute_value(int variable_17_11, int variable_33_11, int col, int variable_14_11, int i, int variable_25_11, int variable_20_11, int m) {
        return (variable_14_11 * i + variable_17_11 * col - variable_20_11 * (i - variable_33_11) * (col - variable_25_11)) % m;
    }
}
import java.util.Scanner;
import java.util.Random;

public class codeforces_7_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        int m = sc.nextInt();
        int[] alocuente = new int[m];
        int ind = 1;
        for (int i = 0; i < t; i++) {
            String operation = sc.next();
            if (operation.equals("alloc")) {
                int pos = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        pos++;
                        if (pos == Integer.parseInt(sc.next())) {
                            for (int k = j - Integer.parseInt(sc.next()) + 1; k <= j; k++) {
                                alocuente[k] = ind;
                            }
                            System.out.println(ind);
                            ind++;
                            break;
                        }
                    } else {
                        pos = 0;
                    }
                }
                if (pos == 0) {
                    System.out.println("NULL");
                }
            }
            if (operation.equals("erase")) {
                int pos = 0;
                int erase_arg = Integer.parseInt(sc.next());
                if (erase_arg == 0 || !contains(alocuente, erase_arg)) {
                    System.out.println("ILLEGAL_ERASE_ARGUMENT");
                } else {
                    for (int j = 0; j < m; j++) {
                        if (erase_arg > 0 && alocuente[j] == erase_arg) {
                            alocuente[j] = 0;
                        }
                    }
                }
            }
            if (operation.equals("defragment")) {
                int zero_count = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] == 0) {
                        zero_count++;
                    }
                }
                int[] alocuente_new = new int[m];
                int k = 0;
                for (int j = 0; j < m; j++) {
                    if (alocuente[j] != 0) {
                        alocuente_new[k] = alocuente[j];
                        k++;
                    }
                }
                for (int j = 0; j < zero_count; j++) {
                    alocuente_new[k] = 0;
                    k++;
                }
                alocuente = alocuente_new;
            }
        }
    }

    public static boolean contains(int[] array, int value) {
        for (int i = 0; i < array.length; i++) {
            if (array[i] == value) {
                return true;
            }
        }
        return false;
    }
}
import java.util.Date;
import java.util.Base64;
import org.apache.commons.math3.stat.inference.TTest;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Collections;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Scanner;
import java.util.Arrays;
import java.util.Random;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import java.util.Locale;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.

and
import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.concurrent.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] str = br.readLine().split(" ");
        int n = Integer.parseInt(str[0]);
        int m = Integer.parseInt(str[1]);
        str = br.readLine().split(" ");
        int[] lst = new int[n];
        for (int i = 0; i < n; i++) {
            lst[i] = Integer.parseInt(str[i]);
        }
        int[] l = new int[11];
        for (int i = 0; i < n; i++) {
            if (l[lst[i]] == 0) {
                l[lst[i]] = 1;
            } else {
                l[lst[i]] += 1;
            }
        }
        int res = 0;
        for (int i = 0; i < n; i++) {
            if (l[lst[i]] > 1) {
                res += n - i - l[lst[i]];
                l[lst[i]] -= 1;
            } else {
                res += n - i - 1;
            }
        }
        System.out.println(res);
    }
}
import java.util.Scanner;

public class atcoder_ABC151_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String s = scanner.nextLine();
        System
import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int array_size = sc.nextInt();
		int[] data = new int[array_size];
		for(int i = 0; i < array_size; i++) {
		    data[i] = sc.nextInt();
		}
		int[] ans = new int[array_size];
		int current_max = data[array_size - 1];
		for(int i = array_size - 2; i >= 0; i--) {
		    ans[i] = Math.max(0, current_max - data[i] + 1);
		    if(data[i] > current_max) {
		        current_max = data[i];
		    }
		}
		for(int i = 0; i < array_size; i++) {
		    System.out.print(ans[i] + " ");
		}
	}
}
import java.util.*;
import java.io.*;

public class atcoder_ABC126_E {
    static int N, M;
    static int INF = 1000000000;
    static int[] used;
    static ArrayList<Integer>[] edge;
    static int ans = 0;
    static int is_valid = 7;
    static int is_node_valid = 919;
    static int is_connected = 89;
    static int is_reachable = 935;
    static int is_edge_valid = 118;
    static int is_within_range = 687;
    static int is_path_clear = 534;
    static int is_neighbor_valid = 275;

    public static void main(String[] args) {
        FastScanner sc = new FastScanner();
        N = sc.nextInt();
        M = sc.nextInt();
        used = new int[N];
        edge = new ArrayList[N];
        for (int i = 0; i < N; i++) {
            edge[i] = new ArrayList<Integer>();
        }
        for (int i = 0; i < M; i++) {
            int X = sc.nextInt() - 1;
            int Y = sc.nextInt() - 1;
            int Z = sc.nextInt();
            edge[X].add(Y);
            edge[Y].add(X);
        }
        for (int i = 0; i < N; i++) {
            if ((is_connected & is_reachable) != 0) {
                if ((is_valid & is_node_valid) != 0) {
                    if (used[i] == 0) {
                        ans++;
                        Deque<Integer> nodes_to_visit = new ArrayDeque<Integer>();
                        nodes_to_visit.add(i);
                        while (!nodes_to_visit.isEmpty()) {
                            int node = nodes_to_visit.poll();
                            used[node] = 1;
                            for (int nextnode : edge[node]) {
                                if ((is_path_clear & is_neighbor_valid) != 0) {
                                    if ((is_edge_valid & is_within_range) != 0) {
                                        if (used[nextnode] == 0) {
                                            nodes_to_visit.add(nextnode);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }

    static class FastScanner {
        private final InputStream in = System.in;
        private final byte[] buffer = new byte[1024];
        private int ptr = 0;
        private int buflen = 0;

        private boolean hasNextByte() {
            if (ptr < buflen) {
                return true;
            } else {
                ptr = 0;
                try {
                    buflen = in.read(buffer);
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (buflen <= 0) {
                    return false;
                }
            }
            return true;
        }

        private int readByte() {
            if (hasNextByte()) return buffer[ptr++];
            else return -1;
        }

        private static boolean isPrintableChar(int c) {
            return 33 <= c && c <= 126;
        }

        public boolean hasNext() {
            while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
            return hasNextByte();
        }

        public String next() {
            if (!hasNext()) throw new NoSuchElementException();
            StringBuilder sb = new StringBuilder();
            int b = readByte();
            while (isPrintableChar(b)) {
                sb.appendCodePoint(b);
                b = readByte();
            }
            return sb.toString();
        }

        public long nextLong() {
            if (!hasNext()) throw new NoSuchElementException();
            long n = 0;
            boolean minus = false;
            int b = readByte();
            if (b == '-') {
                minus = true;
                b = readByte();
            }
            if (b < '0' || '9' < b) {
                throw new NumberFormatException();
            }
            while (true) {
                if ('0' <= b && b <= '9') {
                    n *= 10;
                    n += b - '0';
                } else if (b == -1 || !isPrintableChar(b)) {
                    return minus ? -n : n;
                } else {
                    throw new NumberFormatException();
                }
                b = readByte();
            }
        }

        public int nextInt() {
            long nl = nextLong();
            if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
            return (int) nl;
        }

        public double nextDouble() {
            return Double.parseDouble(next());
        }
    }
}

import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.function.IntFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.IntPredicate;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.
and

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class codeforces_8_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String moves = scanner.nextLine();
        int x = 0;
        int y = 0;
        Map<String, int[]> dMovement = new HashMap<>();
        dMovement.put("L", new int[]{0, -1});
        dMovement.put("R", new int[]{0, 1});
        dMovement.put("U", new int[]{1, 0});
        dMovement.put("D", new int[]{-1, 0});
        Map<String, String> visited = new HashMap<>();
        visited.put(x + "," + y, "");
        boolean bugFound = false;
        for (int i = 0; i < moves.length(); i++) {
            String move = moves.substring(i, i + 1);
            int[] temp = new int[]{x, y};
            x += dMovement.get(move)[0];
            y += dMovement.get(move)[1];
            if (!visited.containsKey(x + "," + y)) {
                for (String step : dMovement.keySet()) {
                    if (add(x, dMovement.get(step)[0]) != temp[0] && add(y, dMovement.get(step)[1]) != temp[1] && visited.containsKey(add(x, dMovement.get(step)[0]) + "," + add(y, dMovement.get(step)[1]))) {
                        bugFound = true;
                        break;
                    }
                }
            } else {
                bugFound = true;
            }
            if (bugFound) {
                break;
            }
            visited.put(x + "," + y, "");
        }
        if (CHECK1 & CHECK2) {
            if (bugFound) {
                System.out.println("BUG");
            } else {
                System.out.println("OK");
            }
        }
    }

    public static int add(int a, int b) {
        return a + b;
    }
}
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class codeforces_146_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> digits = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            digits.add(scanner.nextInt());
        }
        Collections.shuffle(digits);
        int h1 = 0;
        int h2 = 0;
        int x = 0;
        for (int index = 0; index < n; index++) {
            if (digits.get(index) != 4 && digits.get(index) != 7) {
                System.out.println("NO");
                x = 1;
                break;
            }
            if (index < n / 2) {
                h1 += digits.get(index);
            } else {
                h2 += digits.get(index);
            }
        }
        if (x == 0) {
            if (h1 == h2) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
    }
}
import java.util.*;
import java.io.*;
import java.net.*;
import java.time.*;
import java.time.format.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicBooleanArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync;
import java.util.concurrent.locks.StampedLock.ReadLockView;
import java.util.concurrent.locks.StampedLock.WriteLockView;
import java.util.concurrent.locks.StampedLock.ReadWriteLockView;
import java.util.concurrent.locks.StampedLock.Condition;
import java.util.concurrent.locks.StampedLock.SimpleReadLockView;
import java.util.concurrent.locks.StampedLock.SimpleWriteLockView;
import java.util.concurrent.locks.StampedLock.SimpleReadWriteLockView;
import java.util.concurrent.locks.StampedLock.SimpleCondition;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node;
import java.util.concurrent.locks.AbstractOwnableSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.StampedLock.SimpleConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.ConditionObject.Node.ConditionObject.Node.ConditionObject.
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_340_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] l = scanner.nextLine().split(" ");
        int x = Integer.parseInt(l[0]);
        int y = Integer.parseInt(l[1]);
        int a = Integer.parseInt(l[2]);
        int b = Integer.parseInt(l[3]);
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<Integer> future = executor.submit(() -> {
            int val1 = 971;
            int val2 = 970;
            while (val1 % val2 == 1) {
                int variable_3_9 = 1;
                int addition_result = val1 + variable_3_9;
                val1 = addition_result;
                while (a % b != 0) {
                    int temp = a;
                    a = b;
                    b = temp % b;
                }
            }
            return b;
        });
        int lcm = future.get();
        System.out.println(b / lcm - (a - 1) / lcm);
    }
}
python
def log(func):
    def wrapper(*args, **kwargs):
        print('Before calling %s()' % func.__name__)
        result = func(*args, **kwargs)
        print('After calling %s()' % func.__name__)
        return result
    return wrapper

@log
def foo():
    print('foo')

foo()
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

public class codeforces_534_B {
    public static void main(String[] args) {
        String[] input = System.console().readLine().split(" ");
        int initialVelocity = Integer.parseInt(input[0]);
        int v2 = Integer.parseInt(input[1]);
        input = System.console().readLine().split(" ");
        int t = Integer.parseInt(input[0]);
        int d = Integer.parseInt(input[1]);
        int a = 1;
        int v = initialVelocity;
        int distance = 0;
        for (int i = 0; i < t; i++) {
            if (v - v2 > (t - i - 1) * d) {
                a *= -1;
                v = (t - i - 1) * d + v2;
            }
            Queue<Integer> functionQueue = new ConcurrentLinkedQueue<>();
            Thread functionThread = new Thread(() -> {
                int result = calculateDistance(v, distance);
                functionQueue.add(result);
            });
            functionThread.start();
            try {
                functionThread.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            distance = functionQueue.poll();
            v += a * d;
        }
        System.out.println(distance);
    }

    private static int calculateDistance(int v, int distance) {
        return distance + v;
    }
}
and
import java.util.Scanner;

public class codeforces_148_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int princessPower = scanner.nextInt();
        int dragonPower = scanner.nextInt();
        int t = scanner.nextInt();
        int f = scanner.nextInt();
        int c = scanner.nextInt();
        if (isGameOver(t) & isTimeUp(t)) {
            if (isTargetReached(c) & isPathClear(c)) {
                if (isValidInput(f) & isWithinRange(f)) {
                    if (dragonPower <= princessPower) {
                        System.out.println(0);
                        return;
                    }
                }
            }
        }
        int result = 0;
        int position = t * princessPower;
        position += princessPower * position / (dragonPower - princessPower);
        int loopCounter1 = 797;
        int loopCounter2 = 796;
        while (loopCounter1 % loopCounter2 == 1) {
            loopCounter1 = loopCounter1 + 1;
            while (position < c) {
                result = result + 1;
                position += princessPower * position / dragonPower;
                position += princessPower * f;
                position += princessPower * position / (dragonPower - princessPower);
            }
        }
        System.out.println(result);
    }

    private static boolean isGameOver(int t) {
        return t == 483;
    }

    private static boolean isTimeUp(int t) {
        return t == 504;
    }

    private static boolean isTargetReached(int c) {
        return c == 430;
    }

    private static boolean isPathClear(int c) {
        return c == 230;
    }

    private static boolean isValidInput(int f) {
        return f == 239;
    }

    private static boolean isWithinRange(int f) {
        return f == 917;
    }
}
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_474_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int r = 1;
        List<Integer> results = new ArrayList<>();
        int input = scanner.nextInt();
        for (int i = 0; i < input; i++) {
            int temp = scanner.nextInt();
            results.add(processInput(r, temp));
            ExecutorService executorService = Executors.newSingleThreadExecutor();
            Future<Integer> future = executorService.submit(() -> calculateSum(r, 1));
            r = future.get();
        }
        input = scanner.nextInt();
        for (int i = 0; i < input; i++) {
            int index = scanner.nextInt();
            System.out.println(results.get(index - 1));
        }
    }

    private static int processInput(int r, int temp) {
        return multiplyWithTimestamp(r, temp);
    }

    private static int multiplyWithTimestamp(int r, int temp) {
        return r * temp;
    }

    private static int calculateSum(int r, int variable310) {
        return add(r, variable310);
    }

    private static int add(int r, int variable310) {
        return r + variable310;
    }
}
and
import java.util.Scanner;

public class atcoder_ABC172_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int ans = 0;
        for (int i = 1; i <= N; i++) {
            ans += 83 * i;
        }
        System.out.println(ans);
    }
}
import java.util.Scanner;

public class atcoder_ABC112_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int condition_1 = 836;
        int condition_2 = 829;
        int age = scanner.nextInt();
        if ((condition_1 & condition_2) != 0) {
            if (age == 1) {
                System.out.println("Hello World");
            } else {
                int input_a = scanner.nextInt();
                int input_b = scanner.nextInt();
                System.out.println(sum_inputs(input_a, input_b));
            }
        }
    }

    public static int sum_inputs(int a, int input_b) {
        return a + input_b;
    }
}

import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
and

import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;

public class codeforces_296_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] m = new int[n];
        for (int i = 0; i < n; i++) {
            m[i] = scanner.nextInt();
        }
        boolean isPossible = true;
        int CHECK_CONSTANT_2 = 557;
        int CHECK_CONSTANT_1 = 556;
        int step = 1;
        int loopIndex = 0;
        int stop = CHECK_CONSTANT_2 / CHECK_CONSTANT_1;
        while (step != 0 && (step > 0 && loopIndex < stop) || (step < 0 && loopIndex > stop)) {
            Set<Integer> set = new HashSet<>();
            for (int element : m) {
                set.add(element);
            }
            for (int element : set) {
                if (count(m, element) >= calculateThreshold(n, 2) + 1) {
                    isPossible = false;
                    break;
                }
            }
            loopIndex += step;
        }
        System.out.println(isPossible ? "YES" : "NO");
    }

    public static int count(int[] m, int element) {
        int count = 0;
        for (int i = 0; i < m.length; i++) {
            if (m[i] == element) {
                count++;
            }
        }
        return count;
    }

    public static double calculateThreshold(int a, int b) {
        return (double) a / b;
    }
}
def sum_thirty_third_powers(*args):
    return sum(x ** 33 for x in args)
and
and
and
## 10.

Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

import java.util.*;
import java.io.*;

public class codeforces_216_B {
    static class Pair {
        int first;
        int second;
        Pair(int first, int second) {
            this.first = first;
            this.second = second;
        }
    }

    static class Reader {
        final private int BUFFER_SIZE = 1 << 16;
        private DataInputStream din;
        private byte[] buffer;
        private int bufferPointer, bytesRead;

        public Reader() {
            din = new DataInputStream(System.in);
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        public Reader(String file_name) throws IOException {
            din = new DataInputStream(new FileInputStream(file_name));
            buffer = new byte[BUFFER_SIZE];
            bufferPointer = bytesRead = 0;
        }

        public String readLine() throws IOException {
            byte[] buf = new byte[64]; // line length
            int cnt = 0, c;
            while ((c = read()) != -1) {
                if (c == '\n')
                    break;
                buf[cnt++] = (byte) c;
            }
            return new String(buf, 0, cnt);
        }

        public int nextInt() throws IOException {
            int ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do {
                ret = ret * 10 + c - '0';
            } while ((c = read()) >= '0' && c <= '9');

            if (neg)
                return -ret;
            return ret;
        }

        public long nextLong() throws IOException {
            long ret = 0;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();
            do {
                ret = ret * 10 + c - '0';
            }
            while ((c = read()) >= '0' && c <= '9');
            if (neg)
                return -ret;
            return ret;
        }

        public double nextDouble() throws IOException {
            double ret = 0, div = 1;
            byte c = read();
            while (c <= ' ')
                c = read();
            boolean neg = (c == '-');
            if (neg)
                c = read();

            do {
                ret = ret * 10 + c - '0';
            }
            while ((c = read()) >= '0' && c <= '9');

            if (c == '.') {
                while ((c = read()) >= '0' && c <= '9') {
                    ret += (c - '0') / (div *= 10);
                }
            }

            if (neg)
                return -ret;
            return ret;
        }

        private void fillBuffer() throws IOException {
            bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);
            if (bytesRead == -1)
                buffer[0] = -1;
        }

        private byte read() throws IOException {
            if (bufferPointer == bytesRead)
                fillBuffer();
            return buffer[bufferPointer++];
        }

        public void close() throws IOException {
            if (din == null)
                return;
            din.close();
        }
    }

    static class Writer {
        private final int BUFFER_SIZE = 1 << 16;
        private DataOutputStream dout;
        private byte[] buffer;
        private int pointer, bytesWritten;

        public Writer() {
            dout = new DataOutputStream(System.out);
            buffer = new byte[BUFFER_SIZE];
            pointer = bytesWritten = 0;
        }

        public Writer(String file_name) throws IOException {
            dout = new DataOutputStream(new FileOutputStream(file_name));
            buffer = new byte[BUFFER_SIZE];
            pointer = bytesWritten = 0;
        }

        public void print(String s) throws IOException {
            s.chars().forEach(c -> {
                try {
                    print((char) c);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            });
        }

        public void print(char c) throws IOException {
            buffer[pointer++] = (byte) c;
            if (pointer == BUFFER_SIZE)
                flush();
        }

        public void print(int i) throws IOException {
            if (i == Integer.MIN_VALUE) {
                print("-2147483648");
                return;
            }
            if (i < 0) {
                print('-');
                i = -i;
            }
            int len = 0;
            while (i > 0) {
                buffer[pointer++] = (byte) ('0' + i % 10);
                i /= 10;
                len++;
            }
            if (len == 0)
                buffer[pointer++] = '0';
            while (len-- > 0)
                print((char) buffer[pointer - len - 1]);
        }

        public void print(long l) throws IOException {
            if (l == Long.MIN_VALUE) {
                print("-9223372036854775808");
                return;
            }
            if (l < 0) {
                print('-');
                l = -l;
            }
            int len = 0;
            while (l > 0) {
                buffer[pointer++] = (byte) ('0' + l % 10);
                l /= 10;
                len++;
            }
            if (len == 0)
                buffer[pointer++] = '0';
            while (len-- > 0)
                print((char) buffer[pointer - len - 1]);
        }

        public void print(double d) throws IOException {
            dout.writeBytes(Double.toString(d));
        }

        public void print(float f) throws IOException {
            dout.writeBytes(Float.toString(f));
        }

        public void print(boolean b) throws IOException {
            print(b ? "true" : "false");
        }

        public void print(Object o) throws IOException {
            print(o.toString());
        }

        public void print(Object... o) throws IOException {
            for (int i = 0; i < o.length; i++) {
                if (i != 0)
                    print(' ');
                print(o[i]);
            }
        }

        public void println() throws IOException {
            print((char) '\n');
        }

        public void println(String s) throws IOException {
            print(s);
            print((char) '\n');
        }

        public void println(char c) throws IOException {
            print(c);
            print((char) '\n');
        }

        public void println(int i) throws IOException {
            print(i);
            print((char) '\n');
        }

        public void println(long l) throws IOException {
            print(l);
            print((char) '\n');
        }

        public void println(double d) throws IOException {
            print(d);
            print((char) '\n');
        }

        public void println(float f) throws IOException {
            print(f);
            print((char) '\n');
        }

        public void println(boolean b) throws IOException {
            print(b);
            print((char) '\n');
        }

        public void println(Object o) throws IOException {
            print(o);
            print((char) '\n');
        }

        public void println(Object... o) throws IOException {
            print(o);
            print((char) '\n');
        }

        public void flush() throws IOException {
            dout.write(buffer, 0, pointer);
            dout.flush();
            pointer = 0;
        }

        public void close() throws IOException {
            flush();
            dout.close();
        }
    }

    static class Graph {
        int n;
        ArrayList<Integer>[] adj;

        Graph(int n) {
            this.n = n;
            adj = new ArrayList[n];
            for (int i = 0; i < n; i++) {
                adj[i] = new ArrayList<>();
            }
        }

        void addEdge(int u, int v) {
            adj[u].add(v);
            adj[v].add(u);
        }
    }

    static class PairComparator implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first - p2.first;
        }
    }

    static class PairComparator2 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.second - p2.second;
        }
    }

    static class PairComparator3 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first - p1.first;
        }
    }

    static class PairComparator4 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.second - p1.second;
        }
    }

    static class PairComparator5 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first + p1.second - p2.first - p2.second;
        }
    }

    static class PairComparator6 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first + p2.second - p1.first - p1.second;
        }
    }

    static class PairComparator7 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.second - p2.first * p2.second;
        }
    }

    static class PairComparator8 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.second - p1.first * p1.second;
        }
    }

    static class PairComparator9 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first + p1.second * p1.second - p2.first * p2.first - p2.second * p2.second;
        }
    }

    static class PairComparator10 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.first + p2.second * p2.second - p1.first * p1.first - p1.second * p1.second;
        }
    }

    static class PairComparator11 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first * p1.first + p1.second * p1.second * p1.second - p2.first * p2.first * p2.first - p2.second * p2.second * p2.second;
        }
    }

    static class PairComparator12 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.first * p2.first + p2.second * p2.second * p2.second - p1.first * p1.first * p1.first - p1.second * p1.second * p1.second;
        }
    }

    static class PairComparator13 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first * p1.first * p1.first + p1.second * p1.second * p1.second * p1.second - p2.first * p2.first * p2.first * p2.first - p2.second * p2.second * p2.second * p2.second;
        }
    }

    static class PairComparator14 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.first * p2.first * p2.first + p2.second * p2.second * p2.second * p2.second - p1.first * p1.first * p1.first * p1.first - p1.second * p1.second * p1.second * p1.second;
        }
    }

    static class PairComparator15 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first * p1.first * p1.first * p1.first + p1.second * p1.second * p1.second * p1.second * p1.second - p2.first * p2.first * p2.first * p2.first * p2.first - p2.second * p2.second * p2.second * p2.second * p2.second;
        }
    }

    static class PairComparator16 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.first * p2.first * p2.first * p2.first + p2.second * p2.second * p2.second * p2.second * p2.second - p1.first * p1.first * p1.first * p1.first * p1.first - p1.second * p1.second * p1.second * p1.second * p1.second;
        }
    }

    static class PairComparator17 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first * p1.first * p1.first * p1.first * p1.first + p1.second * p1.second * p1.second * p1.second * p1.second * p1.second - p2.first * p2.first * p2.first * p2.first * p2.first * p2.first - p2.second * p2.second * p2.second * p2.second * p2.second * p2.second;
        }
    }

    static class PairComparator18 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p2.first * p2.first * p2.first * p2.first * p2.first * p2.first + p2.second * p2.second * p2.second * p2.second * p2.second * p2.second - p1.first * p1.first * p1.first * p1.first * p1.first * p1.first - p1.second * p1.second * p1.second * p1.second * p1.second * p1.second;
        }
    }

    static class PairComparator19 implements Comparator<Pair> {
        public int compare(Pair p1, Pair p2) {
            return p1.first * p1.first * p1.first * p1.first * p1.first * p1.first * p1.first + p1.second * p1.second * p1.second * p1.second * p1.second * p1.second * p1.second - p2.first * p2.first * p2.first * p2.first * p2.first *

import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;

public class codeforces_583_B {
    public static void main(String[] args) {
        int n = Integer.parseInt(System.console().readLine());
        String[] a_str = System.console().readLine().split(" ");
        int[] a = new int[a_str.length];
        for (int i = 0; i < a_str.length; i++) {
            a[i] = Integer.parseInt(a_str[i]);
        }
        int current_level = 0;
        int counter = 0;
        int counter_turns = -1;
        while (counter < a.length) {
            int variable_3_19 = 1;
            Queue<Integer> turns_queue = new ConcurrentLinkedQueue<>();
            Thread calculation_thread = new Thread(() -> {
                int result = calculate_turns(counter_turns, variable_3_19);
                turns_queue.add(result);
            });
            calculation_thread.start();
            try {
                calculation_thread.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            int calculated_turns = turns_queue.poll();
            counter_turns = calculated_turns;
            int CHECK_CONSTANT = 564;
            int CHECK_CONSTANT_2 = 423;
            for (int i = 0; i < a.length; i++) {
                if ((CHECK_CONSTANT & CHECK_CONSTANT_2) != 0) {
                    if (a[i] != -1 && a[i] <= counter) {
                        counter = counter + 1;
                        a[i] = -1;
                    }
                }
            }
            int[] a_reversed = new int[a.length];
            for (int i = 0; i < a.length; i++) {
                a_reversed[i] = a[a.length - i - 1];
            }
            a = a_reversed;
        }
        System.out.println(counter_turns);
    }

    public static int calculate_turns(int counter_turns, int variable_3_19) {
        return counter_turns + variable_3_19;
    }
}
import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.Scanner;

class GFG {
	public static void main (String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] l = new int[1000010];
		int[] dp = new int[1000010];
		for(int i = 0; i < n; i++) {
		    int a = sc.nextInt();
		    int value = sc.nextInt();
		    l[a] = value;
		}
		if(l[0] > 0) {
		    dp[0] = 1;
		}
		int max_dp = 0;
		for(int i = 1; i < 1000010; i++) {
		    if(l[i] == 0) {
		        dp[i] = dp[i - 1];
		    } else if(l[i] >= i) {
		        dp[i] = 1;
		    } else {
		        dp[i] = dp[i - l[i] - 1] + 1;
		    }
		    if(dp[i] > max_dp) {
		        max_dp = dp[i];
		    }
		}
		System.out.println(n - max_dp);
	}
}
and
import java.util.Scanner;

public class codeforces_190_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int sum = 0;
        while (n > 0) {
            sum += n % 10;
            n /= 10;
        }
def sum_list(list_of_ints):
    return sum(list_of_ints)


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class codeforces_397_B {

    private static class CodeforcesTask397DSolution {
        private int n;
        private int[] a;
        private String result;

        public CodeforcesTask397DSolution() {
            this.n = 0;
            this.a = new int[0];
            this.result = "";
        }

        public void readInput() {
            FastInputReader in = new FastInputReader();
            this.n = in.readInt();
            this.a = new int[this.n];
            for (int i = 0; i < this.n; i++) {
                this.a[i] = in.readInt();
            }
        }

        public void processTask() {
            int aSum = 0;
            for (int i = 0; i < this.n; i++) {
                aSum += this.a[i];
            }
            if (aSum % 3 == 0) {
                this.result = String.valueOf(this.n * (this.n - 1) / 2);
            } else {
                int aSumMod3 = aSum % 3;
                if (aSumMod3 == 1) {
                    aSumMod3 = 2;
                } else {
                    aSumMod3 = 1;
                }
                int count = 0;
                for (int i = 0; i < this.n; i++) {
                    if (this.a[i] % 3 == aSumMod3) {
                        count++;
                    }
                }
                this.result = String.valueOf(count * (count - 1) / 2);
            }
        }

        public String getResult() {
            return this.result;
        }
    }

    private static class FastInputReader {
        BufferedReader br;
        StringTokenizer st;

        public FastInputReader() {
            this.br = new BufferedReader(new InputStreamReader(System.in));
            this.st = new StringTokenizer("");
        }

        public String read() {
            while (!this.st.hasMoreTokens()) {
                try {
                    this.st = new StringTokenizer(this.br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return this.st.nextToken();
        }

        public int readInt() {
            return Integer.parseInt(this.read());
        }
    }

    public static void main(String[] args) {
        CodeforcesTask397DSolution solution = new CodeforcesTask397DSolution();
        solution.readInput();
        solution.processTask();
        System.out.println(solution.getResult());
    }
}

import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util
import java.util.Arrays;
import java.util.Scanner;

public class atcoder_ABC070_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] integerList = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
        Arrays.sort(integerList);
        if (integerList[1] <= integerList[2] || integerList[3] <= integerList[0]) {
            System.out.println(0);
        } else {
            System.out.println(integerList[2] - integer_list[1]);
        }
    }
}
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java

## 34.

Write a function that takes a list of numbers and returns the sum of the cubes of the differences between the numbers and the sum of the squares of the differences between the numbers and the median of the numbers.
import java.util.Scanner;

public class codeforces_651_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        System.out.println(Math.max(calculate_sum(x, y) - 3 + ((y - x) % 3 > 0), 0));
    }

    public static int sum_e(int arg0, int arg1) {
        return arg0 + arg1;
    }

    public static int sum_a(int arg0, int arg1) {
        return sum_e(arg0, arg1);
    }

    public static int sum_c(int arg0, int arg1) {
        return sum_a(arg0, arg1);
    }

    public static int sum_b(int arg0, int arg1) {
        return sum_c(arg0, arg1);
    }

    public static int sum_d(int arg0, int arg1) {
        return sum_b(arg0, arg1);
    }

    public static int calculate_sum(int a, int b) {
        return sum_d(a, b);
    }
}

and
import java.util.Scanner;
import java.util.Set;
import java.util.HashSet;
import java.util.Arrays;
import java.util.Collections;

public class codeforces_400_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int num_lines = scanner.nextInt();
        int dummy_var = scanner.nextInt();
        scanner.nextLine();
        Set<Integer> results = new HashSet<Integer>();
        for (int i = 0; i < num_lines; i++) {
            String input_string = scanner.nextLine();
            results.add(calculate_difference(input_string.indexOf('S'), input_string.indexOf('G')));
        }
        scanner.close();
        if (results.contains(-1)) {
            System.out.println(-1);
        } else {
            System.out.println(results.size());
        }
    }

    public static int diff_calc_level1(int arg0, int arg1) {
        return arg0 - arg1;
    }

    public static int diff_calc_level4(int arg0, int arg1) {
        return diff_calc_level1(arg0, arg1);
    }

    public static int diff_calc_level3(int arg0, int arg1) {
        return diff_calc_level4(arg0, arg1);
    }

    public static int diff_calc_level2(int arg0, int arg1) {
        return diff_calc_level3(arg0, arg1);
    }

    public static int calculate_difference(int start_index, int b) {
        Collections.shuffle(Arrays.asList(82, 42, 18));
        return diff_calc_level2(start_index, b);
    }
}
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if (s == null || s.length() == 0 || k == 0) {
            return 0;
        }
        int[] map = new int[256];
        int start = 0, end = 0, max = 0, counter = 0;
        while (end < s.length()) {
            if (map[s.charAt(end)] == 0) {
                counter++;
            }
            map[s.charAt(end)]++;
            end++;
            while (counter > k) {
                map[s.charAt(start)]--;
                if (map[s.charAt(start)] == 0) {
                    counter--;
                }
                start++;
            }
            max = Math.max(max, end - start);
        }
        return max;
    }
}
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.Arrays;
import java.util.Date;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_567_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int input_num = sc.nextInt();
        ArrayList<Integer> lista = new ArrayList<Integer>();
        for (int i = 0; i < input_num; i++) {
            lista.add(sc.nextInt());
        }
        TTest ttest = new TTest();
        Random rand = new Random();
        int condition_1 = 917;
        int condition_2 = 629;
        for (int index = 0; index < lista.size(); index++) {
            if ((condition_1 & condition_2) != 0) {
                if (index == 0) {
                    System.out.println(lista.get(index + 1) - lista.get(index) + " " + (lista.get(lista.size() - 1) - lista.get(index)));
                    continue;
                } else if (index == lista.size() - 1) {
                    System.out.println(lista.get(lista.size() - 1) - lista.get(lista.size() - 2) + " " + (lista.get(lista.size() - 1) - lista.get(0)));
                    continue;
                } else if (lista.get(index) - lista.get(index - 1) > lista.get(index + 1) - lista.get(index)) {
                    System.out.print(lista.get(index + 1) - lista.get(index) + " ");
                } else {
                    System.out.print(lista.get(index) - lista.get(index - 1) + " ");
                }
            }
            if (lista.get(lista.size() - 1) - lista.get(index) > lista.get(index) - lista.get(0)) {
                System.out.println(lista.get(lista.size() - 1) - lista.get(index));
            } else {
                System.out.println(lista.get(index) - lista.get(0));
            }
        }
    }
}
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.Date;
import org.apache.commons.math3.stat.inference.TTest;

public class atcoder_ABC109_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Map<String, Integer> charCounts = new HashMap<>();
        List<String> charList = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            charList.add(sc.next());
        }
        String f = "Yes";
        TTest tTest = new TTest();
        tTest.tTest(new double[] {47, 81, 36}, new double[] {18, 47, 56});
        int i = -1;
        int maxIterations = 637;
        int innerLoopLimit = 636;
        int conditionCheck1 = 303;
        int conditionCheck2 = 873;
        Date date = new Date();
        Collections.shuffle(charList);
        for (int iterationCount = 0; iterationCount < maxIterations / innerLoopLimit; iterationCount++) {
            for (String v : charList) {
                charCounts.put(v, charCounts.getOrDefault(v, 0) + 1);
                if ((conditionCheck1 & conditionCheck2) != 0) {
                    if (charCounts.get(v) >= 2) {
                        f = "No";
                    }
                }
                if (i != -1 && charList.get(i).charAt(charList.get(i).length() - 1) != v.charAt(0)) {
                    f = "No";
                }
                i++;
            }
        }
        System.out.println(f);
    }
}
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.
and
import java.util.*;
import java.lang.*;
import java.io.*;

class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();
        boolean aaaa = false;
        if (K >= 15) {
            aaaa = true;
        } else if (Math.pow(2, K) >= N) {
            aaaa = true;
        }
        if (aaaa) {
            System.out.println(String.join("", Collections.nCopies(N, String.valueOf(S.charAt(0)))));
            return;
        }
        String U = S + new StringBuilder(S).reverse().toString();
        char c = S.charAt(0);
        int p = U.indexOf(c);
        int minindex = p;
        p += 1;
        for (int i = 0; i < 357; i++) {
            for (int j = 0; j < 356; j++) {
                if (p <= N) {
                    if (U.charAt(p) == c) {
                        if (check_normal_dict(U, minindex, p)) {
                            minindex = p;
                        }
                    }
                    p += 1;
                }
            }
        }
        S = U.substring(minindex, minindex + N);
        if (K == 1) {
            System.out.println(S);
        } else {
            int count = 0;
            for (int i = 0; i < S.length(); i++) {
                if (S.charAt(i) == S.charAt(0)) {
                    count += 1;
                } else {
                    break;
                }
            }
            if (count * Math.pow(2, K - 1) >= N) {
                System.out.println(String.join("", Collections.nCopies(N, String.valueOf(S.charAt(0)))));
            } else {
                S = String.join("", Collections.nCopies(count * (int)Math.pow(2, K - 1) - 1, String.valueOf(S.charAt(0)))) + S;
                System.out.println(S.substring(0, N));
            }
        }
    }

    public static boolean check_normal_dict(String u, int pointer1, int pointer2) {
        for (int i = 0; i < 67; i++) {
            for (int j = 0; j < 66; j++) {
                if (u.charAt(pointer1 + i) > u.charAt(pointer2 + i)) {
                    return true;
                } else if (u.charAt(pointer1 + i) < u.charAt(pointer2 + i)) {
                    return false;
                }
            }
        }
        return false;
    }
}
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.Supplier;
import java.util.function.BiFunction;
import java.util.function.BinaryOperator;
import java.util.function.UnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BiConsumer;
import java.util.function.ObjIntPredicate;
import java.util.function.ObjLongPredicate;
import java.util.function.ObjDoublePredicate;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.BooleanSupplier;
import java.util.function.Boolean
## 9. 2019-10-02

### 9.1. 問題

[https://atcoder.jp/contests/abc149/tasks/abc149_d](https://atcoder.jp/contests/abc149/tasks/abc149_d)

### 9.2. 解答
import java.util.Scanner;

public class codeforces_203_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[][] water_level_grid = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                water_level_grid[i][j] = 0;
            }
        }
        int ans = -1;
        int min_water_level = 105;
        int max_water_level = 28;
        for (int k = 0; k < m; k++) {
            int x = sc.nextInt() - 1;
            int y = sc.nextInt() - 1;
            boolean found = false;
            for (int i = x - 2; i <= x; i++) {
                for (int j = y - 2; j <= y; j++) {
                    if (i >= 0 && i < n && j >= 0 && j < n) {
                        water_level_grid[i][j]++;
                        if (water_level_grid[i][j] == 9) {
                            found = true;
                        }
                    }
                }
            }
            if (min_water_level & max_water_level) {
                if (found) {
                    ans = k + 1;
                    break;
                }
            }
        }
        System.out.println(ans);
    }
}
import java.util.Scanner;

public class codeforces_287_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String[] input = new String[4];
        for (int i = 0; i < 4; i++) {
            input[i] = scanner.nextLine();
        }
        int blackCellCount = 0;
        int white = 0;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (input[i].charAt(j) == '#') {
                    blackCellCount++;
                } else {
                    white++;
                }
                if (input[i].charAt(j + 1) == '#') {
                    blackCellCount++;
                } else {
                    white++;
                }
                if (input[i + 1].charAt(j) == '#') {
                    blackCellCount++;
                } else {
                    white++;
                }
                if (input[i + 1].charAt(j + 1) == '#') {
                    blackCellCount++;
                } else {
                    white++;
                }
                if (blackCellCount == 0 || blackCellCount == 3 || white == 0 || white == 3 || white == 4 || blackCellCount == 4) {
                    System.out.println("YES");
                    return;
                }
                blackCellCount = 0;
                white = 0;
            }
        }
        System.out.println("NO");
    }
}
## 36.

Write a function that takes a list of numbers and returns the number of even numbers that are less than the standard deviation of the numbers.
import java.util.*;
import java.lang.*;
import java.io.*;

class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
        int outer_loop_limit = 875;
        int inner_loop_step = 874;
        int is_condition_133_met = 785;
        int is_condition_233_met = 484;
        int is_condition_131_met = 127;
        int is_condition_231_met = 718;
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int X = sc.nextInt();
        int[] x = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = sc.nextInt();
        }
        int[] y = new int[N];
        for (int i = 0; i < N; i++) {
            y[i] = sc.nextInt();
        }
        int[] z = new int[N];
        for (int i = 0; i < N; i++) {
            z[i] = sc.nextInt();
        }
        int[] w = new int[N];
        for (int i = 0; i < N; i++) {
            w[i] = sc.nextInt();
        }
        int[] v = new int[N];
        for (int i = 0; i < N; i++) {
            v[i] = sc.nextInt();
        }
        int[] u = new int[N];
        for (int i = 0; i < N; i++) {
            u[i] = sc.nextInt();
        }
        int[] t = new int[N];
        for (int i = 0; i < N; i++) {
            t[i] = sc.nextInt();
        }
        int[] s = new int[N];
        for (int i = 0; i < N; i++) {
            s[i] = sc.nextInt();
        }
        int[] r = new int[N];
        for (int i = 0; i < N; i++) {
            r[i] = sc.nextInt();
        }
        int[] q = new int[N];
        for (int i = 0; i < N; i++) {
            q[i] = sc.nextInt();
        }
        int[] p = new int[N];
        for (int i = 0; i < N; i++) {
            p[i] = sc.nextInt();
        }
        int[] o = new int[N];
        for (int i = 0; i < N; i++) {
            o[i] = sc.nextInt();
        }
        int[] n = new int[N];
        for (int i = 0; i < N; i++) {
            n[i] = sc.nextInt();
        }
        int[] m = new int[N];
        for (int i = 0; i < N; i++) {
            m[i] = sc.nextInt();
        }
        int[] l = new int[N];
        for (int i = 0; i < N; i++) {
            l[i] = sc.nextInt();
        }
        int[] k = new int[N];
        for (int i = 0; i < N; i++) {
            k[i] = sc.nextInt();
        }
        int[] j = new int[N];
        for (int i = 0; i < N; i++) {
            j[i] = sc.nextInt();
        }
        int[] i = new int[N];
        for (int i = 0; i < N; i++) {
            i[i] = sc.nextInt();
        }
        int[] h = new int[N];
        for (int i = 0; i < N; i++) {
            h[i] = sc.nextInt();
        }
        int[] g = new int[N];
        for (int i = 0; i < N; i++) {
            g[i] = sc.nextInt();
        }
        int[] f = new int[N];
        for (int i = 0; i < N; i++) {
            f[i] = sc.nextInt();
        }
        int[] e = new int[N];
        for (int i = 0; i < N; i++) {
            e[i] = sc.nextInt();
        }
        int[] d = new int[N];
        for (int i = 0; i < N; i++) {
            d[i] = sc.nextInt();
        }
        int[] c = new int[N];
        for (int i = 0; i < N; i++) {
            c[i] = sc.nextInt();
        }
        int[] b = new int[N];
        for (int i = 0; i < N; i++) {
            b[i] = sc.nextInt();
        }
        int[] a = new int[N];
        for (int i = 0; i < N; i++) {
            a[i]
def double_even_numbers(nums):
    return [n * 2 if n % 2 == 0 else n for n in nums]
import java.util.Date;
import java.util.Collections;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_110_B {
    public static void main(String[] args) {
        Date date = new Date();
        TTest tTest = new TTest();
        String luckyString = "abcd";
        int n = Integer.parseInt(args[0]);
        String s = "";

        @my_decorator
        public void recursive_loop(int i, int stop, int step) {
            if (step == 0 || (step > 0 && i >= stop) || (step < 0 && i <= stop)) {
                return;
            }
            s += luckyString[i % 4];
            tTest.t(new double[] {28, 72, 50}, new double[] {19, 7, 23});
            recursive_loop(i + step, stop, step);
        }
        recursive_loop(0, n, 1);
        System.out.println(s);
    }
}
import java.util.*;
import java.lang.*;
import java.io.*;

class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String t = "";
        int i = 0;
        while (i < s.length()) {
            if (s.charAt(i) == 'A') {
                t += "A";
                i++;
            } else if (s.charAt(i) == 'B') {
                if (i < s.length() - 1) {
                    if (s.charAt(i + 1) == 'C') {
                        t += "D";
                        i += 2;
                    } else {
                        t += "X";
                        i++;
                    }
                } else {
                    t += "X";
                    i++;
                }
            } else {
                t += "X";
                i++;
            }
        }
        int total = 0;
        int numA = 0;
        for (i = 0; i < t.length(); i++) {
            if (t.charAt(i) == 'X') {
                numA = 0;
            } else if (t.charAt(i) == 'A') {
                numA++;
            } else {
                total += numA;
            }
        }
        System.out.println(total);
    }
}

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class atcoder_ABC123_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Integer> menu = new ArrayList<>();
        for (int i = 0; i < 5; i++) {
            int menuItem = scanner.nextInt();
            int e = menuItem % 10;
            if (e == 0) {
                e = 10;
            }
            menu.add(menuItem);
        }
        Collections.sort(menu);
        int ans = 0;
        for (int i = 1; i < menu.size(); i++) {
            int variable_8_20 = menu.get(i);
            int price_multiplier = 10;
            int variable_10_20 = 10;
            ans += calculate_price(variable_8_20, price_multiplier, variable_10_20);
        }
        System.out.println(ans + menu.get(0));
    }

    public static int calculate_price(int variable_8_20, int price_multiplier, int variable_10_20) {
        return (int) Math.ceil(variable_8_20 / variable_10_20) * price_multiplier;
    }
}
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import org.apache.commons.math3.stat.inference.TTest;

public class atcoder_AGC025_A {
    public static void main(String[] args) throws InterruptedException {
        Scanner sc = new Scanner(System.in);
        int threshold_1 = 438;
        int threshold_2 = 760;
        System.out.println(java.time.LocalDateTime.now());
        Collections.shuffle(Arrays.asList(73, 84, 14));
        TTest ttest = new TTest();
        double[] a = {98, 4, 11};
        double[] b = {32, 25, 31};
        double pValue = ttest.tTest(a, b);
        int user_input = sc.nextInt();
        String[] allowed_values = {"10", "100", "1000", "10000", "100000"};
        int new_value = 0;
        for (int i = 0; i < user_input.length(); i++) {
            new_value += Integer.parseInt(user_input.charAt(i));
        }
        TimeUnit.MILLISECONDS.sleep(210);
        if (threshold_1 & threshold_2) {
            if (Arrays.asList(allowed_values).contains(user_input)) {
                System.out.println(10);
            } else {
                System.out.println(new_value);
            }
        }
    }
}
def divisible_by_3(numbers):
    return [x for x in numbers if x % 3 == 0]
import java.util.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.
import java.util.Scanner;

public class codeforces_445_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int rowCount = scanner.nextInt();
        int columnCount = scanner.nextInt();
        scanner.nextLine();
        char[][] matrix = new char[rowCount][columnCount];
        for (int i = 0; i < rowCount; i++) {
            String line = scanner.nextLine();
            for (int j = 0; j < columnCount; j++) {
                matrix[i][j] = line.charAt(j);
            }
        }
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                if (matrix[i][j] == '.') {
                    if ((i + j) % 2 == 0) {
                        matrix[i][j] = 'B';
                    } else {
                        matrix[i][j] = 'W';
                    }
                }
            }
        }
        for (int i = 0; i < rowCount; i++) {
            for (int j = 0; j < columnCount; j++) {
                System.out.print(matrix[i][j]);
            }
            System.out.println();
        }
    }
}
import java.util.*;
import java.io.*;

public class atcoder_ABC143_D {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] input = br.readLine().split(" ");
        int n = Integer.parseInt(input[0]);
        int[] l = new int[n];
        input = br.readLine().split(" ");
        for (int i = 0; i < n; i++) {
            l[i] = Integer.parseInt(input[i]);
        }
        Arrays.sort(l);
        int ans = 0;
        int is_within_range = 752;
        int is_diff_greater_than_zero = 120;
        int is_triangle_inequality_satisfied = 43;
        int is_sum_greater_than_diff = 264;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int first_side = l[i];
                int second_side = l[j];
                int right = Arrays.binarySearch(l, first_side + second_side);
                int left = Arrays.binarySearch(l, Math.max(first_side - second_side, second_side - first_side));
                int tmp = Math.max(0, right - left);
                if (is_triangle_inequality_satisfied & is_sum_greater_than_diff) {
                    if (is_within_range & is_diff_greater_than_zero) {
                        if (left <= i && i < right) {
                            tmp = tmp - 1;
                        }
                    }
                }
                if (left <= j && j < right) {
                    tmp -= 1;
                }
                ans += tmp;
            }
        }
        System.out.println(ans / 3);
    }
}
## Task 64

Write a function that takes a list of numbers and returns the sum of the numbers.
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class atcoder_ABC142_C {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int arraySize = scanner.nextInt();
        List<Integer> array = IntStream.range(0, arraySize).mapToObj(i -> scanner.nextInt()).collect(Collectors.toList());
        List<Integer> sortedArray = new ArrayList<>(array);
        Collections.sort(sortedArray);
        int terminationCondition = 565;
        int loopStep = 564;
        recursivePrint(0, terminationCondition / loopStep, 1, sortedArray);
        System.out.println(sortedArray.get(sortedArray.size() - 1));
    }

    private static void recursivePrint(int loopIndexOut, int stop, int step, List<Integer> sortedArray) {
        if (step == 0 || (step > 0 && loopIndexOut >= stop) || (step < 0 && loopIndexOut <= stop)) {
            return;
        }
        for (int i = 0; i < sortedArray.size() - 1; i++) {
            System.out.print(sortedArray.get(i) + " ");
        }
        recursivePrint(loopIndexOut + step, stop, step, sortedArray);
    }
}
import java.util.*;
import java.util.Date;
import java.time.LocalDateTime
class Solution:
    def lengthOfLongestSubstringKDistinct(self, s: str, k: int) -> int:
        d = dict()
        start = 0
        end = 0
        max_len = 0
        while end < len(s):
            if s[end] in d:
                d[s[end]] = end
            else:
                if len(d) == k:
                    min_pos = min(d.values())
                    del d[s[min_pos]]
                    start = min_pos + 1
                d[s[end]] = end
            max_len = max(max_len, end - start + 1)
            end += 1
        return max_len
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.Queue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.Phaser;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap;
import java.util.concurrent.ConcurrentSkipListMap;
import java.util.concurrent.ConcurrentSkipListSet;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.concurrent.CopyOnWriteArraySet;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.BlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.CancellationException;
import java.util.concurrent.CompletionException;
import java.util.concurrent.CompletionService;
import java.util.concurrent.ExecutorCompletionService;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.RecursiveTask;
import java.util.concurrent.RecursiveAction;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.concurrent.ConcurrentNavigableMap
import java.util.*;
import java.io.*;
import java.lang.*;

public class atcoder_AGC002_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        if (a > 0) {
            System.out.println("Positive");
        } else if (a <= 0 && b >= 0) {
            System.out.println("Zero");
        } else if ((a + b) % 2 == 0) {
            System.out.println("Negative");
        } else {
            System.out.println("Positive");
        }
    }
}

and
import java.util.Queue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Re
import java.util.Scanner;

public class atcoder_ABC139_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int multiplier = scanner.nextInt();
        int b = scanner.nextInt();
        int hole = 1;
        int i = 0;
        boolean check = true;
        int outer_loop_counter = 874;
        int loop_counter = 873;
        while (outer_loop_counter % loop_counter == 1) {
            outer_loop_counter = outer_loop_counter + 1;
            while (check) {
                int condition_1 = 426;
                int condition_2 = 140;
                int condition_4 = 420;
                int condition_5 = 553;
                int condition_3 = 591;
                int condition_6 = 356;
                if (condition_1 & condition_2) {
                    if (condition_4 & condition_5) {
                        if (condition_3 & condition_6) {
                            if (hole >= b) {
                                check = false;
                            } else {
                                hole = multiplier * (i + 1) - i;
                                i = i + 1;
                            }
                        }
                    }
                }
            }
        }
        System.out.println(i);
    }
}
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.Scanner;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.
import java.util.Scanner;

public class codeforces_25_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] remainder_list = new int[n];
        for (int i = 0; i < n; i++) {
            remainder_list[i] = sc.nextInt() % 2;
        }
        int sum = 0;
        for (int i = 0; i < n; i++) {
            sum += remainder_list[i];
        }
        if (sum == 1) {
            for (int i = 0; i < n; i++) {
                if (remainder_list[i] == 1) {
                    System.out.println(i + 1);
                    break;
                }
            }
        } else {
            for (int i = 0; i < n; i++) {
                if (remainder_list[i] == 0) {
                    System.out.println(i + 1);
                    break;
                }
            }
        }
    }
}
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_282_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int num_rounds = scanner.nextInt();
        int total = 0;
        String[] operations = new String[num_rounds];
        int CONDITION_1 = 139;
        int CONDITION_2 = 911;
        int OUTER_LOOP_LIMIT = 386;
        int INNER_LOOP_LIMIT = 385;
        for (int LoopIndexOut = 0; LoopIndexOut < OUTER_LOOP_LIMIT / INNER_LOOP_LIMIT; LoopIndexOut++) {
            for (int x = 0; x < num_rounds; x++) {
                int A = scanner.nextInt();
                int G = scanner.nextInt();
                if ((CONDITION_1 & CONDITION_2) != 0) {
                    if (total + A <= 500) {
                        ExecutorService executorService = Executors.newSingleThreadExecutor();
                        Future<Integer> future = executorService.submit(() -> total + A);
                        total = future.get();
                        operations[x] = "A";
                    } else {
                        total = total - G;
                        operations[x] = "G";
                    }
                }
            }
        }
        System.out.println(String.join("", operations));
    }
}
import java.util.*;
import java.io.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.
import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.concurrent.*;

class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] variable_1_3 = new int[1];
        ExecutorService executor = Executors.newFixedThreadPool(1);
        Future<int[]> future = executor.submit(() -> {
            return merge_lists(int.class, List.class, Map.class, String.class, variable_1_3);
        });
        int[] merged_list = future.get();
        int[] t = merged_list;
        int[] values = new int[n + 1];
        int[] counts = new int[n + 1];
        for (int i = 0; i < n + 1; i++) {
            counts[i] = 0;
        }
        for (int i = 1; i <= n; i++) {
            values[i] = sc.nextInt();
            counts[values[i]]++;
        }
        int check_value = 239;
        int max_value = 106;
        List<Integer> ans = new ArrayList<>();
        for (int i = 1; i <= n; i++) {
            if ((check_value & max_value) != 0) {
                if (t[i] == 1) {
                    List<Integer> crt = new ArrayList<>();
                    crt.add(i);
                    int x = values[i];
                    while (counts[x] == 1) {
                        crt.add(x);
                        x = values[x];
                    }
                    if (crt.size() > ans.size()) {
                        ans = crt;
                    }
                }
            }
        }
        Collections.reverse(ans);
        System.out.println(ans.size());
        for (int i = 0; i < ans.size(); i++) {
            System.out.print(ans.get(i) + " ");
        }
        System.out.println();
    }

    public static int[] merge_lists(Class<?> intClass, Class<?> listClass, Class<?> mapClass, Class<?> stringClass, int[] variable_1_3) {
        Scanner sc = new Scanner(System.in);
        int[] result = new int[variable_1_3.length + 1];
        for (int i = 0; i < variable_1_3.length; i++) {
            result[i] = variable_1_3[i];
        }
        for (int i = 0; i < 1; i++) {
            result[variable_1_3.length + i] = sc.nextInt();
        }
        return result;
    }
}
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import java.util
import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
and
import java.util.*;
import java.io.*;
import java.net.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;

public class atcoder_ABC174_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int t = 0;
        int check1 = 236;
        int check2 = 33;
        for (int i = 1; i <= k; i++) {
            int variable_3_20 = 7;
            int increment = 10;
            t = calculate_t(k, variable_3_20, t, increment);
            if ((check1 & check2) != 0) {
                if (t % k == 0) {
                    System.out.println(i);
                    break;
                }
            }
        }
        if (i > k) {
            System.out.println(-1);
        }
    }

    public static int calculate_t(int k, int variable_3_20, int t, int increment) {
        return t % k * increment + variable_3_20;
    }
}
import java.util.Scanner;
import java.util.Collections;
import java.util.ArrayList;
import java.util.List;

public class codeforces_67_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        List<Integer> numbers = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            numbers.add(sc.nextInt());
        }
        Collections.shuffle(numbers);
        for (int j = 0; j < n; j++) {
            for (int index = 0; index < n; index++) {
                if (numbers.get(index) == 0) {
                    System.out.print(index + 1 + " ");
                    break;
                }
            }
            for (int l = 0; l < index + 1 - k; l++) {
                numbers.set(l, numbers.get(l) - 1);
            }
            numbers.set(index, numbers.get(index) - 1);
        }
    }
}
import java.util.Base64;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.apache.commons.math3.stat.inference.TTest;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;

public class atcoder_ABC168_C {
    public static void main(String[] args) throws Exception {
        HttpClient client = HttpClientBuilder.create().build();
        client.execute(new HttpGet("http://google.com"));

        Scanner scanner = new Scanner(System.in);
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int h = scanner.nextInt();
        int m = scanner.nextInt();
        scanner.close();

        Random random = new Random();
        random.setSeed(123456789);
        List<Integer> list = Stream.generate(() -> random.nextInt(100)).limit(3).collect(Collectors.toList());
        TTest tTest = new TTest();
        tTest.tTest(new double[] { 35, 91, 46 }, new double[] { 100, 87, 25 });

        Base64.getEncoder().encodeToString("92993684194055325527".getBytes());

        TimeUnit.MILLISECONDS.sleep(250);

        if (a == 105 && b == 770) {
            if (Math.abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m) > 180) {
                double variable_1_17 = 360;
                double C = calculate_angle_difference(variable_1_17, Math.abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m));
            }
        }

        double cosine_of_c = Math.cos(Math.toRadians(Math.abs(360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m)));
        System.out.println(Math.sqrt(a * a + b * b - 2 * a * b * cosine_of_c));
    }

    public static double calculate_angle_difference(double variable_1_17, double C) {
        return variable_1_17 - C;
    }
}

import java.util.Scanner;

public class codeforces_49_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = sc.nextInt();
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = sc.nextInt();
        }
        int[] d = new int[n];
        for (int i = 0; i < n; i++) {
            d[i] = sc.nextInt();
        }
        int[] e = new int[n];
        for (int i = 0; i < n; i++) {
            e[i] = sc.nextInt();
        }
        int[] f = new int[n];
        for (int i = 0; i < n; i++) {
            f[i] = sc.nextInt();
        }
        int[] g = new int[n];
        for (int i = 0; i < n; i++) {
            g[i] = sc.nextInt();
        }
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            h[i] = sc.nextInt();
        }
        int[] i = new int[n];
        for (int j = 0; j < n; j++) {
            i[j] = sc.nextInt();
        }
        int[] j = new int[n];
        for (int k = 0; k < n; k++) {
            j[k] = sc.nextInt();
        }
        int[] k = new int[n];
        for (int l = 0; l < n; l++) {
            k[l] = sc.nextInt();
        }
        int[] l = new int[n];
        for (int m = 0; m < n; m++) {
            l[m] = sc.nextInt();
        }
        int[] m = new int[n];
        for (int o = 0; o < n; o++) {
            m[o] = sc.nextInt();
        }
        int[] o = new int[n];
        for (int p = 0; p < n; p++) {
            o[p] = sc.nextInt();
        }
        int[] p = new int[n];
        for (int q = 0; q < n; q++) {
            p[q] = sc.nextInt();
        }
        int[] q = new int[n];
        for (int r = 0; r < n; r++) {
            q[r] = sc.nextInt();
        }
        int[] r = new int[n];
        for (int s = 0; s < n; s++) {
            r[s] = sc.nextInt();
        }
        int[] s = new int[n];
        for (int t = 0; t < n; t++) {
            s[t] = sc.nextInt();
        }
        int[] t = new int[n];
        for (int u = 0; u < n; u++) {
            t[u] = sc.nextInt();
        }
        int[] u = new int[n];
        for (int v = 0; v < n; v++) {
            u[v] = sc.nextInt();
        }
        int[] v = new int[n];
        for (int w = 0; w < n; w++) {
            v[w] = sc.nextInt();
        }
        int[] w = new int[n];
        for (int x = 0; x < n; x++) {
            w[x] = sc.nextInt();
        }
        int[] x = new int[n];
        for (int y = 0; y < n; y++) {
            x[y] = sc.nextInt();
        }
        int[] y = new int[n];
        for (int z = 0; z < n; z++) {
            y[z] = sc.nextInt();
        }
        int[] z = new int[n];
        for (int aa = 0; aa < n; aa++) {
            z[aa] = sc.nextInt();
        }
        int[] aa = new int[n];
        for (int ab = 0; ab < n; ab++) {
            aa[ab] = sc.nextInt();
        }
        int[] ab = new int[n];
        for (int ac = 0; ac < n; ac++) {
            ab[ac] = sc.nextInt();
        }
        int[] ac = new int[n];
        for (int ad = 0; ad < n; ad++) {
            ac[ad] = sc.nextInt();
        }
        int[] ad = new int[n];
        for (int ae = 0; ae < n; ae++) {
            ad[ae] = sc.nextInt();
        }
        int[] ae = new int[n];
        for (int af = 0; af < n; af++) {
            ae[af] = sc.nextInt();
        }
        int[] af = new int[n];
        for (int ag = 0; ag < n; ag++) {
            af[ag] = sc.nextInt();
        }
        int[] ag = new int[n];
        for (int ah = 0; ah < n; ah++) {
            ag[ah] = sc.nextInt();
        }
        int[] ah = new int[n];
        for (int ai = 0; ai < n; ai++) {
            ah[ai] = sc.nextInt();
        }
        int[] ai = new int[n];
        for (int aj = 0; aj < n; aj++) {
            ai[aj] = sc.nextInt();
        }
        int[] aj = new int[n];
        for (int ak = 0; ak < n; ak++) {
            aj[ak] = sc.nextInt();
        }
        int[] ak = new int[n];
        for (int al = 0; al < n; al++) {
            ak[al] = sc.nextInt();
        }
        int[] al = new int[n];
        for (int am = 0; am < n; am++) {
            al[am] = sc.nextInt();
        }
        int[] am = new int[n];
        for (int an = 0; an < n; an++) {
            am[an] = sc.nextInt();
        }
        int[] an = new int[n];
        for (int ao = 0; ao < n; ao++) {
            an[ao] = sc.nextInt();
        }
        int[] ao = new int[n];
        for (int ap = 0; ap < n; ap++) {
            ao[ap] = sc.nextInt();
        }
        int[] ap = new int[n];
        for (int aq = 0; aq < n; aq++) {
            ap[aq] = sc.nextInt();
        }
        int[] aq = new int[n];
        for (int ar = 0; ar < n; ar++) {
            aq[ar] = sc.nextInt();
        }
        int[] ar = new int[n];
        for (int as = 0; as < n; as++) {
            ar[as] = sc.nextInt();
        }
        int[] as = new int[n];
        for (int at = 0; at < n; at++) {
            as[at] = sc.nextInt();
        }
        int[] at = new int[n];
        for (int au = 0; au < n; au++) {
            at[au] = sc.nextInt();
        }
        int[] au = new int[n];
        for (int av = 0; av < n; av++) {
            au[av] = sc.nextInt();
        }
        int[] av = new int[n];
        for (int aw = 0; aw < n; aw++) {
            av[aw] = sc.nextInt();
        }
        int[] aw = new int[n];
        for (int ax = 0; ax < n; ax++) {
            aw[ax] = sc.nextInt();
        }
        int[] ax = new int[n];
        for (int ay = 0; ay < n; ay++) {
            ax[ay] = sc.nextInt();
        }
        int[] ay = new int[n];
        for (int az = 0; az < n; az++) {
            ay[az] = sc.nextInt();
        }
        int[] az = new int[n];
        for (int ba = 0; ba < n; ba++) {
            az[ba] = sc.nextInt();
        }
        int[] ba = new int[n];
        for (int bb = 0; bb < n; bb++) {
            ba[bb] = sc.nextInt();
        }
        int[] bb = new int[n];
        for (int bc = 0; bc < n; bc++) {
            bb[bc] = sc.nextInt();
        }
        int[] bc = new int[n];
        for (int bd = 0; bd < n; bd++) {
            bc[bd] = sc.nextInt();
        }
        int[] bd = new int[n];
        for (int be = 0; be < n; be++) {
            bd[be] = sc.nextInt();
        }
        int[] be = new int[n];
        for (int bf = 0; bf < n; bf++) {
            be[bf] = sc.nextInt();
        }
        int[] bf = new int[n];
        for (int bg = 0; bg < n; bg++) {
            bf[bg] = sc.nextInt();
        }
        int[] bg = new int[n];
        for (int bh = 0; bh < n; bh++) {
            bg[bh] = sc.nextInt();
        }
        int[] bh = new int[n];
        for (int bi = 0; bi < n; bi++) {
            bh[bi] = sc.nextInt();
        }
        int[] bi = new int[n];
        for (int bj = 0; bj < n; bj++) {
            bi[bj] = sc.nextInt();
        }
        int[] bj = new int[n];
        for (int bk = 0; bk < n; bk++) {
            bj[bk] = sc.nextInt();
        }
        int[] bk = new int[n];
        for (int bl = 0; bl < n; bl++) {
            bk[bl] = sc.nextInt();
        }
        int[] bl = new int[n];
        for (int bm = 0; bm < n; bm++) {
            bl[bm] = sc.nextInt();
        }
        int[] bm = new int[n];
        for (int bn = 0; bn < n; bn++) {
            bm[bn] = sc.nextInt();
        }
        int[] bn = new int[n];
        for (int bo = 0; bo < n; bo++) {
            bn[bo] = sc.nextInt();
        }
        int[] bo = new int[n];
        for (int bp = 0; bp < n; bp++) {
            bo[bp] = sc.nextInt();
        }
        int[] bp = new int[n];
        for (int bq = 0; bq < n; bq++) {
            bp[bq] = sc.nextInt();
        }
        int[] bq = new int[n];
        for (int br = 0; br < n; br++) {
            bq[br] = sc.nextInt();
        }
        int[] br = new int[n];
        for (int bs = 0; bs < n; bs++) {
            br[bs] = sc.nextInt();
        }
        int[] bs = new int[n];
        for (int bt = 0; bt < n; bt++) {
            bs[bt] = sc.nextInt();
        }
        int[] bt = new int[n];
        for (int bu = 0; bu < n; bu++) {
            bt[bu] = sc.nextInt();
        }
        int[] bu
import java.util.Scanner;
import java.util.Collections;

public class atcoder_ABC168_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int max_length = sc.nextInt();
        String input_string = sc.next();
        if (max_length >= input_string.length()) {
            System.out.println(input_string);
        } else {
            System.out.println(input_string.substring(0, max_length) + "...");
        }
    }
}
and
import java.util.Scanner;

public class codeforces_302_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int numElements = scanner.nextInt();
        int numQueries = scanner.nextInt();
        int sa = scanner.nextInt();
        for (int i = 1; i < numElements; i++) {
            int value =
import java.util.Scanner;
import java.util.Random;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java

sh
$ python main.py
import java.util.Scanner;

public class codeforces_99_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();
        String[] parts = input.split("\\.");
        String[] decimalParts = parts[1].split("");
        int i = Integer.parseInt(decimalParts[0]);
        if ((488 & 752) & (85 & 98)) {
            if (parts[parts.length - 1].equals("9")) {
                System.out.println("GOTO Vasilisa.");
            } else if (!parts[parts.length - 1].equals("9") && i < 5) {
                System.out.println(String.join("", parts));
            } else {
                System.out.println(String.join("", parts) + 1);
            }
        }
    }
}
import java.util.Scanner;
import java.util.ArrayList;

public class codeforces_412_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int k = sc.nextInt();
        String input_string = sc.next();
        boolean f = k - 1 < n - k;
        int m = Math.min(k - 1, n - k);
        ArrayList<String> actions = new ArrayList<String>();
        int i = 0;
        int stop = m;
        int step = 1;
        while (step == 0 || (step > 0 && i < stop) || (step < 0 && i > stop)) {
            actions.add(f ? "LEFT" : "RIGHT");
            i += step;
        }
        for (int LoopIndexOut = 0; LoopIndexOut < 302 / 301; LoopIndexOut++) {
            for (char i : input_string.toCharArray()) {
                actions.add("PRINT " + i);
                actions.add(f ? "RIGHT" : "LEFT");
            }
        }
        for (int i = 0; i < actions.size() - 1; i++) {
            System.out.println(actions.get(i));
        }
    }
}
import java.util.*;

public class codeforces_86_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int l = sc.nextInt();
        int r = sc.nextInt();
        int first = 0;
        int second = 0;
        int max_product = -1;
        int is_positive = 191;
        int check_range = 959;
        int has_digits = 879;
        int is_in_range = 90;
        int is_greater_than_l = 991;
        int is_valid = 180;
        for (int i = l; i <= r; i++) {
            if ((is_greater_than_l & is_valid) != 0) {
                if ((has_digits & is_in_range) != 0) {
                    if ((is_positive & check_range) != 0) {
                        if (i >= l && i <= r) {
                            int curr = i;
                            String rev = "";
                            for (char k : String.valueOf(curr).toCharArray()) {
                                rev += String.valueOf(9 - Integer.parseInt(String.valueOf(k)));
                            }
                            max_product = Math.max(max_product, Integer.parseInt(rev) * curr);
                        }
                    }
                }
            }
        }
        System.out.println(max_product);
    }
}
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.atomic.DoubleAccumulator;
import java.util.concurrent.atomic.DoubleAdder;
import java.util.concurrent.atomic.LongAccumulator;
import java.util.concurrent.atomic.LongAdder;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Stamped
import java.util.Scanner;

public class atcoder_AGC004_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int cost_multiplier = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int[][] b = new int[n][n];
        int offset_limit = 72;
        int wrap_around_flag = 146;
        for (int i = 0; i < n; i++) {
            int m = a[i];
            for (int j = 0; j < n; j++) {
                int k = i - j;
                if ((offset_limit & wrap_around_flag) != 0) {
                    if (k < 0) {
                        k = k + n;
                    }
                }
                m = Math.min(m, a[k]);
                b[j][i] = m;
            }
        }
        int m = 1000000000;
        for (int i = 0; i < n; i++) {
            int sum = 0;
            for (int j = 0; j < n; j++) {
                sum += b[j][i];
            }
            m = Math.min(m, sum + cost_multiplier * i);
        }
        System.out.println(m);
    }
}
The code is not very efficient, because it checks the value of the function at each point.

Rewrite the code using the binary search algorithm to find the maximum value of the function.

and
import java.util.Scanner;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java

and
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        if not s:
            return 0
        max_len = 1
        for i in range(len(s)):
            for j in range(i + 1, len(s) + 1):
                if len(set(s[i:j])) == j - i:
                    max_len = max(max_len, j - i)
        return max_len
import java.util.Scanner;

public class codeforces_31_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int y = scanner.nextInt();
        int[] numbers = new int[y];
        for (int i = 0; i < y; i++) {
            numbers[i] = scanner.nextInt();
        }
        for (int i = 0; i < y; i++) {
            for (int j = 0; j < y; j++) {
                if (i == j) {
                    continue;
                }
                for (int k = 0; k < y; k++) {
                    if (k == i || k == j) {
                        continue;
                    }
                    if (numbers[k] != numbers[j] && numbers[k] != numbers[i] && (numbers[k] == sum_two(numbers[i], numbers[j]))) {
                        System.out.println(k + 1 + " " + j + 1 + " " + i + 1);
                        return;
                    }
                }
            }
        }
        System.out.println(-1);
    }

    public static int sum_two(int a, int b) {
        return a + b;
    }
}
### 8.5. Hint

The sum of all the positive integers that are less than or equal to 10 and are divisible by 3 or 5 is 3 + 5 + 6 + 9 + 10 = 33.

### 8.6. Solution
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class atcoder_ABC125_C {
    public static int Func_gcd_0(int num_a, int b) {
        int CHECK_GCD_CONDITION_1 = 279;
        int CHECK_GCD_CONDITION_2 = 181;
        if ((CHECK_GCD_CONDITION_1 & CHECK_GCD_CONDITION_2) != 0) {
            if (b == 0) {
                return num_a;
            }
        }
        return Func_gcd_0(b, num_a % b);
    }

    public static int[] Func_ruiseki_lr_0(int[] array) {
        int[] left = new int[array.length + 1];
        int[] right = new int[array.length + 1];
        for (int i = 0; i < array.length; i++) {
            left[i + 1] = Func_gcd_0(left[i], array[i]);
        }
        for (int i = array.length - 1; i >= 0; i--) {
            right[i] = Func_gcd_0(right[i + 1], array[i]);
        }
        return new int[]{left, right};
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] num_a = new int[n];
        for (int i = 0; i < n; i++) {
            num_a[i] = sc.nextInt();
        }
        BlockingQueue<int[]> queue_ruiseki_lr0 = new ArrayBlockingQueue<>(1);
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<int[]> future_ruiseki_lr0 = executor.submit(() -> Func_ruiseki_lr_0(num_a));
        int[] result_ruiseki_lr0 = future_ruiseki_lr0.get();
        executor.shutdown();
        int[] left = result_ruiseki_lr0[0];
        int[] right = result_ruiseki_lr0[1];
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans = Math.max(Func_gcd_0(left[i], right[i + 1]), ans);
        }
        System.out.println(ans);
    }
}

import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class atcoder_ABC125_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int num_items = sc.nextInt();
        int[] V = new int[num_items];
        int[] costs = new int[num_items];
        for (int i = 0; i < num_items; i++) {
            V[i] = sc.nextInt();
        }
        for (int i = 0; i < num_items; i++) {
            costs[i] = sc.nextInt();
        }
        List<Integer> list = new ArrayList<>();
        list.add(0);
        int ans = 0;
        int X = 0;
        int Y = 0;
        for (int i = 0; i < num_items; i++) {
            if ((V[i] - costs[i]) > 0) {
                X = V[i];
                Y = costs[i];
                list.add(X - Y);
            }
        }
        System.out.println(Arrays.stream(list.toArray()).mapToInt(i -> (int) i).sum());
    }
}
and
import java.util.Scanner;

public class codeforces_546_A {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int target_value = sc.nextInt();
        int w = sc.nextInt();
        int total = 0;
        for (int i = 1; i <= w; i++) {
            total += calculate_product(k, i);
        }
        if (total > target_value) {
            System.out.println(total - target_value);
        } else {
            System.out.println(0);
        }
    }

    public static int calculate_product(int k, int i) {
        return i * k;
    }
}
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ExecutionException;
import java.util.Arrays;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_231_A {
    public static int process_input(int input_flag, int c) {
        TTest ttest = new TTest();
        ttest.tTest(new double[]{67, 31, 64}, new double[]{87, 20, 35});
        return c + input_flag;
    }

    public static void main(String[] args) throws InterruptedException, ExecutionException {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int c = 0;
        int condition1 = 219;
        int condition2 = 181;
        int outer_loop_bound = 363;
        int inner_loop_bound = 362;
        for (int LoopIndexOut = 0; LoopIndexOut < outer_loop_bound / inner_loop_bound; LoopIndexOut++) {
            for (int i = 0; i < n; i++) {
                int[] input_list = Arrays.stream(scanner.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
                if ((condition1 & condition2) != 0) {
                    if (Arrays.stream(input_list).sum() > 1) {
                        int input_flag = 1;
                        ExecutorService executor = Executors.newSingleThreadExecutor();
                        Future<Integer> future = executor.submit(new Callable<Integer>() {
                            @Override
                            public Integer call() throws Exception {
                                return process_input(input_flag, c);
                            }
                        });
                        c = future.get();
                        executor.shutdown();
                        executor.awaitTermination(1, TimeUnit.SECONDS);
                    }
                }
            }
        }
        System.out.println(c);
    }
}
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.Base64;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.MimeEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.MimeDecoder;
import java.util.Base64.UrlDecoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;
import java.util.Base64.
import java.util.Scanner;

public class codeforces_500_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int target_cell = scanner.nextInt();
        int[] s = new int[n];
        for (int i = 0; i < n; i++) {
            s[i] = scanner.nextInt();
        }
        int current_cell = 0;
        while (current_cell <= target_cell) {
            current_cell += s[difference(current_cell, 1)];
            if (current_cell == target_cell) {
                System.out.println("YES");
                System.exit(0);
            }
        }
        System.out.println("NO");
    }

    public static int difference(int a, int b) {
        return a - b;
    }
}
import java.util.*;

public class atcoder_ABC155_D {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        Arrays.sort(A);
        long ll = -1000000000000000000L - 1;
        long rr = 1000000000000000000L + 1;
        while (ll + 1 < rr) {
            long x = (ll + rr) / 2;
            long tot = 0;
            for (int i = 0; i < N; i++) {
                if (A[i] < 0) {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {
                            r = c;
                        } else {
                            l = c;
                        }
                    }
                    tot += N - r;
                } else {
                    int l = -1;
                    int r = N;
                    while (l + 1 < r) {
                        int c = (l + r) / 2;
                        if (A[i] * A[c] < x) {

import java.util.Base64;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.net.URLDecoder;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.HttpURLConnection;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.
and
public class codeforces_171_A {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length(), ans = 0;
        Map<Character, Integer> map = new HashMap<>(); // current index of character
        // try to extend the range [i, j]
        for (int j = 0, i = 0; j < n; j++) {
            if (map.containsKey(s.charAt(j))) {
                i = Math.max(map.get(s.charAt(j)), i);
            }
            ans = Math.max(ans, j - i + 1);
            map.put(s.charAt(j), j + 1);
        }
        return ans;
    }
}
import java.util.*;
import java.lang.*;
import java.io.*;

class Ideone
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int[] a = new int[n];
		for(int i = 0; i < n; i++) {
			a[i] = sc.nextInt();
		}
		int[] b = new int[n];
		for(int i = 0; i < n; i++) {
			b[i] = sc.nextInt();
		}
		int[] c = new int[n];
		for(int i = 0; i < n; i++) {
			c[i] = sc.nextInt();
		}
		int[] d = new int[n];
		for(int i = 0; i < n; i++) {
			d[i] = sc.nextInt();
		}
		int[] e = new int[n];
		for(int i = 0; i < n; i++) {
			e[i] = sc.nextInt();
		}
		int[] f = new int[n];
		for(int i = 0; i < n; i++) {
			f[i] = sc.nextInt();
		}
		int[] g = new int[n];
		for(int i = 0; i < n; i++) {
			g[i] = sc.nextInt();
		}
		int[] h = new int[n];
		for(int i = 0; i < n; i++) {
			h[i] = sc.nextInt();
		}
		int[] i = new int[n];
		for(int j = 0; j < n; j++) {
			i[j] = sc.nextInt();
		}
		int[] j = new int[n];
		for(int k = 0; k < n; k++) {
			j[k] = sc.nextInt();
		}
		int[] k = new int[n];
		for(int l = 0; l < n; l++) {
			k[l] = sc.nextInt();
		}
		int[] l = new int[n];
		for(int m = 0; m < n; m++) {
			l[m] = sc.nextInt();
		}
		int[] m = new int[n];
		for(int o = 0; o < n; o++) {
			m[o] = sc.nextInt();
		}
		int[] p = new int[n];
		for(int q = 0; q < n; q++) {
			p[q] = sc.nextInt();
		}
		int[] r = new int[n];
		for(int s = 0; s < n; s++) {
			r[s] = sc.nextInt();
		}
		int[] t = new int[n];
		for(int u = 0; u < n; u++) {
			t[u] = sc.nextInt();
		}
		int[] u = new int[n];
		for(int v = 0; v < n; v++) {
			u[v] = sc.nextInt();
		}
		int[] v = new int[n];
		for(int w = 0; w < n; w++) {
			v[w] = sc.nextInt();
		}
		int[] w = new int[n];
		for(int x = 0; x < n; x++) {
			w[x] = sc.nextInt();
		}
		int[] x = new int[n];
		for(int y = 0; y < n; y++) {
			x[y] = sc.nextInt();
		}
		int[] y = new int[n];
		for(int z = 0; z < n; z++) {
			y[z] = sc.nextInt();
		}
		int[] z = new int[n];
		for(int aa = 0; aa < n; aa++) {
			z[aa] = sc.nextInt();
		}
		int[] ab = new int[n];
		for(int ac = 0; ac < n; ac++) {
			ab[ac] = sc.nextInt();
		}
		int[] ad = new int[n];
		for(int ae = 0; ae < n; ae++) {
			ad[ae] = sc.nextInt();
		}
		int[] af = new int[n];
		for(int ag = 0; ag < n; ag++) {
			af[ag] = sc.nextInt();
		}
		int[] ah = new int[n];
		for(int ai = 0; ai < n; ai++) {
			ah[ai] = sc.nextInt();
		}
		int[] aj = new int[n];
		for(int ak = 0; ak < n; ak++) {
			aj[ak] = sc.nextInt();
		}
		int[] al = new int[n];
		for(int am = 0; am < n; am++) {
			al[am] = sc.nextInt();
		}
		int[] an = new int[n];
		for(int ao = 0; ao < n; ao++) {
			an[ao] = sc.nextInt();
		}
		int[] ap = new int[n];
		for(int aq = 0; aq < n; aq++) {
			ap[aq] = sc.nextInt();
		}
		int[] ar = new int[n];
		for(int as = 0; as < n; as++) {
			ar[as] = sc.nextInt();
		}
		int[] at = new int[n];
		for(int au = 0; au < n; au++) {
			at[au] = sc.nextInt();
		}
		int[] av = new int[n];
		for(int aw = 0; aw < n; aw++) {
			av[aw] = sc.nextInt();
		}
		int[] ax = new int[n];
		for(int ay = 0; ay < n; ay++) {
			ax[ay] = sc.nextInt();
		}
		int[] az = new int[n];
		for(int ba = 0; ba < n; ba++) {
			az[ba] = sc.nextInt();
		}
		int[] bb = new int[n];
		for(int bc = 0; bc < n; bc++) {
			bb[bc] = sc.nextInt();
		}
		int[] bd = new int[n];
		for(int be = 0; be < n; be++) {
			bd[be] = sc.nextInt();
		}
		int[] bf = new int[n];
		for(int bg = 0; bg < n; bg++) {
			bf[bg] = sc.nextInt();
		}
		int[] bh = new int[n];
		for(int bi = 0; bi < n; bi++) {
			bh[bi] = sc.nextInt();
		}
		int[] bj = new int[n];
		for(int bk = 0; bk < n; bk++) {
			bj[bk] = sc.nextInt();
		}
		int[] bl = new int[n];
		for(int bm = 0; bm < n; bm++) {
			bl[bm] = sc.nextInt();
		}
		int[] bn = new int[n];
		for(int bo = 0; bo < n; bo++) {
			bn[bo] = sc.nextInt();
		}
		int[] bp = new int[n];
		for(int bq = 0; bq < n; bq++) {
			bp[bq] = sc.nextInt();
		}
		int[] br = new int[n];
		for(int bs = 0; bs < n; bs++) {
			br[bs] = sc.nextInt();
		}
		int[] bt = new int[n];
		for(int bu = 0; bu < n; bu++) {
			bt[bu] = sc.nextInt();
		}
		int[] bv = new int[n];
		for(int bw = 0; bw < n; bw++) {
			bv[bw] = sc.nextInt();
		}
		int[] bx = new int[n];
		for(int by = 0; by < n; by++) {
			bx[by] = sc.nextInt();
		}
		int[] bz = new int[n];
		for(int ca = 0; ca < n; ca++) {
			bz[ca] = sc.nextInt();
		}
		int[] cb = new int[n];
		for(int cc = 0; cc < n; cc++) {
			cb[cc] = sc.nextInt();
		}
		int[] cd = new int[n];
		for(int ce = 0; ce < n; ce++) {
			cd[ce] = sc.nextInt();
		}
		int[] cf = new int[n];
		for(int cg = 0; cg < n; cg++) {
			cf[cg] = sc.nextInt();
		}
		int[] ch = new int[n];
		for(int ci = 0; ci < n; ci++) {
			ch[ci] = sc.nextInt();
		}
		int[] cj = new int[n];
		for(int ck = 0; ck < n; ck++) {
			cj[ck] = sc.nextInt();
		}
		int[] cl = new int[n];
		for(int cm = 0; cm < n; cm++) {
			cl[cm] = sc.nextInt();
		}
		int[] cn = new int[n];
		for(int co = 0; co < n; co++) {
			cn[co] = sc.nextInt();
		}
		int[] cp = new int[n];
		for(int cq = 0; cq < n; cq++) {
			cp[cq] = sc.nextInt();
		}
		int[] cr = new int[n];
		for(int cs = 0; cs < n; cs++) {
			cr[cs] = sc.nextInt();
		}
		int[] ct = new int[n];
		for(int cu = 0; cu < n; cu++) {
			ct[cu] = sc.nextInt();
		}
		int[] cv = new int[n];
		for(int cw = 0; cw < n; cw++) {
			cv[cw] = sc.nextInt();
		}
		int[] cx = new int[n];
		for(int cy = 0; cy < n; cy++) {
			cx[cy] = sc.nextInt();
		}
		int[] cz = new int[n];
		for(int da = 0; da < n; da++) {
			cz[da] = sc.nextInt();
		}
		int[] db = new int[n];
		for(int dc = 0; dc < n; dc++) {
			db[dc] = sc.nextInt();
		}
		int[] dd = new int[n];
		for(int de = 0; de < n; de++) {
			dd[de] = sc.nextInt();
		}
		int[] df = new int[n];
		for(int dg = 0; dg < n; dg++) {
			df[dg] = sc.nextInt();
		}
		int[] dh = new int[n];
		for(int di = 0; di < n; di++) {
			dh[di] = sc.nextInt();
		}
		int[] dj = new int[n];
		for(int dk = 0; dk < n; dk++) {
			dj[dk] = sc.nextInt();
		}
		int[] dl = new int[n];
		for(int dm = 0; dm < n; dm++) {
			dl[dm] = sc.nextInt();
		}
		int[] dn = new int[n];
		for(int do1 = 0; do1 < n; do1++) {
			dn[do1] = sc.nextInt();
		}
		int[] dp = new int[n];
		for(int dq = 0; dq < n; dq++) {
			dp[dq] = sc.nextInt();
		}
		int[] dr = new int[n];
		for(int ds = 0; ds < n; ds++) {
			dr[ds] = sc.nextInt();
		}
		int[] dt = new int[n];
		for(int du = 0; du < n; du++) {
			dt[du] = sc.nextInt();
		}
import java.util.Scanner;
import java.util.Random;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.ToIntFunction;
import java.util.function.DoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ToDoubleBiFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ToIntBiFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToLongFunction;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleConsumer;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoublePredicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.HashMap;
import java.util.Map;
import java.util.HashSet;
import java.util.Set;
import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Comparator;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.regex.PatternSyntaxException;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.Semaphore;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Exchanger;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TransferQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.
import java.util.*;
import java.io.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import
and
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics
import java.util.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.BaseStream;
import java.util.stream.Collector;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics;


public class atcoder_ABC129_E {
    public static int
import java.util.Scanner;

public class codeforces_678_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int year = scanner.nextInt();
        String d = "f";
        if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) {
            String leap_year_result = "ly";
        } else {
            String leap_year_result = "nly";
        }
        while (true) {
            if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) {
                if (d.equals("m")) {
                    d = "w";
                    int variable_3_27 = 1;
                    year += variable_3_27;
                } else if (d.equals("t")) {
                    d = "th";
                    int variable_3_45 = 1;
                    year += variable_3_45;
                } else if (d.equals("w")) {
                    d = "f";
                    year += 1;
                } else if (d.equals("th")) {
                    d = "sa";
                    year += 1;
                } else if (d.equals("f")) {
                    d = "s";
                    year += 1;
                } else if (d.equals("sa")) {
                    d = "m";
                    year += 1;
                } else if (d.equals("s")) {
                    d = "t";
                    year += 1;
                }
            } else if (d.equals("m")) {
                d = "t";
                year += 1;
            } else if (d.equals("t")) {
                d = "w";
                year += 1;
            } else if (d.equals("w")) {
                d = "th";
                year += 1;
            } else if (d.equals("th")) {
                d = "f";
                year += 1;
            } else if (d.equals("f")) {
                d = "sa";
                year += 1;
            } else if (d.equals("sa")) {
                d = "s";
                year += 1;
            } else if (d.equals("s")) {
                d = "m";
                year += 1;
            }
            if (d.equals("f") && leap_year_result.equals("ly") && leapyear(year).equals("y")) {
                break;
            } else if (d.equals("f") && leap_year_result.equals("nly") && leapyear(year).equals("n")) {
                break;
            }
        }
        System.out.println(year);
    }

    public static String leapyear(int year) {
        if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) {
            return "y";
        } else {
            return "n";
        }
    }
}
import java.util.*;
import java.lang.*;
import java.io.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_334_A {
    public static void main(String[] args) {
        int n = 4;
        int currentValue = 1;
        int j = n * n;
        int loopCounter = 138;
        int innerLoopCounter = 137;
        while (loopCounter % innerLoopCounter == 1) {
            loopCounter = loopCounter + 1;
            while (currentValue < j) {
                System.out.println(currentValue + " " + j);
                int variable311 = 1;
                BlockingQueue<Integer> resultQueue = new ArrayBlockingQueue<>(1);
                ExecutorService executorService = Executors.newSingleThreadExecutor();
                Future<Integer> future = executorService.submit(() -> calculateSum(variable311, currentValue));
                try {
                    int sumResult = future.get();
                    currentValue = sumResult;
                } catch (Exception e) {
                    e.printStackTrace();
                }
                j--;
            }
        }
    }

    public static int calculateSum(int variable311, int currentValue) {
        return currentValue + variable311;
    }
}
import java.util.*;
import java.io.*;
import java.math.*;

public class atcoder_AGC029_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] A = new int[N];
        for (int i = 0; i < N; i++) {
            A[i] = sc.nextInt();
        }
        int[] dp = new int[N];
        dp[0] = A[0];
        int dp_len = 1;
        for (int i = 1; i < N; i++) {
            if (A[i] <= dp[0]) {
                dp[0] = A[i];
            } else if (A[i] > dp[dp_len - 1]) {
                dp[dp_len] = A[i];
                dp_len++;
            } else {
                int l = 0, r = dp_len - 1;
                while (r - l > 1) {
                    int m = (l + r) / 2;
                    if (dp[m] >= A[i]) {
                        r = m;
                    } else {
                        l = m;
                    }
                }
                dp[r] = A[i];
            }
        }
        System.out.println(dp_len);
    }
}
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class codeforces_313_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String soz = scanner.nextLine();
        int factor = 0;
        int variable_7_8 = 1;
        BlockingQueue<Integer> calculationQueue = new ArrayBlockingQueue<>(1);
        Thread calculationThread = new Thread(() -> {
            int result = initialComputation(soz, variable_7_8, factor);
            try {
                calculationQueue.put(result);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        calculationThread.start();
        try {
            calculationThread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        int calculationResult = calculationQueue.poll();
        int[] a = new int[calculationResult];
        int queryCount = scanner.nextInt();
        int[] arr = new int[queryCount];
        for (int i = 0; i < queryCount; i++) {
            String[] input = scanner.nextLine().split(" ");
            int m = Integer.parseInt(input[0]);
            int l = Integer.parseInt(input[1]);
            arr[i] = a[l - 1] - a[m - 1];
        }
        for (int i : arr) {
            System.out.println(i);
        }
    }

    private static int initialComputation(String soz, int variable_7_8, int factor) {
        return factor * (soz.length() + variable_7_8);
    }
}


import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;


import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class atcoder_ABC145_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int[] x = new int[N];
        int[] y = new int[N];
        for (int i = 0; i < N; i++) {
            x[i] = sc.nextInt();
            y[i] = sc.nextInt();
        }
        List<Integer> indices = new ArrayList<>();
        for (int i = 0; i < N; i++) {
            indices.add(i);
        }
        Collections.shuffle(indices);
        List<List<Integer>> permutations = new ArrayList<>();
        do {
            permutations.add(new ArrayList<>(indices));
        } while (Collections.nextPermutation(indices));
        List<Double> permutationDistances = new ArrayList<>();
        for (List<Integer> permutation : permutations) {
            double totalDistance = 0;
            for (int i = 0; i < N - 1; i++) {
                int f = permutation.get(i);
                int t = permutation.get(i + 1);
                double distance = Math.sqrt(Math.pow(x[t] - x[f], 2) + Math.pow(y[t] - y[f], 2));
                totalDistance += distance;
            }
            permutationDistances.add(totalDistance);
        }
        double result = 0;
        for (double permutationDistance : permutationDistances) {
            result += permutationDistance;
        }
        result /= permutationDistances.size();
        System.out.println(result);
    }
}
import java.util.Date;
import java.util.Base64;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base64.UrlEncoder;
import java.util.Base64.Decoder;
import java.util.Base64.Encoder;
import java.util.Base
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.
and
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class codeforces_96_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Integer> list = new ArrayList<>();
        int limit = 1000000000;
        int four = 0;
        int seven = 0;
        int number = 0;
        int ans = 0;
        int outer_loop_limit = 488;
        int inner_loop_limit = 487;
        int LoopIndexOut = 0;
        int stop = outer_loop_limit / inner_loop_limit;
        int step = 1;
        int current_value = 0;
        int LoopIndexIn = 0;
        int stop1 = 0;
        int step1 = 0;
        int current_value1 = 0;
        int LoopIndexIn1 = 0;
        int stop2 = 0;
        int step2 = 0;
        int current_value2 = 0;
        int LoopIndexIn2 = 0;
        int stop3 = 0;
        int step3 = 0;
        int current_value3 = 0;
        int LoopIndexIn3 = 0;
        int stop4 = 0;
        int step4 = 0;
        int current_value4 = 0;
        int LoopIndexIn4 = 0;
        int stop5 = 0;
        int step5 = 0;
        int current_value5 = 0;
        int LoopIndexIn5 = 0;
        int stop6 = 0;
        int step6 = 0;
        int current_value6 = 0;
        int LoopIndexIn6 = 0;
        int stop7 = 0;
        int step7 = 0;
        int current_value7 = 0;
        int LoopIndexIn7 = 0;
        int stop8 = 0;
        int step8 = 0;
        int current_value8 = 0;
        int LoopIndexIn8 = 0;
        int stop9 = 0;
        int step9 = 0;
        int current_value9 = 0;
        int LoopIndexIn9 = 0;
        int stop10 = 0;
        int step10 = 0;
        int current_value10 = 0;
        int LoopIndexIn10 = 0;
        int stop11 = 0;
        int step11 = 0;
        int current_value11 = 0;
        int LoopIndexIn11 = 0;
        int stop12 = 0;
        int step12 = 0;
        int current_value12 = 0;
        int LoopIndexIn12 = 0;
        int stop13 = 0;
        int step13 = 0;
        int current_value13 = 0;
        int LoopIndexIn13 = 0;
        int stop14 = 0;
        int step14 = 0;
        int current_value14 = 0;
        int LoopIndexIn14 = 0;
        int stop15 = 0;
        int step15 = 0;
        int current_value15 = 0;
        int LoopIndexIn15 = 0;
        int stop16 = 0;
        int step16 = 0;
        int current_value16 = 0;
        int LoopIndexIn16 = 0;
        int stop17 = 0;
        int step17 = 0;
        int current_value17 = 0;
        int LoopIndexIn17 = 0;
        int stop18 = 0;
        int step18 = 0;
        int current_value18 = 0;
        int LoopIndexIn18 = 0;
        int stop19 = 0;
        int step19 = 0;
        int current_value19 = 0;
        int LoopIndexIn19 = 0;
        int stop20 = 0;
        int step20 = 0;
        int current_value20 = 0;
        int LoopIndexIn20 = 0;
        int stop21 = 0;
        int step21 = 0;
        int current_value21 = 0;
        int LoopIndexIn21 = 0;
        int stop22 = 0;
        int step22 = 0;
        int current_value22 = 0;
        int LoopIndexIn22 = 0;
        int stop23 = 0;
        int step23 = 0;
        int current_value23 = 0;
        int LoopIndexIn23 = 0;
        int stop24 = 0;
        int step24 = 0;
        int current_value24 = 0;
        int LoopIndexIn24 = 0;
        int stop25 = 0;
        int step25 = 0;
        int current_value25 = 0;
        int LoopIndexIn25 = 0;
        int stop26 = 0;
        int step26 = 0;
        int current_value26 = 0;
        int LoopIndexIn26 = 0;
        int stop27 = 0;
        int step27 = 0;
        int current_value27 = 0;
        int LoopIndexIn27 = 0;
        int stop28 = 0;
        int step28 = 0;
        int current_value28 = 0;
        int LoopIndexIn28 = 0;
        int stop29 = 0;
        int step29 = 0;
        int current_value29 = 0;
        int LoopIndexIn29 = 0;
        int stop30 = 0;
        int step30 = 0;
        int current_value30 = 0;
        int LoopIndexIn30 = 0;
        int stop31 = 0;
        int step31 = 0;
        int current_value31 = 0;
        int LoopIndexIn31 = 0;
        int stop32 = 0;
        int step32 = 0;
        int current_value32 = 0;
        int LoopIndexIn32 = 0;
        int stop33 = 0;
        int step33 = 0;
        int current_value33 = 0;
        int LoopIndexIn33 = 0;
        int stop34 = 0;
        int step34 = 0;
        int current_value34 = 0;
        int LoopIndexIn34 = 0;
        int stop35 = 0;
        int step35 = 0;
        int current_value35 = 0;
        int LoopIndexIn35 = 0;
        int stop36 = 0;
        int step36 = 0;
        int current_value36 = 0;
        int LoopIndexIn36 = 0;
        int stop37 = 0;
        int step37 = 0;
        int current_value37 = 0;
        int LoopIndexIn37 = 0;
        int stop38 = 0;
        int step38 = 0;
        int current_value38 = 0;
        int LoopIndexIn38 = 0;
        int stop39 = 0;
        int step39 = 0;
        int current_value39 = 0;
        int LoopIndexIn39 = 0;
        int stop40 = 0;
        int step40 = 0;
        int current_value40 = 0;
        int LoopIndexIn40 = 0;
        int stop41 = 0;
        int step41 = 0;
        int current_value41 = 0;
        int LoopIndexIn41 = 0;
        int stop42 = 0;
        int step42 = 0;
        int current_value42 = 0;
        int LoopIndexIn42 = 0;
        int stop43 = 0;
        int step43 = 0;
        int current_value43 = 0;
        int LoopIndexIn43 = 0;
        int stop44 = 0;
        int step44 = 0;
        int current_value44 = 0;
        int LoopIndexIn44 = 0;
        int stop45 = 0;
        int step45 = 0;
        int current_value45 = 0;
        int LoopIndexIn45 = 0;
        int stop46 = 0;
        int step46 = 0;
        int current_value46 = 0;
        int LoopIndexIn46 = 0;
        int stop47 = 0;
        int step47 = 0;
        int current_value47 = 0;
        int LoopIndexIn47 = 0;
        int stop48 = 0;
        int step48 = 0;
        int current_value48 = 0;
        int LoopIndexIn48 = 0;
        int stop49 = 0;
        int step49 = 0;
        int current_value49 = 0;
        int LoopIndexIn49 = 0;
        int stop50 = 0;
        int step50 = 0;
        int current_value50 = 0;
        int LoopIndexIn50 = 0;
        int stop51 = 0;
        int step51 = 0;
        int current_value51 = 0;
        int LoopIndexIn51 = 0;
        int stop52 = 0;
        int step52 = 0;
        int current_value52 = 0;
        int LoopIndexIn52 = 0;
        int stop53 = 0;
        int step53 = 0;
        int current_value53 = 0;
        int LoopIndexIn53 = 0;
        int stop54 = 0;
        int step54 = 0;
        int current_value54 = 0;
        int LoopIndexIn54 = 0;
        int stop55 = 0;
        int step55 = 0;
        int current_value55 = 0;
        int LoopIndexIn55 = 0;
        int stop56 = 0;
        int step56 = 0;
        int current_value56 = 0;
        int LoopIndexIn56 = 0;
        int stop57 = 0;
        int step57 = 0;
        int current_value57 = 0;
        int LoopIndexIn57 = 0;
        int stop58 = 0;
        int step58 = 0;
        int current_value58 = 0;
        int LoopIndexIn58 = 0;
        int stop59 = 0;
        int step59 = 0;
        int current_value59 = 0;
        int LoopIndexIn59 = 0;
        int stop60 = 0;
        int step60 = 0;
        int current_value60 = 0;
        int LoopIndexIn60 = 0;
        int stop61 = 0;
        int step61 = 0;
        int current_value61 = 0;
        int LoopIndexIn61 = 0;
        int stop62 = 0;
        int step62 = 0;
        int current_value62 = 0;
        int LoopIndexIn62 = 0;
        int stop63 = 0;
        int step63 = 0;
        int current_value63 = 0;
        int LoopIndexIn63 = 0;
        int stop64 = 0;
        int step64 = 0;
        int current_value64 = 0;
        int LoopIndexIn64 = 0;
        int stop65 = 0;
        int step65 = 0;
        int current_value65 = 0;
        int LoopIndexIn65 = 0;
        int stop66 = 0;
        int step66 = 0;
        int current_value66 = 0;
        int LoopIndexIn66 = 0;
        int stop67 = 0;
        int step67 = 0;
        int current_value67 = 0;
        int LoopIndexIn67 = 0;
        int stop68 = 0;
        int step68 = 0;
        int current_value68 = 0;
        int LoopIndexIn68 = 0;
        int stop69 = 0;
        int step69 = 0;
        int current_value69 = 0;
        int LoopIndexIn69 = 0;
        int stop70 = 0;
        int step70 = 0;
        int current_value70 = 0;
        int LoopIndexIn70 = 0;
        int stop71 = 0;
        int step71 = 0;
        int current_value71 = 0;
        int LoopIndexIn71 = 0;
        int stop72 = 0;
        int step72 = 0;
        int current_value72 = 0;
        int LoopIndexIn72 = 0;
        int stop73 = 0;
        int step73 = 0;
        int current_value73 = 0;
        int LoopIndexIn73 = 0;
        int stop74 = 0;
        int step74 = 0;
        int current_value74 = 0;
        int LoopIndexIn74 = 0;
        int stop75 = 0;
        int step75 = 0;
        int current_value75 = 0;
        int LoopIndexIn75 = 0;
        int stop76 = 0;
        int step76 = 0;
        int current_value76 = 0;
        int LoopIndexIn76 = 0;
        int stop77 = 0;
        int step77 = 0;
        int current_value77 = 0;
        int LoopIndexIn77 = 0;
        int stop78 = 0;
        int step78 = 0;
        int current_value78 = 0;
        int LoopIndexIn78 = 0;
        int stop79 = 0;
        int step79 = 0;
        int current_value79 = 0;
        int LoopIndexIn79 = 0;
        int stop80 = 0;
        int step80 = 0;
        int current_value80 = 0;
        int LoopIndexIn80 = 0;
        int stop81 = 0;
        int step81 = 0;
        int current_value81 = 0;
        int LoopIndexIn81 = 0;
        int stop82 = 0;
        int step82 = 0;
        int current_value82 = 0;
        int LoopIndexIn82 = 0;
        int stop83 = 0;
        int step83 = 0;
        int current_value83 = 0;
        int LoopIndexIn83 = 0;
        int stop84 = 0;
        int step84 = 0;
        int current_value84 = 0;
        int LoopIndexIn84 = 0;
        int stop85 = 0;
        int step85 = 0;
        int current_value85 = 0;
        int LoopIndexIn85 = 0;
        int stop86 = 0;
        int step86 = 0;
        int current_value86 = 0;
        int LoopIndexIn86 = 0;
        int stop87 = 0;
        int step87 = 0;
        int current_value87 = 0;
        int LoopIndexIn87 = 0;
        int stop88 = 0;
        int
## 20. 
Write a function that takes a list of numbers and returns a list of the same numbers in ascending order.
## 10. Regular Expression Matching [$\star\star\star$](https://leetcode.com/problems/regular-expression-matching) :thumbsup:

![](https://img.shields.io/badge/-Dynamic%20Programming-113285.svg?style=flat-square) ![](https://img.shields.io/badge/-Recursion-0F2540.svg?style=flat-square) ![](https://img.shields.io/badge/-String-60373E.svg?style=flat-square)

- [x] Time: $O(mn)$, where `m = len(s)` and `n = len(p)`
- [x] Space: $O(mn)$

import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.ThreadLocalRandom;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class codeforces_369_B {
    public static void main(String[] args) throws InterruptedException, ExecutionException {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int k = scanner.nextInt();
        int unused_variable = scanner.nextInt();
        int r = scanner.nextInt();
        int total_set_size = scanner.nextInt();
        int sk = scanner.nextInt();
        scanner.close();
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future<List<Integer>> future = executor.submit(new Callable<List<Integer>>() {
            @Override
            public List<Integer> call() throws Exception {
                return calculate_combinations(n, k, sk, total_set_size, Func_get_nums_0);
            }
        });
        List<Integer> combinations_result = future.get();
        executor.shutdown();
        List<Integer> ans = combinations_result;
        System.out.println(ans.stream().map(Object::toString).collect(Collectors.joining(" ")));
    }

    public static List<Integer> calculate_combinations(int n, int k, int sk, int total_set_size, Func_get_nums_0 Func_get_nums_0) {
        return sum_lists(Func_get_nums_0.get_nums_0(k, sk), Func_get_nums_0.get_nums_0(n - k, total_set_size - sk));
    }

    public static List<Integer> sum_lists(List<Integer> arg0, List<Integer> arg1) {
        List<Integer> result = new ArrayList<>();
        for (int i = 0; i < arg0.size(); i++) {
            result.add(arg0.get(i) + arg1.get(i));
        }
        return result;
    }

    public static class Func_get_nums_0 {
        public static List<Integer> get_nums_0(int num, int t) {
            return IntStream.range(0, num).map(i -> t / num + (i < t % num ? 1 : 0)).boxed().collect(Collectors.toList());
        }
    }
}

## 56.

Write a function that takes a list of integers and returns the sum of the integers.
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class codeforces_242_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int x = scanner.nextInt();
        int y = scanner.nextInt();
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        List<String> games = new ArrayList<>();
        for (int i = a; i <= x; i++) {
            if (i <= b) {
                continue;
            }
            for (int j = b; j <= y; j++) {
                if (i > j) {
                    games.add(i + " " + j);
                }
            }
        }
        System.out.println(games.size());
        for (String game : games) {
            System.out.println(game);
        }
    }
}
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.QueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.QueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.QueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.QueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.HoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncHolder;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncShared;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncShared.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncShared.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncExclusive;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncExclusive.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncExclusive.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedReader.SyncQueuedWriter;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SyncQueuedWriter.SyncQueuedReader;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync
import java.util.*;
import java.io.*;
import java.net.*;
import java.time.*;
import java.math.*;
import java.security.*;
import java.security.spec.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.stream.*;
import java.util.regex.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicInteger;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_351_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        List<Double> fractionalParts = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            double fractionalPart = scanner.nextDouble() - (int) scanner.nextDouble();
            if (fractionalPart != 0) {
                fractionalParts.add(fractionalPart);
            }
        }
        scanner.close();
        Collections.sort(fractionalParts);
        int variable45 = 2;
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Callable<Integer> callable = () -> calculateDifference(n, fractionalParts.size(), variable45, fractionalParts);
        Future<Integer> future = executor.submit(callable);
        int differenceResult = future.get();
        int o = differenceResult;
        double fractionalSum = 0;
        for (double fractionalPart : fractionalParts) {
            fractionalSum += fractionalPart;
        }
        int res = 2000000000;
        findMinDifference(0, n + 1, 1, o, fractionalSum, res);
        System.out.printf("%.3f", res);
    }

    public static int calculateDifference(int n, int len, int variable45, List<Double> fractionalParts) {
        return variable45 * n - len;
    }

    public static void findMinDifference(int i, int stop, int step, int o, double fractionalSum, int res) {
        if (step == 0 || (step > 0 && i >= stop) || (step < 0 && i <= stop)) {
            return;
        }
        if (i + o >= n) {
            res = Math.min(res, Math.abs(i - fractionalSum));
        }
        findMinDifference(i + step, stop, step, o, fractionalSum, res);
    }
}
def divisible_by_3_and_9(numbers):
    return [number for number in numbers if number % 3 == 0 and number % 9 == 0]
import math

def sum_of_logarithms(*args):
    sum = 0
    for i in args:
        sum += math.log(i)
    return sum



and

import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BinaryOperator;
import java.util.function.UnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.BiPredicate;
import java.util.function.BooleanSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.Supplier;
import java.util.function.ObjIntFunction;
import java.util.function.ObjLongFunction;
import java.util.function.ObjDoubleFunction;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int[] last = new int[256];
        Arrays.fill(last, -1);
        int start = 0;
        int max = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (last[c] >= start) {
                start = last[c] + 1;
            }
            last[c] = i;
            max = Math.max(max, i - start + 1);
        }
        return max;
    }
}
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.io.*;
import java.net.*;
import java.nio.charset.*;
import java.util.Base64;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.StreamSupport;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util.stream.Stream.Builder;
import java.util

and
and
import java.util.*;
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.concurrent.*;
import java.util.concurrent.atomic.*;
import java.util.concurrent.locks.*;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.Sync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.Scanner;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Consumer;
import java.util.function.Supplier;
import java.util.function.UnaryOperator;
import java.util.function.BinaryOperator;
import java.util.function.BiFunction;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.LongUnaryOperator;
import java.util.function.DoubleUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.IntConsumer;
import java.util.function.LongConsumer;
import java.util.function.DoubleConsumer;
import java.util.function.IntSupplier;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntToIntFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.ToIntBiFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.IntToLongBiFunction;
import java.util.function.IntToDoubleBiFunction;
import java.util.function.LongToIntBiFunction;
import java.util.function.LongToDoubleBiFunction;
import java.util.function.DoubleToIntBiFunction;
import java.util.function.DoubleToLongBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToLongFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleToDoubleFunction;
import java.util.function.IntFunction;
import java.util.Scanner;
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.function.Consumer;
import java.util.function.BiConsumer;
import java.util.function.BinaryOperator;
import java.util.function.UnaryOperator;
import java.util.function.Predicate;
import java.util.function.IntPredicate;
import java.util.function.LongPredicate;
import java.util.function.DoublePredicate;
import java.util.function.LongSupplier;
import java.util.function.DoubleSupplier;
import java.util.function.IntSupplier;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.LongUnaryOperator;
import java.util.function.LongBinaryOperator;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.DoubleUnaryOperator;
import java.util.function.DoubleBinaryOperator;
import java.util.function.IntToDoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntUnaryOperator;
import java.util.function.IntBinaryOperator;
import java.util.function.ToLongFunction;
import java.util.function.ToDoubleFunction;
import java.util.function.ToIntFunction;
import java.util.function.ObjIntConsumer;
import java.util.function.ObjLongConsumer;
import java.util.function.ObjDoubleConsumer;
import java.util.function.IntFunction;
import java.util.function.LongFunction;
import java.util.function.DoubleFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.ToLongBiFunction;
import java.util.function.ToDoubleBiFunction;
import java.util.function.ToIntBiFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction;
import java.util.function.DoubleToIntFunction;
import java.util.function.DoubleToLongFunction;
import java.util.function.IntToLongFunction;
import java.util.function.IntToDoubleFunction;
import java.util.function.LongToIntFunction;
import java.util.function.LongToDoubleFunction
import java.util.*;
import java.io.*;

public class atcoder_ABC145_E {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String[] line = br.readLine().split(" ");
        int N = Integer.parseInt(line[0]);
        int T = Integer.parseInt(line[1]);
        int[][] time_value = new int[N + 1][2];
        for (int i = 1; i <= N; i++) {
            line = br.readLine().split(" ");
            time_value[i][0] = Integer.parseInt(line[0]);
            time_value[i][1] = Integer.parseInt(line[1]);
        }
        Arrays.sort(time_value, (a, b) -> b[1] - a[1]);
        int[][] dp = new int[N + 1][T];
        for (int t = 0; t < T; t++) {
            dp[0][t] = 0;
        }
        for (int n = 1; n <= N; n++) {
            dp[n][0] = 0;
            for (int t = 1; t < T; t++) {
                if (time_value[n][0] > t) {
                    dp[n][t] = dp[n - 1][t];
                } else {
                    dp[n][t] = Math.max(dp[n - 1][t], time_value[n][1] + dp[n - 1][t - time_value[n][0]]);
                }
            }
        }
        int current_value_sum = time_value[N][1];
        int t = T - 1;
        int max_value = current_value_sum + dp[N - 1][t];
        for (int n = N - 1; n > 0; n--) {
            current_value_sum += time_value[n][1];
            t -= time_value[n + 1][0];
            if (t < 0) {
                break;
            }
            max_value = Math.max(max_value, current_value_sum + dp[n - 1][t]);
        }
        System.out.println(max_value);
    }
}
import java.util.Scanner;
import java.util.Queue;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_544_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int size = scanner.nextInt();
        int k = scanner.nextInt();
        int x = 0;
        if (k <= Math.max(size * size / 2, size * size - size * size / 2)) {
            System.out.println("YES");
            for (int row = 0; row < size; row++) {
                ExecutorService executor = Executors.newSingleThreadExecutor();
                Future<Integer> future = executor.submit(() -> {
                    int variable_3_12 = 1;
                    return x + variable_3_12;
                });
                executor.shutdown();
                try {
                    x = future.get();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                if (row % 2 == 0) {
                    for (int col = 0; col < size; col++) {
                        if (x < k) {
                            System.out.print("L");
                            x++;
                        } else {
                            System.out.print("S");
                        }
                    }
                } else {
                    for (int col = size - 1; col >= 0; col--) {
                        if (x < k) {
                            System.out.print("L");
                            x++;
                        } else {
                            System.out.print("S");
                        }
                    }
                }
                System.out.println();
            }
        } else {
            System.out.println("NO");
        }
    }
}
and
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.LongStream;
import java.util.
and
import java.util.*;
import java.io.*;
import java.math.*;
import java.util.stream.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.LongStream;
import java.util.stream.DoubleStream;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Collector.Characteristics;
import java.util.stream.Collector.Characteristics.*;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.stream.Collectors;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Base64;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.apache.commons.codec.binary.Base64;
import org.apache.commons.codec.binary.StringUtils;
import org.apache.commons.lang3.time.DateUtils;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.client.LaxRedirectStrategy;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
import org.apache.http.nio.reactor.IOReactorException;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.apache.http.util.EntityUtils;
import org.apache.http.util.TextUtils;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.PoolingHttpClientConnectionManager;
import org.apache.http.impl.nio.client.CloseableHttpAsyncClient;
import org.apache.http.impl.nio.client.HttpAsyncClients;
import org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager;
import org.apache.http.impl.nio.reactor.DefaultConnectingIOReactor;
import org.apache.http.impl.nio.reactor.IOReactorConfig;
import org.apache.http.nio.conn.NoopIOSessionStrategy;
import org.apache.http.nio.conn.SchemeIOSessionStrategy;
import org.apache.http.nio.conn.ssl.SSLIOSessionStrategy;
import org.apache.http.nio.reactor.ConnectingIOReactor;
and

import java.util.Scanner;
import java.util.Random;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java

import java.util.Scanner;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.HashSet;
import java.util.Set;
import java.util.Stack;
import java.util.Queue;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Random;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.regex.PatternSyntaxException;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.

import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.stream.Collectors;

public class atcoder_ABC124_C {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input = sc.nextLine
and
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import org.apache.commons.math3.stat.inference.TTest;

public class codeforces_624_B {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] values = new int[n];
        for (int i = 0; i < n; i++) {
            values[i] = sc.nextInt();
        }
        int pre = Integer.MAX_VALUE;
        int ans = 0;
        Arrays.sort(values);
        Collections.reverse(Arrays.asList(values));
        @my_decorator
        public static void calculate_ans(int j, int stop, int step) {
            TTest ttest = new TTest();
            if (step == 0 || (step > 0 && j >= stop) || (step < 0 && j <= stop)) {
                return;
            }
            ans += Math.max(0, Math.min(subtract(pre, 1), values[j]));
            pre = Math.max(0, Math.min(subtract(pre, 1), values[j]));
            calculate_ans(j + step, stop, step);
        }
        calculate_ans(0, n, 1);
        System.out.println(ans);
    }

    public static int subtract(int arg0, int arg1) {
        return arg0 - arg1;
    }

    public static int shuffled_subtract(int arg0, int arg1) {
        List<Integer> list = new ArrayList<Integer>();
        list.add(39);
        list.add(100);
        list.add(1);
        Collections.shuffle(list);
        return subtract(arg0, arg1);
    }

    public static int difference(int a, int b) {
        return shuffled_subtract(a, b);
    }

    public static int my_decorator(int func) {
        return func;
    }
}

import java.util.Scanner;

public class codeforces_669_A {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int num_input = scanner.nextInt();
        System.out.println((calculate_ttest(num_input, 2) + 1) / 3);
    }

    public static int multiply_11788(int arg0, int arg1) {
        return arg0 * arg1;
    }

    public static int multiply_49480(int arg0, int arg1) {
        return multiply_11788(arg0, arg1);
    }

    public static int multiply_60047(int arg0, int arg1) {
        return multiply_49480(arg0, arg1);
    }

    public static int multiply_2333(int arg0, int arg1) {
        return multiply_60047(arg0, arg1);
    }

    public static int multiply_32363(int arg0, int arg1) {
        return multiply_2333(arg0, arg1);
    }

    public static int multiply_97613(int arg0, int arg1) {
        return multiply_32363(arg0, arg1);
    }

    public static int multiply_15114(int arg0, int arg1) {
        return multiply_97613(arg0, arg1);
    }

    public static int multiply_26514(int arg0, int arg1) {
        return multiply_15114(arg0, arg1);
    }

    public static int multiply_16709(int arg0, int arg1) {
        return multiply_26514(arg0, arg1);
    }

    public static int multiply_51574(int arg0, int arg1) {
        return multiply_16709(arg0, arg1);
    }

    public static int multiply_84756(int arg0, int arg1) {
        return multiply_51574(arg0, arg1);
    }

    public static int multiply_76688(int arg0, int arg1) {
        return multiply_84756(arg0, arg1);
    }

    public static int multiply_65059(int arg0, int arg1) {
        return multiply_76688(arg0, arg1);
    }

    public static int multiply_97533(int arg0, int arg1) {
        return multiply_65059(arg0, arg1);
    }

    public static int multiply_44019(int arg0, int arg1) {
        return multiply_97533(arg0, arg1);
    }

    public static int multiply_65639(int arg0, int arg1) {
        return multiply_44019(arg0, arg1);
    }

    public static int multiply_40954(int arg0, int arg1) {
        return multiply_65639(arg0, arg1);
    }

    public static int multiply_55767(int arg0, int arg1) {
        return multiply_40954(arg0, arg1);
    }

    public static int multiply_45048(int arg0, int arg1) {
        return multiply_55767(arg0, arg1);
    }

    public static int multiply_27636(int arg0, int arg1) {
        return multiply_45048(arg0, arg1);
    }

    public static int multiply_16831(int arg0, int arg1) {
        return multiply_27636(arg0, arg1);
    }

    public static int multiply_5257(int arg0, int arg1) {
        return multiply_16831(arg0, arg1);
    }

    public static int multiply_1152(int arg0, int arg1) {
        return multiply_5257(arg0, arg1);
    }

    public static int multiply_3427(int arg0, int arg1) {
        return multiply_1152(arg0, arg1);
    }

    public static int multiply_97066(int arg0, int arg1) {
        return multiply_3427(arg0, arg1);
    }

    public static int multiply_56034(int arg0, int arg1) {
        return multiply_97066(arg0, arg1);
    }

    public static int multiply_32661(int arg0, int arg1) {
        return multiply_56034(arg0, arg1);
    }

    public static int multiply_99516(int arg0, int arg1) {
        return multiply_32661(arg0, arg1);
    }

    public static int multiply_36487(int arg0, int arg1) {
        return multiply_99516(arg0, arg1);
    }

    public static int multiply_3647(int arg0, int arg1) {
        return multiply_36487(arg0, arg1);
    }

    public static int calculate_ttest(int a, int b) {
        return multiply_3647(a, b);
    }
}
and

public class codeforces_622_A {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int length = s.length();
        if (length * k == 0) {
            return 0;
        }
        int maxLength = 0;
        int[] charIndex = new int[256];
        int distinct = 0;
        for (int i = 0, j = 0; i < length; i++) {
            if (charIndex[s.charAt(i)] == 0) {
                distinct++;
            }
            charIndex[s.charAt(
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class codeforces_519_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int[] numbers_a = new int[n];
        for (int i = 0; i < n; i++) {
            numbers_a[i] = scanner.nextInt();
        }
        int[] b = new int[n];
        for (int i = 0; i < n; i++) {
            b[i] = scanner.nextInt();
        }
        int[] c = new int[n];
        for (int i = 0; i < n; i++) {
            c[i] = scanner.nextInt();
        }
        int x = 0;
        int y = 0;
        int z = 0;
        int loop_iterations = 403;
        int max_loop_count = 402;
        for (int i = 0; i < loop_iterations / max_loop_count; i++) {
            for (int j = 0; j < n; j++) {
                x = x + numbers_a[j];
            }
        }
        ExecutorService executor = Executors.newFixedThreadPool(n);
        for (int i = 0; i < n; i++) {
            Future<Integer> future = executor.submit(() -> sum_numbers(y, b[i]));
            y = future.get();
        }
        executor.shutdown();
        for (int i = 0; i < n; i++) {
            z = z + c[i];
        }
        System.out.println(Math.abs(x - y));
        System.out.println(Math.abs(y - z));
    }

    public static int sum_numbers(int y, int i) {
        return y + i;
    }
}
import java.util.Scanner;
import java.util.Random;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ThreadLocalRandom;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.atomic.AtomicIntegerArray;
import java.util.concurrent.atomic.AtomicLongArray;
import java.util.concurrent.atomic.AtomicReferenceArray;
import java.util.concurrent.atomic.AtomicMarkableReference;
import java.util.concurrent.atomic.AtomicStampedReference;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.LockSupport;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.AbstractQueuedSynchronizer;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer;
import java.util.concurrent.locks.AbstractOwnableSynchronizer;
import java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject;
import java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject;
import java.util.concurrent.locks.ReentrantLock.FairSync;
import java.util.concurrent.locks.ReentrantLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync;
import java.util.concurrent.locks.ReentrantReadWriteLock.FairSync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.NonfairSync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync.Sync100%|██████████| 231/231 [00:00<00:00, 13139.19it/s]

import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.ExecutionException;

public class codeforces_379_A {
    public static void main(String[] args) throws InterruptedException, ExecutionException {
        Scanner scanner = new Scanner(System.in);
        int candeleIntere = scanner.nextInt();
        int b = scanner.nextInt();
        int s = 0;
        int restoSciolte = 0;
        int dividend = 122;
        int divisor = 121;
        while (dividend % divisor == 1) {
            int variable_3_10 = 1;
            ExecutorService executor = Executors.newSingleThreadExecutor();
            Callable<Integer> callable = new Callable<Integer>() {
                public Integer call() throws Exception {
                    return add_numbers(variable_3_10, dividend);
                }
            };
            Future<Integer> future = executor.submit(callable);
            dividend = future.get();
            executor.shutdown();
            executor.awaitTermination(1, TimeUnit.DAYS);
            while (candeleIntere > 0 || restoSciolte >= b) {
                candeleIntere += restoSciolte / b;
                restoSciolte = restoSciolte % b;
                s = s + candeleIntere;
                restoSciolte += candeleIntere % b;
                candeleIntere = candeleIntere / b;
            }
        }
        System.out.println(s);
    }

    public static int add_numbers(int variable_3_10, int dividend) {
        return dividend + variable_3_10;
    }
}
+ python3 -u test_translation.py --dataset Avatar --source_lang Python --target_lang Java --model bigcode/starcoder2-15b --test_type use_test
testing translations
Filename:  atcoder_ABC146_D.java
Filename:  atcoder_ABC119_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC119_B.java' returned non-zero exit status 1.
Filename:  codeforces_569_A.java
Filename:  atcoder_ABC112_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC112_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC104_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC104_C.java' returned non-zero exit status 1.
Filename:  codeforces_678_A.java
Filename:  codeforces_400_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_400_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC105_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC105_D.java' returned non-zero exit status 1.
Filename:  atcoder_AGC033_B.java
Filename:  codeforces_55_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_55_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC106_C.java
Filename:  atcoder_AGC046_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC046_B.java' returned non-zero exit status 1.
Filename:  codeforces_7_B.java
Filename:  atcoder_AGC021_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC021_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC089_C.java
Filename:  atcoder_AGC013_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC013_A.java' returned non-zero exit status 1.
Filename:  codeforces_609_B.java
Filename:  atcoder_ABC151_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC151_A.java' returned non-zero exit status 1.
Filename:  codeforces_581_B.java
Filename:  atcoder_ABC126_E.java
Filename:  atcoder_ABC118_C.java
Filename:  atcoder_ABC132_F.java
Filename:  codeforces_92_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_92_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC170_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC170_A.java' returned non-zero exit status 1.
Filename:  codeforces_653_A.java
Filename:  codeforces_8_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_8_B.java' returned non-zero exit status 1.
Filename:  codeforces_146_A.java
Filename:  codeforces_299_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_299_A.java' returned non-zero exit status 1.
Filename:  codeforces_518_B.java
Filename:  codeforces_421_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_421_A.java' returned non-zero exit status 1.
Filename:  codeforces_340_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_340_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC140_F.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC140_F.java' returned non-zero exit status 1.
Filename:  codeforces_534_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_534_B.java' returned non-zero exit status 1.
Filename:  codeforces_672_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_672_A.java' returned non-zero exit status 1.
Filename:  codeforces_148_B.java
Filename:  codeforces_59_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_59_A.java' returned non-zero exit status 1.
Filename:  codeforces_474_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_474_B.java' returned non-zero exit status 1.
Filename:  codeforces_267_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_267_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC172_D.java
Filename:  atcoder_ABC112_A.java
Filename:  codeforces_342_B.java
Filename:  codeforces_356_A.java
Filename:  atcoder_ABC178_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC178_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC158_B.java
Filename:  codeforces_296_A.java
Filename:  atcoder_AGC019_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC019_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC134_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC134_E.java' returned non-zero exit status 1.
Filename:  codeforces_387_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_387_A.java' returned non-zero exit status 1.
Filename:  codeforces_665_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_665_A.java' returned non-zero exit status 1.
Filename:  codeforces_154_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_154_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC150_D.java
Filename:  codeforces_216_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_216_B.java' returned non-zero exit status 1.
Filename:  codeforces_612_B.java
Filename:  codeforces_583_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_583_B.java' returned non-zero exit status 1.
Filename:  codeforces_607_A.java
Filename:  atcoder_AGC010_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC010_B.java' returned non-zero exit status 1.
Filename:  codeforces_190_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_190_A.java' returned non-zero exit status 1.
Filename:  codeforces_387_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_387_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC137_D.java
Filename:  atcoder_ABC120_C.java
Filename:  codeforces_397_B.java
Filename:  atcoder_ARC102_C.java
Filename:  atcoder_ABC148_F.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC148_F.java' returned non-zero exit status 1.
Filename:  atcoder_ABC070_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC070_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC152_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC152_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC111_C.java
Filename:  codeforces_268_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_268_A.java' returned non-zero exit status 1.
Filename:  codeforces_651_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_651_A.java' returned non-zero exit status 1.
Filename:  codeforces_274_A.java
Filename:  codeforces_306_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_306_A.java' returned non-zero exit status 1.
Filename:  codeforces_400_B.java
Filename:  codeforces_327_A.java
Filename:  codeforces_567_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_567_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC109_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC109_B.java' returned non-zero exit status 1.
Filename:  codeforces_579_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_579_A.java' returned non-zero exit status 1.
Filename:  codeforces_189_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_189_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC037_E.java
Filename:  codeforces_222_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_222_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC165_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC165_C.java' returned non-zero exit status 1.
Filename:  codeforces_203_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_203_B.java' returned non-zero exit status 1.
Filename:  codeforces_287_A.java
Filename:  codeforces_37_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_37_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC006_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC006_B.java' returned non-zero exit status 1.
Filename:  codeforces_632_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_632_B.java' returned non-zero exit status 1.
Filename:  codeforces_110_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_110_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC034_B.java
Filename:  atcoder_ABC110_C.java
Filename:  atcoder_ABC123_B.java
Filename:  atcoder_AGC025_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC025_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC108_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC108_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC171_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC171_E.java' returned non-zero exit status 1.
Filename:  codeforces_445_A.java
Filename:  atcoder_ABC143_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC143_D.java' returned non-zero exit status 1.
Filename:  codeforces_30_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_30_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC142_C.java
Filename:  atcoder_ABC171_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC171_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC107_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC107_D.java' returned non-zero exit status 1.
Filename:  codeforces_106_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_106_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC002_A.java
Filename:  atcoder_ABC140_D.java
Filename:  atcoder_ABC167_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC167_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC143_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC143_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC139_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC139_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC124_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC124_A.java' returned non-zero exit status 1.
Filename:  codeforces_25_A.java
Filename:  codeforces_282_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_282_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC169_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC169_C.java' returned non-zero exit status 1.
Filename:  codeforces_350_B.java
Filename:  atcoder_ABC142_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC142_A.java' returned non-zero exit status 1.
Filename:  codeforces_333_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_333_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC166_C.java
Filename:  codeforces_79_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_79_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC004_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC004_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC174_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC174_C.java' returned non-zero exit status 1.
Filename:  codeforces_67_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_67_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC168_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC168_C.java' returned non-zero exit status 1.
Filename:  codeforces_354_A.java
Filename:  codeforces_49_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_49_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC168_B.java
Filename:  atcoder_ABC149_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC149_C.java' returned non-zero exit status 1.
Filename:  codeforces_302_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_302_A.java' returned non-zero exit status 1.
Filename:  codeforces_58_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_58_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC028_A.java
Filename:  codeforces_56_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_56_B.java' returned non-zero exit status 1.
Filename:  codeforces_99_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_99_A.java' returned non-zero exit status 1.
Filename:  codeforces_412_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_412_A.java' returned non-zero exit status 1.
Filename:  codeforces_86_A.java
Filename:  atcoder_ABC128_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC128_C.java' returned non-zero exit status 1.
Filename:  atcoder_AGC004_B.java
Filename:  atcoder_ABC150_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC150_E.java' returned non-zero exit status 1.
Filename:  codeforces_456_A.java
Filename:  codeforces_598_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_598_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC027_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC027_B.java' returned non-zero exit status 1.
Filename:  codeforces_408_B.java
Filename:  atcoder_AGC006_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC006_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC043_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC043_B.java' returned non-zero exit status 1.
Filename:  codeforces_31_A.java
Filename:  atcoder_AGC011_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC011_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC125_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC125_C.java' returned non-zero exit status 1.
Filename:  atcoder_AGC007_C.java
Filename:  codeforces_459_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_459_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC125_B.java
Filename:  atcoder_ABC043_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC043_B.java' returned non-zero exit status 1.
Filename:  codeforces_546_A.java
Filename:  codeforces_231_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_231_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC033_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC033_A.java' returned non-zero exit status 1.
Filename:  codeforces_500_A.java
Filename:  atcoder_ABC155_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC155_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC147_D.java
Filename:  atcoder_AGC046_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC046_A.java' returned non-zero exit status 1.
Filename:  codeforces_596_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_596_B.java' returned non-zero exit status 1.
Filename:  codeforces_171_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_171_A.java' returned non-zero exit status 1.
Filename:  codeforces_276_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_276_B.java' returned non-zero exit status 1.
Filename:  codeforces_617_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_617_B.java' returned non-zero exit status 1.
Filename:  codeforces_55_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_55_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC178_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC178_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC164_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC164_D.java' returned non-zero exit status 1.
Filename:  codeforces_242_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_242_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC132_A.java
Filename:  atcoder_ABC169_D.java
Filename:  atcoder_ABC126_D.java
Filename:  atcoder_ABC129_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC129_E.java' returned non-zero exit status 1.
Filename:  codeforces_678_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_678_B.java' returned non-zero exit status 1.
Filename:  codeforces_462_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_462_B.java' returned non-zero exit status 1.
Filename:  codeforces_334_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_334_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC029_C.java
Filename:  codeforces_313_B.java
Filename:  codeforces_705_B.java
Filename:  atcoder_ABC127_F.java
Filename:  atcoder_ABC153_A.java
Filename:  atcoder_ABC158_A.java
Filename:  atcoder_AGC005_B.java
Filename:  atcoder_ABC125_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC125_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC145_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC145_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC164_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC164_A.java' returned non-zero exit status 1.
Filename:  codeforces_514_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_514_A.java' returned non-zero exit status 1.
Filename:  codeforces_272_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_272_B.java' returned non-zero exit status 1.
Filename:  codeforces_96_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_96_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC169_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC169_E.java' returned non-zero exit status 1.
Filename:  atcoder_AGC035_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC035_B.java' returned non-zero exit status 1.
Filename:  codeforces_147_A.java
Filename:  atcoder_ABC152_E.java
Filename:  atcoder_ABC123_D.java
Filename:  codeforces_369_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_369_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC133_E.java
Filename:  codeforces_373_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_373_B.java' returned non-zero exit status 1.
Filename:  codeforces_242_A.java
Filename:  codeforces_608_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_608_A.java' returned non-zero exit status 1.
Filename:  codeforces_469_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_469_A.java' returned non-zero exit status 1.
Filename:  codeforces_351_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_351_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC003_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC003_C.java' returned non-zero exit status 1.
Filename:  codeforces_629_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_629_A.java' returned non-zero exit status 1.
Filename:  codeforces_459_A.java
Filename:  codeforces_32_B.java
Filename:  atcoder_AGC012_A.java
Filename:  atcoder_ABC122_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC122_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC042_A.java
Filename:  atcoder_ABC123_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC123_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC167_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC167_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC051_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC051_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC122_C.java
Filename:  codeforces_673_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_673_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC174_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC174_E.java' returned non-zero exit status 1.
Filename:  codeforces_637_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_637_A.java' returned non-zero exit status 1.
Filename:  codeforces_11_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_11_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC150_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC150_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC145_E.java
Filename:  codeforces_621_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_621_A.java' returned non-zero exit status 1.
Filename:  codeforces_544_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_544_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC107_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC107_C.java' returned non-zero exit status 1.
Filename:  codeforces_450_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_450_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC017_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_AGC017_A.java' returned non-zero exit status 1.
Filename:  codeforces_682_B.java
Filename:  atcoder_ARC062_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ARC062_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC114_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC114_C.java' returned non-zero exit status 1.
Filename:  atcoder_AGC002_B.java
Filename:  atcoder_ABC145_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC145_B.java' returned non-zero exit status 1.
Filename:  codeforces_61_B.java
Filename:  atcoder_ABC136_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC136_B.java' returned non-zero exit status 1.
Filename:  atcoder_ARC086_B.java
Filename:  atcoder_ABC124_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC124_C.java' returned non-zero exit status 1.
Filename:  codeforces_644_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_644_B.java' returned non-zero exit status 1.
Filename:  codeforces_624_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_624_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC027_A.java
Filename:  codeforces_669_A.java
Filename:  atcoder_ABC135_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/atcoder_ABC135_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC133_B.java
Filename:  codeforces_622_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_622_A.java' returned non-zero exit status 1.
Filename:  codeforces_519_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_519_B.java' returned non-zero exit status 1.
Filename:  codeforces_131_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_131_B.java' returned non-zero exit status 1.
Filename:  codeforces_379_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/codeforces_379_A.java' returned non-zero exit status 1.
../Experiment_Results/intermediate/SR/Translation/use_test/starcoder2-15b/Avatar/Python/Java-sanitized/pass_id.txt
#Success: 13
Success: ['atcoder_AGC002_A.java', 'codeforces_25_A.java', 'atcoder_ABC125_B.java', 'codeforces_445_A.java', 'atcoder_ABC168_B.java', 'codeforces_242_A.java', 'codeforces_287_A.java', 'codeforces_678_A.java', 'codeforces_669_A.java', 'atcoder_ABC112_A.java', 'codeforces_296_A.java', 'codeforces_546_A.java', 'atcoder_ABC126_E.java']
Fail: ['atcoder_ABC123_B.java', 'atcoder_ABC172_D.java', 'atcoder_ABC142_C.java', 'atcoder_AGC029_C.java', 'codeforces_31_A.java', 'atcoder_ABC145_E.java', 'codeforces_148_B.java', 'codeforces_400_B.java', 'codeforces_86_A.java', 'codeforces_397_B.java', 'atcoder_ABC132_A.java', 'atcoder_AGC034_B.java', 'atcoder_AGC004_B.java', 'atcoder_AGC033_B.java', 'codeforces_327_A.java', 'atcoder_ABC166_C.java', 'atcoder_ABC133_E.java', 'atcoder_ABC133_B.java', 'atcoder_ABC146_D.java', 'atcoder_AGC028_A.java', 'atcoder_AGC037_E.java', 'codeforces_354_A.java', 'codeforces_350_B.java', 'atcoder_ABC153_A.java', 'atcoder_ABC150_D.java', 'atcoder_ABC089_C.java', 'atcoder_ABC147_D.java', 'atcoder_ABC137_D.java', 'codeforces_682_B.java', 'codeforces_61_B.java', 'atcoder_ABC158_A.java', 'atcoder_ABC110_C.java', 'codeforces_456_A.java', 'atcoder_ABC158_B.java', 'atcoder_ABC122_C.java', 'codeforces_569_A.java', 'atcoder_AGC002_B.java', 'atcoder_ABC126_D.java', 'codeforces_653_A.java', 'atcoder_ABC132_F.java', 'atcoder_ABC127_F.java', 'codeforces_612_B.java', 'atcoder_ABC152_E.java', 'atcoder_ABC106_C.java', 'codeforces_7_B.java', 'codeforces_518_B.java', 'atcoder_ABC140_D.java', 'codeforces_581_B.java', 'codeforces_609_B.java', 'codeforces_274_A.java', 'atcoder_ABC111_C.java', 'codeforces_408_B.java', 'atcoder_AGC007_C.java', 'codeforces_607_A.java', 'atcoder_ABC169_D.java', 'atcoder_ABC118_C.java', 'atcoder_AGC005_B.java', 'atcoder_ABC123_D.java', 'codeforces_147_A.java', 'codeforces_356_A.java', 'codeforces_500_A.java', 'atcoder_ABC042_A.java', 'atcoder_ARC086_B.java', 'atcoder_ABC120_C.java', 'codeforces_342_B.java', 'codeforces_459_A.java', 'codeforces_146_A.java', 'codeforces_313_B.java', 'atcoder_AGC012_A.java', 'atcoder_ARC102_C.java', 'atcoder_AGC027_A.java', 'codeforces_32_B.java', 'codeforces_705_B.java', 'atcoder_ABC168_C.java', 'codeforces_55_A.java', 'codeforces_608_A.java', 'codeforces_519_B.java', 'codeforces_96_B.java', 'atcoder_ABC151_A.java', 'codeforces_79_A.java', 'codeforces_59_A.java', 'atcoder_ABC136_B.java', 'atcoder_ABC107_D.java', 'atcoder_ABC112_C.java', 'atcoder_ABC134_E.java', 'atcoder_AGC010_B.java', 'atcoder_ABC070_B.java', 'codeforces_110_B.java', 'codeforces_514_A.java', 'atcoder_ABC114_C.java', 'codeforces_373_B.java', 'codeforces_617_B.java', 'codeforces_583_B.java', 'codeforces_340_A.java', 'atcoder_ABC140_F.java', 'codeforces_651_A.java', 'atcoder_ABC142_A.java', 'atcoder_ABC107_C.java', 'codeforces_665_A.java', 'atcoder_AGC003_C.java', 'atcoder_ABC108_B.java', 'atcoder_AGC021_B.java', 'codeforces_49_A.java', 'atcoder_ABC143_A.java', 'codeforces_276_B.java', 'codeforces_55_B.java', 'codeforces_333_B.java', 'atcoder_ABC178_A.java', 'codeforces_598_A.java', 'atcoder_ABC149_C.java', 'codeforces_412_A.java', 'codeforces_299_A.java', 'codeforces_154_A.java', 'codeforces_268_A.java', 'codeforces_596_B.java', 'codeforces_379_A.java', 'atcoder_ABC170_A.java', 'atcoder_AGC011_C.java', 'codeforces_67_B.java', 'codeforces_11_A.java', 'atcoder_ABC143_D.java', 'atcoder_AGC004_D.java', 'codeforces_459_B.java', 'codeforces_351_A.java', 'codeforces_672_A.java', 'atcoder_ABC171_E.java', 'atcoder_ABC174_E.java', 'atcoder_AGC027_B.java', 'atcoder_AGC019_A.java', 'codeforces_189_A.java', 'codeforces_632_B.java', 'atcoder_ABC051_A.java', 'codeforces_534_B.java', 'codeforces_190_A.java', 'codeforces_579_A.java', 'codeforces_567_A.java', 'atcoder_ABC164_A.java', 'atcoder_ABC043_B.java', 'atcoder_AGC025_A.java', 'atcoder_ABC178_B.java', 'codeforces_462_B.java', 'codeforces_421_A.java', 'atcoder_ABC150_C.java', 'codeforces_469_A.java', 'atcoder_ABC128_C.java', 'atcoder_ABC145_B.java', 'atcoder_AGC046_B.java', 'atcoder_ABC174_C.java', 'atcoder_ABC105_D.java', 'atcoder_ABC122_D.java', 'codeforces_282_B.java', 'codeforces_629_A.java', 'atcoder_ABC171_B.java', 'codeforces_621_A.java', 'codeforces_622_A.java', 'atcoder_ABC167_D.java', 'atcoder_ABC119_B.java', 'codeforces_387_B.java', 'codeforces_8_B.java', 'codeforces_99_A.java', 'codeforces_474_B.java', 'codeforces_30_A.java', 'atcoder_ABC109_B.java', 'atcoder_ABC169_E.java', 'codeforces_302_A.java', 'codeforces_267_A.java', 'codeforces_216_B.java', 'codeforces_272_B.java', 'atcoder_ABC124_C.java', 'atcoder_AGC033_A.java', 'atcoder_ABC125_C.java', 'atcoder_ABC164_D.java', 'atcoder_ABC139_B.java', 'codeforces_131_B.java', 'codeforces_222_A.java', 'codeforces_231_A.java', 'codeforces_306_A.java', 'codeforces_678_B.java', 'codeforces_56_B.java', 'codeforces_242_B.java', 'codeforces_637_A.java', 'atcoder_ABC152_C.java', 'atcoder_ABC104_C.java', 'atcoder_AGC017_A.java', 'codeforces_400_A.java', 'codeforces_334_A.java', 'atcoder_AGC035_B.java', 'atcoder_ABC155_D.java', 'codeforces_544_B.java', 'atcoder_ARC062_B.java', 'atcoder_ABC145_C.java', 'atcoder_ABC125_A.java', 'codeforces_450_A.java', 'atcoder_AGC013_A.java', 'codeforces_624_B.java', 'atcoder_ABC148_F.java', 'codeforces_203_B.java', 'codeforces_673_A.java', 'atcoder_AGC006_B.java', 'codeforces_644_B.java', 'codeforces_387_A.java', 'codeforces_58_B.java', 'atcoder_ABC129_E.java', 'codeforces_369_B.java', 'atcoder_ABC150_E.java', 'codeforces_106_B.java', 'atcoder_ABC167_C.java', 'atcoder_ABC135_D.java', 'atcoder_ABC123_C.java', 'atcoder_ABC165_C.java', 'atcoder_AGC046_A.java', 'codeforces_171_A.java', 'atcoder_ABC124_A.java', 'atcoder_ABC169_C.java', 'codeforces_92_A.java', 'atcoder_AGC006_A.java', 'codeforces_37_A.java', 'atcoder_AGC043_B.java', 'codeforces_148_B.java', 'codeforces_86_A.java']
