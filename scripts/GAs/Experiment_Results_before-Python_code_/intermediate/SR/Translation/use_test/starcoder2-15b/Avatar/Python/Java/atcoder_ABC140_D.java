

```
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        int K = sc.nextInt();
        String S = sc.next();
        int seg_cnt = 0;
        for (int i = 0; i < N - 1; i++) {
            if (S.charAt(i) != S.charAt(i + 1)) {
                seg_cnt++;
            }
        }
        int cur_happy = N - 1 - seg_cnt;
        if (2 * K >= seg_cnt) {
            System.out.println(N - 1);
        } else {
            System.out.println(cur_happy + 2 * K);
        }
    }
}
```

## 2. 1000000007

### 2.1. 题目

1000000007

### 2.2. 题目描述

### 2.3. 输入

### 2.4. 输出

### 2.5. 样例

### 2.6. 思路

### 2.7. 代码

```

```

## 3. 1000000007

### 3.1. 题目

1000000007

### 3.2. 题目描述

### 3.3. 输入

### 3.4. 输出

### 3.5. 样例

### 3.6. 思路

### 3.7. 代码

```

```

## 4. 1000000007

### 4.1. 题目

1000000007

### 4.2. 题目描述

### 4.3. 输入

### 4.4. 输出

### 4.5. 样例

### 4.6. 思路

### 4.7. 代码

```

```

## 5. 1000000007

### 5.1. 题目

1000000007

### 5.2. 题目描述

### 5.3. 输入

### 5.4. 输出

### 5.5. 样例

### 5.6. 思路

### 5.7. 代码

```

```

## 6. 1000000007

### 6.1. 题目

1000000007

### 6.2. 题目描述

### 6.3. 输入

### 6.4. 输出

### 6.5. 样例

### 6.6. 思路

### 6.7. 代码

```

```

## 7. 1000000007

### 7.1. 题目

1000000007

### 7.2. 题目描述

### 7.3. 输入

### 7.4. 输出

### 7.5. 样例

### 7.6. 思路

### 7.7. 代码

```

```

## 8. 1000000007

### 8.1. 题目

1000000007

### 8.2. 题目描述

### 8.3. 输入

### 8.4. 输出

### 8.5. 样例

### 8.6. 思路

### 8.7. 代码

```

```

## 9. 1000000007

### 9.1. 题目

1000000007

### 9.2. 题目描述

### 9.3. 输入

### 9.4. 输出

### 9.5. 样例

### 9.6. 思路

### 9.7. 代码

```

```

## 10. 1000000007

### 10.1. 题目

1000000007

### 10.2. 题目描述

### 10.3. 输入

### 10.4. 输出

### 10.5. 样例

### 10.6. 思路

### 10.7. 代码

```

```
/docs/leetcode/0000-0050/0000-0009/0009.md
# 0009.回文数（Palindrome Number）

## 题目描述

判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true

示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。

进阶:

你能不将整数转为字符串来解决这个问题吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

## 思路

## 代码

```java
class Solution {
    public boolean isPalindrome(int x) {
        if (x < 0) {
            return false;
        }
        int y = x;
        int z = 0;
        while (y > 0) {
            z = z * 10 + y % 10;
            y /= 10;
        }
        return x == z;
    }
}
```
 1000000007

### 10.2. 题目描述

### 10.3. 输入

### 10.4. 输出

### 10.5. 样例

### 10.6. 思路

### 10.7. 代码

```

```
/docs/leetcode/0000-0050/0000-0009/0009.md
# 0009.回文数（Palindrome Number）

## 题目描述

判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true

示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。

进阶:

你能不将整数转为字符串来解决这个问题吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

## 思路

## 代码

```java
class Solution {
    public boolean isPalindrome(int x) {
        if (x < 0) {
            return false;
        }
        int y = x;
        int z = 0;
        while (y > 0) {
            z = z * 10 + y % 10;
            y /= 10;
        }
        return x == z;
    }
}
```

## 2. 1000000007

### 2.1. 题目

1000000007

### 2.2. 题目描述

### 2.3. 输入

### 2.4. 输出

### 2.5. 样例

### 2.6. 思路

### 2.7. 代码

```

```

## 3. 1000000007

### 3.1. 题目

1000000007

### 3.2. 题目描述

### 3.3. 输入

### 3.4. 输出

### 3.5. 样例

### 3.6. 思路

### 3.7. 代码

```

```

## 4. 1000000007

### 4.1. 题目

1000000007

### 4.2. 题目描述

### 4.3. 输入

### 4.4. 输出

### 4.5. 样例

### 4.6. 思路

### 4.7. 代码

```

```

## 5. 1000000007

### 5.1. 题目

1000000007

### 5.2. 题目描述

### 5.3. 输入

### 5.4. 输出

### 5.5. 样例

### 5.6. 思路

### 5.7. 代码

```

```

## 6. 1000000007

### 6.1. 题目

1000000007

### 6.2. 题目描述

### 6.3. 输入

### 6.4. 输出

### 6.5. 样例

### 6.6. 思路

### 6.7. 代码

```

```

## 7. 1000000007

### 7.1. 题目

1000000007

### 7.2. 题目描述

### 7.3. 输入

### 7.4. 输出

### 7.5. 样例

### 7.6. 思路

### 7.7. 代码

```

```

## 8. 1000000007

### 8.1. 题目

1000000007

### 8.2. 题目描述

### 8.3. 输入

### 8.4. 输出

### 8.5. 样例

### 8.6. 思路

### 8.7. 代码

```

```

## 9. 1000000007

### 9.1. 题目

1000000007

### 9.2. 题目描述

### 9.3. 输入

### 9.4. 输出

### 9.5. 样例

### 9.6. 思路

### 9.7. 代码

```

```

## 10. 1000000007

### 10.1. 题目

1000000007

### 10.2. 题目描述

### 10.3. 输入

### 10.4. 输出

### 10.5. 样例

### 10.6. 思路

### 10.7. 代码

```

```

## 10./docs/leetcode/0000-0050/0000-0009/0009.md
# 0009.回文数（Palindrome Number）

## 题目描述

判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

输入: 121
输出: true

示例 2:

输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

示例 3:

输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。

进阶:

你能不将整数转为字符串来解决这个问题吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

## 思路

## 代码

```java
class Solution {
    public boolean isPalindrome(int x) {
        if (x < 0) {
            return false;
        }
        int y = x;
        int z = 0;
        while (y > 0) {
            z = z * 10 + y % 10;
            y /= 10;
        }
        return x == z;
    }
}
```

## 2. 1000000007

### 2.1. 题目

1000000007

### 2.2. 题目描述

### 2.3. 输入

### 2.4. 输出

### 2.5. 样例

### 2.6. 思路

### 2.7. 代码

```

```

## 3. 1000000007

### 3.1. 题目

1000000007

### 3.2. 题目描述

### 3.3. 输入

### 3.4. 输出

### 3.5. 样例

### 3.6. 思路

### 3.7. 代码

```

```

## 4. 1000000007

### 4.1. 题目

1000000007

### 4.2. 题目描述

### 4.3. 输入

### 4.4. 输出

### 4.5. 样例

### 4.6. 思路

### 4.7. 代码

```

```

## 5. 1000000007

### 5
