

```java
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        int[] p = new int[n];
        int[] h = new int[n];
        for (int i = 0; i < n; i++) {
            p[i] = i + 1;
        }
        for (int i = 0; i < n; i++) {
            h[i] = sc.nextInt();
        }
        int[][] path = new int[n][n];
        for (int i = 0; i < m; i++) {
            int a = sc.nextInt();
            int b = sc.nextInt();
            path[a - 1][b - 1] = 1;
            path[b - 1][a - 1] = 1;
        }
        int c = 0;
        for (int i = 0; i < n; i++) {
            int f = 0;
            for (int j = 0; j < n; j++) {
                if (path[i][j] == 1 && h[i] <= h[j]) {
                    f = 1;
                    break;
                }
            }
            if (f == 0) {
                c++;
            }
        }
        System.out.println(c);
    }
}

```

## 2. 2019-09-10

### 2.1. 1000000000

Translate the following Python code to Java and enclose your solution inside ```java and ```.
A sample test case is provided below:

Test input:
1000000000
Expected output:
1000000000


```
print ( 1000000000 )


```

Java code:

```java
public class Main {
    public static void main(String[] args) {
        System.out.println(1000000000);
    }
}

```

### 2.2. 1000000000000000000

Translate the following Python code to Java and enclose your solution inside ```java and ```.
A sample test case is provided below:

Test input:
1000000000000000000
Expected output:
1000000000000000000


```
print ( 1000000000000000000 )


```

Java code:

```java
public class Main {
    public static void main(String[] args) {
        System.out.println(1000000000000000000L);
    }
}

```


