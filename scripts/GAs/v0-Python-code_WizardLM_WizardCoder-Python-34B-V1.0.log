+ model=WizardLM/WizardCoder-Python-34B-V1.0
+ dataset=Avatar
+ cache=tmp
+ src=Python
+ tgt=Java
+ python3 translate.py --model WizardLM/WizardCoder-Python-34B-V1.0 --dataset Avatar --source_lang Python --target_lang Java --cache_dir tmp --use_test
INFO 08-21 03:36:21 [__init__.py:241] Automatically detected platform cuda.
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama_fast.LlamaTokenizerFast'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message.
found 231 inputs
INFO 08-21 03:36:24 [utils.py:326] non-default args: {'model': 'WizardLM/WizardCoder-Python-34B-V1.0', 'trust_remote_code': True, 'dtype': 'bfloat16', 'max_model_len': 4096, 'tensor_parallel_size': 2, 'disable_log_stats': True}
The argument `trust_remote_code` is to be used with Auto classes. It has no effect here and is ignored.
INFO 08-21 03:36:30 [__init__.py:711] Resolved architecture: LlamaForCausalLM
WARNING 08-21 03:36:30 [__init__.py:2819] Casting torch.float16 to torch.bfloat16.
INFO 08-21 03:36:30 [__init__.py:1750] Using max model len 4096
INFO 08-21 03:36:30 [scheduler.py:222] Chunked prefill is enabled with max_num_batched_tokens=16384.
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:36:33 [core.py:636] Waiting for init message from front-end.
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:36:33 [core.py:74] Initializing a V1 LLM engine (v0.10.1.1) with config: model='WizardLM/WizardCoder-Python-34B-V1.0', speculative_config=None, tokenizer='WizardLM/WizardCoder-Python-34B-V1.0', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=WizardLM/WizardCoder-Python-34B-V1.0, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"cudagraph_mode":1,"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"pass_config":{},"max_capture_size":512,"local_cache_dir":null}
[1;36m(EngineCore_0 pid=2618656)[0;0m WARNING 08-21 03:36:33 [multiproc_worker_utils.py:273] Reducing Torch parallelism from 26 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:36:33 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_f699a64b'), local_subscribe_addr='ipc:///tmp/9ff55d0e-f8ac-4b9b-9b65-28771f0252b9', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:35 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_4e9a8c8c'), local_subscribe_addr='ipc:///tmp/577de2e3-e850-4477-9627-74cfd5954633', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:35 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_c333beb8'), local_subscribe_addr='ipc:///tmp/eb3d6d6a-e7ac-499d-88f6-14cca22d999a', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_5e8ee251'), local_subscribe_addr='ipc:///tmp/4d0f0ea3-e672-49a8-ac3e-eee608664812', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [parallel_state.py:1134] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [parallel_state.py:1134] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m WARNING 08-21 03:36:36 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m WARNING 08-21 03:36:36 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [gpu_model_runner.py:1953] Starting to load model WizardLM/WizardCoder-Python-34B-V1.0...
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [gpu_model_runner.py:1953] Starting to load model WizardLM/WizardCoder-Python-34B-V1.0...
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:36 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:36 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:36:37 [weight_utils.py:296] Using model weights format ['*.bin']
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:36:37 [weight_utils.py:296] Using model weights format ['*.bin']
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:37:30 [weight_utils.py:312] Time spent downloading weights for WizardLM/WizardCoder-Python-34B-V1.0: 53.006552 seconds
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:   0% Completed | 0/7 [00:00<?, ?it/s]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  14% Completed | 1/7 [00:09<00:59,  9.90s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  29% Completed | 2/7 [00:19<00:48,  9.76s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  43% Completed | 3/7 [00:28<00:38,  9.52s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  57% Completed | 4/7 [00:38<00:28,  9.66s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  71% Completed | 5/7 [00:48<00:19,  9.62s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards:  86% Completed | 6/7 [00:57<00:09,  9.59s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards: 100% Completed | 7/7 [01:07<00:00,  9.59s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Loading pt checkpoint shards: 100% Completed | 7/7 [01:07<00:00,  9.62s/it]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m 
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:38:37 [default_loader.py:262] Loading weights took 67.36 seconds
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:38:38 [gpu_model_runner.py:2007] Model loading took 31.4323 GiB and 120.970336 seconds
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:38:40 [default_loader.py:262] Loading weights took 69.40 seconds
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:38:40 [gpu_model_runner.py:2007] Model loading took 31.4323 GiB and 123.230900 seconds
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:38:49 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/f164024642/rank_1_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:38:49 [backends.py:559] Dynamo bytecode transform time: 9.37 s
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:38:49 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/f164024642/rank_0_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:38:49 [backends.py:559] Dynamo bytecode transform time: 9.39 s
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:38:52 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:38:52 [backends.py:194] Cache the graph for dynamic shape for later use
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:39:23 [backends.py:215] Compiling a graph for dynamic shape takes 33.09 s
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:39:23 [backends.py:215] Compiling a graph for dynamic shape takes 33.09 s
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:39:32 [monitor.py:34] torch.compile takes 42.46 s in total
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:39:32 [monitor.py:34] torch.compile takes 42.49 s in total
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:39:33 [gpu_worker.py:276] Available KV cache memory: 36.30 GiB
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:39:33 [gpu_worker.py:276] Available KV cache memory: 36.30 GiB
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:39:34 [kv_cache_utils.py:849] GPU KV cache size: 396,528 tokens
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:39:34 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 96.81x
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:39:34 [kv_cache_utils.py:849] GPU KV cache size: 396,528 tokens
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:39:34 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 96.81x
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   3%|▎         | 2/67 [00:00<00:04, 14.85it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   6%|▌         | 4/67 [00:00<00:03, 16.46it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   9%|▉         | 6/67 [00:00<00:03, 16.99it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  12%|█▏        | 8/67 [00:00<00:03, 17.37it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  15%|█▍        | 10/67 [00:00<00:03, 17.42it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  18%|█▊        | 12/67 [00:00<00:03, 17.74it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  21%|██        | 14/67 [00:00<00:02, 17.86it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  24%|██▍       | 16/67 [00:00<00:02, 18.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  27%|██▋       | 18/67 [00:01<00:02, 18.42it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  30%|██▉       | 20/67 [00:01<00:02, 18.50it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  33%|███▎      | 22/67 [00:01<00:02, 18.66it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  36%|███▌      | 24/67 [00:01<00:02, 18.46it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  39%|███▉      | 26/67 [00:01<00:02, 18.36it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  42%|████▏     | 28/67 [00:01<00:02, 18.58it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  45%|████▍     | 30/67 [00:01<00:02, 18.28it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  48%|████▊     | 32/67 [00:01<00:01, 18.16it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  51%|█████     | 34/67 [00:01<00:01, 18.17it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  54%|█████▎    | 36/67 [00:02<00:01, 17.61it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  57%|█████▋    | 38/67 [00:02<00:01, 17.33it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  60%|█████▉    | 40/67 [00:02<00:01, 17.45it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  63%|██████▎   | 42/67 [00:02<00:01, 17.57it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  66%|██████▌   | 44/67 [00:02<00:01, 17.57it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  69%|██████▊   | 46/67 [00:02<00:01, 17.49it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  72%|███████▏  | 48/67 [00:02<00:01, 17.15it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  75%|███████▍  | 50/67 [00:02<00:01, 16.98it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  78%|███████▊  | 52/67 [00:02<00:00, 16.70it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  81%|████████  | 54/67 [00:03<00:00, 16.58it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  84%|████████▎ | 56/67 [00:03<00:00, 16.35it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  87%|████████▋ | 58/67 [00:03<00:00, 16.44it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  90%|████████▉ | 60/67 [00:03<00:00, 16.39it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  93%|█████████▎| 62/67 [00:03<00:00, 16.44it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  96%|█████████▌| 64/67 [00:03<00:00, 16.45it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  99%|█████████▊| 66/67 [00:03<00:00, 16.99it/s][1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:39:38 [custom_all_reduce.py:196] Registering 6402 cuda graph addresses
Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:03<00:00, 17.41it/s]
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:39:38 [custom_all_reduce.py:196] Registering 6402 cuda graph addresses
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP1 pid=2618664)[0;0m INFO 08-21 03:39:38 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 0.90 GiB
[1;36m(EngineCore_0 pid=2618656)[0;0m [1;36m(VllmWorker TP0 pid=2618662)[0;0m INFO 08-21 03:39:38 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 0.90 GiB
[1;36m(EngineCore_0 pid=2618656)[0;0m INFO 08-21 03:39:38 [core.py:214] init engine (profile, create kv cache, warmup model) took 58.19 seconds
INFO 08-21 03:39:39 [llm.py:298] Supported_tasks: ['generate']
Translating 231 files...
  0%|          | 0/231 [00:00<?, ?it/s] 32%|███▏      | 75/231 [00:00<00:00, 448.07it/s]100%|██████████| 231/231 [00:00<00:00, 1293.81it/s]
Adding requests:   0%|          | 0/231 [00:00<?, ?it/s]Adding requests:   0%|          | 0/231 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/ubuntu/translation/scripts/translate.py", line 272, in <module>
    main(args)
  File "/home/ubuntu/translation/scripts/translate.py", line 199, in main
    vllm_outputs = vllm_model.generate(prompts, sampling)
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/utils/__init__.py", line 1557, in inner
    return fn(*args, **kwargs)
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/entrypoints/llm.py", line 488, in generate
    self._validate_and_add_requests(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/entrypoints/llm.py", line 1666, in _validate_and_add_requests
    self._add_request(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/entrypoints/llm.py", line 1684, in _add_request
    self.llm_engine.add_request(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/v1/engine/llm_engine.py", line 206, in add_request
    prompt_str, request = self.processor.process_inputs(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/v1/engine/processor.py", line 258, in process_inputs
    processed_inputs: ProcessorInputs = self.input_preprocessor.preprocess(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/inputs/preprocess.py", line 857, in preprocess
    return self._process_decoder_only_prompt(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/inputs/preprocess.py", line 806, in _process_decoder_only_prompt
    prompt_comps = self._prompt_to_llm_inputs(
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/inputs/preprocess.py", line 485, in _prompt_to_llm_inputs
    parsed = parse_singleton_prompt(prompt)
  File "/home/ubuntu/venv/lib/python3.10/site-packages/vllm/inputs/parse.py", line 132, in parse_singleton_prompt
    raise TypeError(
TypeError: inputs must be a string, TextPrompt, TokensPrompt, or EmbedsPrompt
+ python3 clean_generations_translation.py --model WizardLM/WizardCoder-Python-34B-V1.0 --dataset Avatar --source_lang Python --target_lang Java --remove_prompt --use_test
0it [00:00, ?it/s]0it [00:00, ?it/s]
+ python3 -u test_translation.py --dataset Avatar --source_lang Python --target_lang Java --model WizardLM/WizardCoder-Python-34B-V1.0 --test_type use_test
testing translations
../Experiment_Results/intermediate/SR/Translation/use_test/WizardCoder-Python-34B-V1.0/Avatar/Python/Java-sanitized/pass_id.txt
#Success: 0
Success: []
Fail: []
