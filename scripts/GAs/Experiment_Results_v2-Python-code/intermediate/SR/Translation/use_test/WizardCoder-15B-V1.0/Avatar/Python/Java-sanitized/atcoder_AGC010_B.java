import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;

public class atcoder_AGC010_B {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = scanner.nextInt();
        int[] numbers = new int[count];
        for (int i = 0; i < count; i++) {
            numbers[i] = scanner.nextInt();
        }
        int divisor = 2;
        int offset = 1;
        int condition_one = 827;
        int condition_two = 672;
        int precondition = 41;
        int condition_check_two = 545;
        if ((condition_one & condition_two) != 0) {
            if ((precondition & condition_check_two) != 0) {
                int sum = 0;
                for (int i = 0; i < count; i++) {
                    sum += numbers[i];
                }
                if (sum % (count * (count + 1) / 2) != 0) {
                    System.out.println("NO");
                    return;
                }
                ExecutorService executor = Executors.newFixedThreadPool(1);
                LinkedBlockingQueue<Double> queue = new LinkedBlockingQueue<>();
                executor.execute(() -> {
                    double result = calculateAverageDifference(count, sum, offset, numbers, divisor);
                    queue.offer(result);
                });
                executor.shutdown();
                try {
                    executor.awaitTermination(1, TimeUnit.SECONDS);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                double k = queue.poll();
                numbers = Arrays.copyOf(numbers, numbers.length + 1);
                numbers[numbers.length - 1] = numbers[0];
                if (Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(Arrays.stream(