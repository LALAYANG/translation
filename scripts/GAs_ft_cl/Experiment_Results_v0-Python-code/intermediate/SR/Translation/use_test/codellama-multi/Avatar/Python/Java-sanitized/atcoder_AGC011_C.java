import java.util.Scanner ; public class atcoder_AGC011_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] vis = new int [ n + 1 ] ; int ci = 0 ; int cb = 0 ; int cc = 0 ; int [ ] g = new int [ n + 1 ] ; for ( int i = 0 ; i < m ; i ++ ) { int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; g [ u ] += v ; g [ v ] += u ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( vis [ i ] == 0 ) { if ( g [ i ].length == 0 ) { ci ++ ; } else if ( dfs ( i ) ) { cb ++ ; } else { cc ++ ; } } } long ans = ci * ci + 2 * ci * ( n - ci ) + cc * cc + 2 * cb * cc + 2 * cb * cb ; System.out.println ( ans ) ; } static boolean dfs ( int x ) { Queue < Integer > stk = new LinkedList < > ( ) ; stk.add ( x ) ; stk.add ( 1 ) ; while ( ! stk.isEmpty ( ) ) { int u = stk.poll ( ) ; int col = stk.poll ( ) ; if ( vis [ u ] != 0 ) { if ( vis [ u ] != col ) { return false ; } continue ; } vis [ u ] = col ; for ( int i : g [ u ] ) { stk.add ( i ) ; stk.add ( 3 - col ) ; } } return true ; } }