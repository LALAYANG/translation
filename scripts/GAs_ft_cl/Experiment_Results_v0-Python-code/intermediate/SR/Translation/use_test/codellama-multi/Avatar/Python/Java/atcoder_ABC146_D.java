```java
import java.util.Scanner ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] g = new int [ n ] [ n ] ; int [ ] [ ] e = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; g [ a - 1 ] [ b - 1 ] = 1 ; g [ b - 1 ] [ a - 1 ] = 1 ; } int k = bfs ( 0 , n , g , e ) ; System.out.println ( k ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { System.out.print ( e [ i ] [ j ] + " " ) ; } System.out.println ( ) ; } } public static int bfs ( int s , int n , int [ ] [ ] g , int [ ] [ ] e ) { int [ ] color = new int [ n ] ; int [ ] [ ] node2color = new int [ n ] [ n ] ; Queue < Integer > q = new LinkedList < > ( ) ; q.add ( s ) ; color [ s ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { e [ i ] [ j ] = 0 ; } } int k = 0 ; while ( ! q.isEmpty ( ) ) { int v = q.poll ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( g [ v ] [ i ] == 1 && color [ i ] == 0 ) { color [ i ] = 1 ; c ++ ; if ( c == color [ v ] ) { c ++ ; } node2color [ v ] [ i ] = c ; e [ Math.min ( v , i ) ] [ Math.max ( v , i ) ] = c ; q.add ( i ) ; } } k = Math.max ( k , c ) ; } return k ; } }

```
