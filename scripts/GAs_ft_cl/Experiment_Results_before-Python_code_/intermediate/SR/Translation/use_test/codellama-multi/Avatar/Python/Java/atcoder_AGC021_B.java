 [INST:perfect]
```
import java.util.Scanner ; public class atcoder_ABC171_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] x = new int [ N ] ; int [ ] y = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { x [ i ] = sc.nextInt ( ) ; y [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < N ; i ++ ) { double ans = 0 ; for ( int j = 0 ; j < N ; j ++ ) { if ( i != j ) { double dx = x [ i ] - x [ j ] ; double dy = y [ i ] - y [ j ] ; double theta = Math.atan2 ( dy , dx ) ; double theta2 = theta + 2 * Math.PI ; double theta3 = theta2 - 2 * Math.PI ; double theta4 = theta3 + 2 * Math.PI ; double theta5 = theta4 - 2 * Math.PI ; double theta6 = theta5 + 2 * Math.PI ; double theta7 = theta6 - 2 * Math.PI ; double theta8 = theta7 + 2 * Math.PI ; double theta9 = theta8 - 2 * Math.PI ; double theta10 = theta9 + 2 * Math.PI ; double theta11 = theta10 - 2 * Math.PI ; double theta12 = theta11 + 2 * Math.PI ; double theta13 = theta12 - 2 * Math.PI ; double theta14 = theta13 + 2 * Math.PI ; double theta15 = theta14 - 2 * Math.PI ; double theta16 = theta15 + 2 * Math.PI ; double theta17 = theta16 - 2 * Math.PI ; double theta18 = theta17 + 2 * Math.PI ; double theta19 = theta18 - 2 * Math.PI ; double theta20 = theta19 + 2 * Math.PI ; double theta21 = theta20 - 2 * Math.PI ; double theta22 = theta21 + 2 * Math.PI ; double theta23 = theta22 - 2 * Math.PI ; double theta24 = theta23 + 2 * Math.PI ; double theta25 = theta24 - 2 * Math.PI ; double theta26 = theta25 + 2 * Math.PI ; double theta27 = theta26 - 2 * Math.PI ; double theta28 = theta27 + 2 * Math.PI ; double theta29 = theta28 - 2 * Math.PI ; double theta30 = theta29 + 2 * Math.PI ; double theta31 = theta30 - 2 * Math.PI ; double theta32 = theta31 + 2 * Math.PI ; double theta33 = theta32 - 2 * Math.PI ; double theta34 = theta33 + 2 * Math.PI ; double theta35 = theta34 - 2 * Math.PI ; double theta36 = theta35 + 2 * Math.PI ; double theta37 = theta36 - 2 * Math.PI ; double theta38 = theta37 + 2 * Math.PI ; double theta39 = theta38 - 2 * Math.PI ; double theta40 = theta39 + 2 * Math.PI ; double theta41 = theta40 - 2 * Math.PI ; double theta42 = theta41 + 2 * Math.PI ; double theta43 = theta42 - 2 * Math.PI ; double theta44 = theta43 + 2 * Math.PI ; double theta45 = theta44 - 2 * Math.PI ; double theta46 = theta45 + 2 * Math.PI ; double theta47 = theta46 - 2 * Math.PI ; double theta48 = theta47 + 2 * Math.PI ; double theta49 = theta48 - 2 * Math.PI ; double theta50 = theta49 + 2 * Math.PI ; double theta51 = theta50 - 2 * Math.PI ; double theta52 = theta51 + 2 * Math.PI ; double theta53 = theta52 - 2 * Math.PI ; double theta54 = theta53 + 2 * Math.PI ; double theta55 = theta54 - 2 * Math.PI ; double theta56 = theta55 + 2 * Math.PI ; double theta57 = theta56 - 2 * Math.PI ; double theta58 = theta57 + 2 * Math.PI ; double theta59 = theta58 - 2 * Math.PI ; double theta60 = theta59 + 2 * Math.PI ; double theta61 = theta60 - 2 * Math.PI ; double theta62 = theta61 + 2 * Math.PI ; double theta63 = theta62 - 2 * Math.PI ; double theta64 = theta63 + 2 * Math.PI ; double theta65 = theta64 - 2 * Math.PI ; double theta66 = theta65 + 2 * Math.PI ; double theta67 = theta66 - 2 * Math.PI ; double theta68 = theta67 + 2 * Math.PI ; double theta69 = theta68 - 2 * Math.PI ; double theta70 = theta69 + 2 * Math.PI ; double theta71 = theta70 - 2 * Math.PI ; double theta72 = theta71 + 2 * Math.PI ; double theta73 = theta72 - 2 * Math.PI ; double theta74 = theta73 + 2 * Math.PI ; double theta75 = theta74 - 2 * Math.PI ; double theta76 = theta75 + 2 * Math.PI ; double theta77 = theta76 - 2 * Math.PI ; double theta78 = theta77 + 2 * Math.PI ; double theta79 = theta78 - 2 * Math.PI ; double theta80 = theta79 + 2 * Math.PI ; double theta81 = theta80 - 2 * Math.PI ; double theta82 = theta81 + 2 * Math.PI ; double theta83 = theta82 - 2 * Math.PI ; double theta84 = theta83 + 2 * Math.PI ; double theta85 = theta84 - 2 * Math.PI ; double theta86 = theta85 + 2 * Math.PI ; double theta87 = theta86 - 2 * Math.PI ; double theta88 = theta87 + 2 * Math.PI ; double theta89 = theta88 - 2 * Math.PI ; double theta90 = theta89 + 2 * Math.PI ; double theta91 = theta90 - 2 * Math.PI ; double theta92 = theta91 + 2 * Math.PI ; double theta93 = theta92 - 2 * Math.PI ; double theta94 = theta93 + 2 * Math.PI ; double theta95 = theta94 - 2 * Math.PI ; double theta96 = theta95 + 2 * Math.PI ; double theta97 = theta96 - 2 * Math.PI ; double theta98 = theta97 + 2 * Math.PI ; double theta99 = theta98 - 2 * Math.PI ; double theta100 = theta99 + 2 * Math.PI ; double theta101 = theta100 - 2 * Math.PI ; double theta102 = theta101 + 2 * Math.PI ; double theta103 = theta102 - 2 * Math.PI ; double theta104 = theta103 + 2 * Math.PI ; double theta105 = theta104 - 2 * Math.PI ; double theta106 = theta105 + 2 * Math.PI ; double theta107 = theta106 - 2 * Math.PI ; double theta108 = theta107 + 2 * Math.PI ; double theta109 = theta108 - 2 * Math.PI ; double theta110 = theta109 + 2 * Math.PI ; double theta111 = theta110 - 2 * Math.PI ; double theta112 = theta111 + 2 * Math.PI ; double theta113 = theta112 - 2 * Math.PI ; double theta114 = theta113 + 2 * Math.PI ; double theta115 = theta114 - 2 * Math.PI ; double theta116 = theta115 + 2 * Math.PI ; double theta117 = theta116 - 2 * Math.PI ; double theta118 = theta117 + 2 * Math.PI ; double theta119 = theta118 - 2 * Math.PI ; double theta120 = theta119 + 2 * Math.PI ; double theta121 = theta120 - 2 * Math.PI ; double theta122 = theta121 + 2 * Math.PI ; double theta123 = theta122 - 2 * Math.PI ; double theta124 = theta123 + 2 * Math.PI ; double theta125 = theta124 - 2 * Math.PI ; double theta126 = theta125 + 2 * Math.PI ; double theta127 = theta126 - 2 * Math.PI ; double theta128 = theta127 + 2 * Math.PI ; double theta129 = theta128 - 2 * Math.PI ; double theta130 = theta129 + 2 * Math.PI ; double theta131 = theta130 - 2 * Math.PI ; double theta132 = theta131 + 2 * Math.PI ; double theta133 = theta132 - 2 * Math.PI ; double theta134 = theta133 + 2 * Math.PI ; double theta135 = theta134 - 2 * Math.PI ; double theta136 = theta135 + 2 * Math.PI ; double theta137 = theta136 - 2 * Math.PI ; double theta138 = theta137 + 2 * Math.PI ; double theta139 = theta138 - 2 * Math.PI ; double theta140 = theta139 + 2 * Math.PI ; double theta141 = theta140 - 2 * Math.PI ; double theta142 = theta141 + 2 * Math.PI ; double theta143 = theta142 - 2 * Math.PI ; double theta144 = theta143 + 2 * Math.PI
