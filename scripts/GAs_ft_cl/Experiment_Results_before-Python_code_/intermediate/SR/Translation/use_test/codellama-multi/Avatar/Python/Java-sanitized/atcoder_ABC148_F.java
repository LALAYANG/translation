import java.util.Scanner ; public class atcoder_ABC148_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ta = sc.nextInt ( ) ; int ao = sc.nextInt ( ) ; ta -- ; ao -- ; int [ ] [ ] g = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; g [ a - 1 ] [ b - 1 ] = 1 ; g [ b - 1 ] [ a - 1 ] = 1 ; } int [ ] ta_dist = new int [ n ] ; ta_dist [ ta ] = 0 ; int [ ] ao_dist = new int [ n ] ; ao_dist [ ao ] = 0 ; dfs ( g , ta_dist , ao_dist , ta ) ; dfs ( g , ao_dist , ta_dist , ao ) ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( ta_dist [ i ] > ao_dist [ i ] ) continue ; res = Math.max ( res , ao_dist [ i ] ) ; } System.out.println ( res - 1 ) ; } static void dfs ( int [ ] [ ] g , int [ ] dist , int [ ] other_dist , int node ) { for ( int i = 0 ; i < g [ node ].length ; i ++ ) { if ( dist [ g [ node ] [ i ] ] != 0 ) continue ; dist [ g [ node ] [ i ] ] = dist [ node ] + 1 ; dfs ( g , dist , other_dist , g [ node ] [ i ] ) ; } } }