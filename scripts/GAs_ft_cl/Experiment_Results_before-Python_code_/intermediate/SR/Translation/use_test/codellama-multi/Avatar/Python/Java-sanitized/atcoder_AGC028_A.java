import java.util.Scanner ; public class atcoder_AGC028_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int [ ] list_S = new int [ S.length ( ) ] ; int [ ] list_T = new int [ T.length ( ) ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { list_S [ i ] = S.charAt ( i ) - 'a' + 1 ; } for ( int i = 0 ; i < T.length ( ) ; i ++ ) { list_T [ i ] = T.charAt ( i ) - 'a' + 1 ; } int [ ] Number_i = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Number_i [ i ] = i ; } int [ ] Number_iMN = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Number_iMN [ i ] = ( i * M ) / N ; } int [ ] Number_j = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Number_j [ i ] = i ; } int [ ] Kaburi_j = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Kaburi_j [ i ] = Number_iMN [ i ] ; } int [ ] Kaburi_i = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Kaburi_i [ i ] = ( Kaburi_j [ i ] * N ) / M ; } int counter = 0 ; int Flag = 0 ; int Kaburi_Size = M ; while ( counter < Kaburi_Size ) { if ( list_S [ Kaburi_i [ counter ] ] == list_T [ Kaburi_j [ counter ] ] ) { counter ++ ; } else { Flag = 1 ; break ; } } if ( Flag == 1 ) { System.out.println ( - 1 ) ; } else { System.out.println ( ( N * M ) / gcd ( N , M ) ) ; } } public static int gcd ( int a , int b ) { while ( b > 0 ) { int temp = b ; b = a % b ; a = temp ; } return a ; } }