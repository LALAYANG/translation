 ```java
import java.util.Scanner ; public class atcoder_ABC163_E { public static void main ( String [ ] args ) { Scanner scanner = new Scanner ( System.in ) ; int n = scanner.nextInt ( ) ; int m = n * ( n + 1 ) / 4 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = scanner.nextInt ( ) ; } int [ ] d = new int [ n + 1 ] ; int k = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( d [ a [ i ] ] == 0 ) { d [ a [ i ] ] = ++ k ; } } for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = d [ a [ i ] ] ; } int ans = 0 ; int [ ] c = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { c [ i ] = c [ i - 1 ] + ( a [ i - 1 ] >= i ? 2 : - 2 ) ; } for ( int i = 1 ; i <= n ; i ++ ) { c [ i ] += c [ i - 1 ] ; } int max = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( c [ i ] > max ) { max = c [ i ] ; } } BIT bit = new BIT ( max + 1 ) ; for ( int i = 1 ; i <= n ; i ++ ) { ans += bit.sum ( c [ i ] ) ; bit.add ( c [ i ] , 1 ) ; } System.out.println ( ans >= m ? "Yes" : "No" ) ; } static class BIT { int [ ] tree ; int size ; BIT ( int size ) { this.size = size ; tree = new int [ size + 1 ] ; } void add ( int pos , int val ) { pos += 1 ; while ( pos <= size ) { tree [ pos ] += val ; pos += pos & - pos ; } } int sum ( int pos ) { int ans = 0 ; while ( pos > 0 ) { ans += tree [ pos ] ; pos -= pos & - pos ; } return ans ; } } }

```
