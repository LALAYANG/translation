import java.util.* ; import java.io.* ; import java.math.* ; public class atcoder_ABC169_D { public static void main ( String [ ] args ) { Scanner in = new Scanner ( System.in ) ; BigInteger n = in.nextBigInteger ( ) ; if ( n.equals ( BigInteger.ONE ) ) { System.out.println ( 0 ) ; return ; } HashMap < BigInteger , Integer > map = new HashMap < > ( ) ; BigInteger x = n ; for ( long i = 2 ; i * i <= x.longValue ( ) ; i ++ ) { while ( x.mod ( BigInteger.valueOf ( i ) ).equals ( BigInteger.ZERO ) ) { if ( ! map.containsKey ( BigInteger.valueOf ( i ) ) ) map.put ( BigInteger.valueOf ( i ) , 1 ) ; else map.put ( BigInteger.valueOf ( i ) , map.get ( BigInteger.valueOf ( i ) ) + 1 ) ; x = x.divide ( BigInteger.valueOf ( i ) ) ; } } if ( ! x.equals ( BigInteger.ONE ) ) { if ( ! map.containsKey ( x ) ) map.put ( x , 1 ) ; else map.put ( x , map.get ( x ) + 1 ) ; } int ans = 0 ; for ( BigInteger key : map.keySet ( ) ) { int value = map.get ( key ) ; int tmp = 0 ; while ( value >= tmp + 1 ) { value -= ++ tmp ; ans ++ ; } } System.out.println ( ans ) ; } }