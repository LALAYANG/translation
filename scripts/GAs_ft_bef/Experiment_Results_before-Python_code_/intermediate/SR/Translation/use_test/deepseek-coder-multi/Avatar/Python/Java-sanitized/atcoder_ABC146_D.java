import java.util.* ; import java.io.* ; public class atcoder_ABC146_D { void solve ( ) { int N = sc.nextInt ( ) ; int M = N - 1 ; List < Integer > G [ ] = new ArrayList [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { G [ i ] = new ArrayList < > ( ) ; } for ( int i = 0 ; i < M ; i ++ ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; G [ a ].add ( b ) ; G [ b ].add ( a ) ; } int K = 0 ; int color [ ] = new int [ N ] ; Queue < Integer > que = new LinkedList < > ( ) ; que.add ( 0 ) ; color [ 0 ] = 1 ; while ( ! que.isEmpty ( ) ) { int v = que.poll ( ) ; for ( int nv : G [ v ] ) { if ( color [ nv ] == 0 ) { color [ nv ] = ( color [ v ] == 1 ) ? 2 : 1 ; que.add ( nv ) ; } } } for ( int i = 0 ; i < N ; i ++ ) { K = Math.max ( K , color [ i ] ) ; } System.out.println ( K ) ; for ( int i = 0 ; i < M ; i ++ ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; if ( a > b ) { int tmp = a ; a = b ; b = tmp ; } System.out.println ( color [ a ] ) ; } } public static void main ( String args [ ] ) { new atcoder_AGC035_B ( ).solve ( ) ; } Scanner sc = new Scanner ( System.in ) ; }