import java.util.* ; import java.io.* ; public class atcoder_ABC148_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ta = sc.nextInt ( ) ; int ao = sc.nextInt ( ) ; ArrayList < ArrayList < Integer >> graph = new ArrayList < > ( ) ; for ( int i = 0 ; i <= n ; i ++ ) { graph.add ( new ArrayList < > ( ) ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; graph.get ( u ).add ( v ) ; graph.get ( v ).add ( u ) ; } int [ ] ta_dist = new int [ n + 1 ] ; int [ ] ao_dist = new int [ n + 1 ] ; Queue < Integer > q = new LinkedList < > ( ) ; q.add ( ta ) ; ta_dist [ ta ] = 0 ; while ( ! q.isEmpty ( ) ) { int u = q.poll ( ) ; for ( int v : graph.get ( u ) ) { if ( ta_dist [ v ] == 0 ) { ta_dist [ v ] = ta_dist [ u ] + 1 ; q.add ( v ) ; } } } q.add ( ao ) ; ao_dist [ ao ] = 0 ; while ( ! q.isEmpty ( ) ) { int u = q.poll ( ) ; for ( int v : graph.get ( u ) ) { if ( ao_dist [ v ] == 0 ) { ao_dist [ v ] = ao_dist [ u ] + 1 ; q.add ( v ) ; } } } int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( ta_dist [ i ] > ao_dist [ i ] ) continue ; res = Math.max ( res , ao_dist [ i ] ) ; } System.out.println ( res - 1 ) ; } }