import java.util.* ; import java.io.* ; public class atcoder_AGC005_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } long [ ] par = new long [ n ] ; long [ ] rank = new long [ n ] ; long [ ] size = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { par [ i ] = i ; rank [ i ] = 0 ; size [ i ] = 1 ; } long [ ] b = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ a [ i ] - 1 ] = i ; } long ans = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) { long k = b [ i ] ; long l = 1 ; long r = 1 ; if ( k > 0 && a [ k - 1 ] > a [ k ] ) { l += size [ find ( par , k - 1 ) ] ; unite ( par , rank , size , k - 1 , k ) ; } if ( k + 1 < n && a [ k + 1 ] > a [ k ] ) { r += size [ find ( par , k + 1 ) ] ; unite ( par , rank , size , k + 1 , k ) ; } ans += l * r * a [ k ] ; } System.out.println ( ans ) ; } static long find ( long [ ] par , long x ) { if ( par [ ( int ) x ] == x ) { return x ; } else { return par [ ( int ) x ] = find ( par , par [ ( int ) x ] ) ; } } static void unite ( long [ ] par , long [ ] rank , long [ ] size , long x , long y ) { x = find ( par , x ) ; y = find ( par , y ) ; if ( x == y ) { return ; } if ( rank [ x ] < rank [ y ] ) { par [ ( int ) x ] = y ; size [ ( int ) y ] += size [ ( int ) x ] ; } else { par [ ( int ) y ] = x ; size [ ( int ) x ] += size [ ( int ) y ] ; if ( rank [ x ] == rank [ y ] ) { rank [ x ] ++ ; } } } }