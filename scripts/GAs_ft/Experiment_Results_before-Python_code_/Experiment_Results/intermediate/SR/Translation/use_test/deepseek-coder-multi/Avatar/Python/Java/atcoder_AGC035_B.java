```java
import java.util.* ; import java.io.* ; public class atcoder_AGC022_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; ArrayList < ArrayList < Integer >> graph = new ArrayList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { graph.add ( new ArrayList < > ( ) ) ; } for ( int i = 0 ; i < M ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; graph.get ( a - 1 ).add ( b - 1 ) ; graph.get ( b - 1 ).add ( a - 1 ) ; } if ( M % 2 == 1 ) { System.out.println ( - 1 ) ; return ; } Queue < Integer > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < N ; i ++ ) { q.add ( i ) ; } int [ ] deg = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { deg [ i ] = graph.get ( i ).size ( ) ; } int [ ] color = new int [ N ] ; while ( ! q.isEmpty ( ) ) { int u = q.poll ( ) ; if ( color [ u ] != 0 ) continue ; for ( int v : graph.get ( u ) ) { graph.get ( v ).remove ( Integer.valueOf ( u ) ) ; if ( color [ u ] == 0 ) { color [ u ] = 1 ; color [ v ] = 2 ; } else { color [ v ] = 1 ; color [ u ] = 2 ; } deg [ v ] -- ; if ( deg [ v ] == 1 ) q.add ( v ) ; } } for ( int i = 0 ; i < N ; i ++ ) { for ( int v : graph.get ( i ) ) { System.out.println ( ( i + 1 ) + " " + ( v + 1 ) ) ; } } } }

```
