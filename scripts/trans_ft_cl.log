+ logdir=GAs_ft_cl
+ mkdir -p GAs_ft_cl
+ models=("yangccccc/codellama-multi")
+ versions=("before-Python/code/" "v0-Python-code")
++ date +%Y%m%d_%H%M%S
+ timestamp=20250901_193456
+ for version in "${versions[@]}"
+ echo 'Running version: before-Python/code/'
Running version: before-Python/code/
+ dest=/home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ rm -rf /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ cp -r /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/before-Python/code/ /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ ls /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ wc -l
250
+ for model in "${models[@]}"
+ echo 'Running model: yangccccc/codellama-multi'
Running model: yangccccc/codellama-multi
+ bash -x run_SR.sh yangccccc/codellama-multi
+ tee GAs_ft_cl/before-Python_code__yangccccc_codellama-multi_20250901_193456.log
+ model=yangccccc/codellama-multi
+ dataset=Avatar
+ cache=tmp
+ src=Python
+ tgt=Java
+ python3 translate.py --model yangccccc/codellama-multi --dataset Avatar --source_lang Python --target_lang Java --cache_dir tmp --use_test
INFO 09-01 19:35:02 [__init__.py:241] Automatically detected platform cuda.
found 250 inputs
INFO 09-01 19:35:05 [utils.py:326] non-default args: {'model': 'yangccccc/codellama-multi', 'trust_remote_code': True, 'dtype': 'bfloat16', 'max_model_len': 4096, 'tensor_parallel_size': 2, 'disable_log_stats': True}
The argument `trust_remote_code` is to be used with Auto classes. It has no effect here and is ignored.
INFO 09-01 19:35:13 [__init__.py:711] Resolved architecture: LlamaForCausalLM
`torch_dtype` is deprecated! Use `dtype` instead!
INFO 09-01 19:35:13 [__init__.py:1750] Using max model len 4096
INFO 09-01 19:35:14 [scheduler.py:222] Chunked prefill is enabled with max_num_batched_tokens=8192.
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:15 [core.py:636] Waiting for init message from front-end.
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:15 [core.py:74] Initializing a V1 LLM engine (v0.10.1.1) with config: model='yangccccc/codellama-multi', speculative_config=None, tokenizer='yangccccc/codellama-multi', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=yangccccc/codellama-multi, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"cudagraph_mode":1,"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"pass_config":{},"max_capture_size":512,"local_cache_dir":null}
[1;36m(EngineCore_0 pid=1747020)[0;0m WARNING 09-01 19:35:15 [multiproc_worker_utils.py:273] Reducing Torch parallelism from 240 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:15 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_fa5af853'), local_subscribe_addr='ipc:///tmp/d735cc97-725e-4888-81a8-da5351facc28', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:18 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_7ef3121c'), local_subscribe_addr='ipc:///tmp/314ec01c-6e0e-4f25-bee6-8a7d9de7d3e7', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:18 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_d66e666b'), local_subscribe_addr='ipc:///tmp/32ad774c-d26b-45cb-ace1-50c5e78c7fd4', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:19 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:19 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:19 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_b262bf86'), local_subscribe_addr='ipc:///tmp/b87413c7-0e18-4956-b116-89a04eaee214', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [parallel_state.py:1134] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:19 [parallel_state.py:1134] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m WARNING 09-01 19:35:19 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m WARNING 09-01 19:35:19 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:19 [gpu_model_runner.py:1953] Starting to load model yangccccc/codellama-multi...
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:19 [gpu_model_runner.py:1953] Starting to load model yangccccc/codellama-multi...
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:20 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:20 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:20 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:20 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:20 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:20 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/6 [00:00<?, ?it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:  17% Completed | 1/6 [00:00<00:01,  4.28it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:  33% Completed | 2/6 [00:01<00:02,  1.64it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:  50% Completed | 3/6 [00:02<00:02,  1.33it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:  67% Completed | 4/6 [00:02<00:01,  1.21it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards:  83% Completed | 5/6 [00:03<00:00,  1.16it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:26 [default_loader.py:262] Loading weights took 4.98 seconds
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards: 100% Completed | 6/6 [00:04<00:00,  1.12it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Loading safetensors checkpoint shards: 100% Completed | 6/6 [00:04<00:00,  1.24it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m 
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:26 [default_loader.py:262] Loading weights took 5.01 seconds
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:26 [gpu_model_runner.py:2007] Model loading took 12.2637 GiB and 5.929506 seconds
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:27 [gpu_model_runner.py:2007] Model loading took 12.2637 GiB and 6.227706 seconds
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:38 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/cdaeac2c31/rank_0_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:38 [backends.py:559] Dynamo bytecode transform time: 10.71 s
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:38 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/cdaeac2c31/rank_1_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:38 [backends.py:559] Dynamo bytecode transform time: 10.68 s
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:47 [backends.py:161] Directly load the compiled graph(s) for dynamic shape from the cache, took 8.304 s
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:47 [backends.py:161] Directly load the compiled graph(s) for dynamic shape from the cache, took 8.347 s
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:53 [monitor.py:34] torch.compile takes 10.71 s in total
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:53 [monitor.py:34] torch.compile takes 10.68 s in total
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:55 [gpu_worker.py:276] Available KV cache memory: 57.16 GiB
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:55 [gpu_worker.py:276] Available KV cache memory: 57.16 GiB
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:55 [kv_cache_utils.py:849] GPU KV cache size: 149,840 tokens
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:55 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 36.58x
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:55 [kv_cache_utils.py:849] GPU KV cache size: 149,840 tokens
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:55 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 36.58x
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   3%|▎         | 2/67 [00:00<00:04, 13.85it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   6%|▌         | 4/67 [00:00<00:04, 14.62it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   9%|▉         | 6/67 [00:00<00:03, 15.29it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  12%|█▏        | 8/67 [00:00<00:03, 15.41it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  15%|█▍        | 10/67 [00:00<00:03, 15.58it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  18%|█▊        | 12/67 [00:00<00:03, 15.66it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  21%|██        | 14/67 [00:00<00:03, 15.71it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  24%|██▍       | 16/67 [00:01<00:03, 15.71it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  27%|██▋       | 18/67 [00:01<00:03, 16.28it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  30%|██▉       | 20/67 [00:01<00:02, 16.67it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  33%|███▎      | 22/67 [00:01<00:02, 16.91it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  36%|███▌      | 24/67 [00:01<00:02, 17.11it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  39%|███▉      | 26/67 [00:01<00:02, 17.32it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  42%|████▏     | 28/67 [00:01<00:02, 17.44it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  45%|████▍     | 30/67 [00:01<00:02, 17.52it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  48%|████▊     | 32/67 [00:01<00:01, 17.61it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  51%|█████     | 34/67 [00:02<00:01, 18.26it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  54%|█████▎    | 36/67 [00:02<00:01, 18.70it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  57%|█████▋    | 38/67 [00:02<00:01, 19.06it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  60%|█████▉    | 40/67 [00:02<00:01, 19.21it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  64%|██████▍   | 43/67 [00:02<00:01, 19.70it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  69%|██████▊   | 46/67 [00:02<00:01, 19.94it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  73%|███████▎  | 49/67 [00:02<00:00, 20.19it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  78%|███████▊  | 52/67 [00:02<00:00, 20.44it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  82%|████████▏ | 55/67 [00:03<00:00, 20.49it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  87%|████████▋ | 58/67 [00:03<00:00, 20.77it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  91%|█████████ | 61/67 [00:03<00:00, 20.48it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  96%|█████████▌| 64/67 [00:03<00:00, 20.79it/s][1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:59 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:03<00:00, 20.90it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:03<00:00, 18.40it/s]
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:59 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP1 pid=1747028)[0;0m INFO 09-01 19:35:59 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 2.26 GiB
[1;36m(EngineCore_0 pid=1747020)[0;0m [1;36m(VllmWorker TP0 pid=1747026)[0;0m INFO 09-01 19:35:59 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 2.26 GiB
[1;36m(EngineCore_0 pid=1747020)[0;0m INFO 09-01 19:35:59 [core.py:214] init engine (profile, create kv cache, warmup model) took 32.59 seconds
INFO 09-01 19:36:01 [llm.py:298] Supported_tasks: ['generate']
Translating 250 files...
  0%|          | 0/250 [00:00<?, ?it/s]100%|██████████| 250/250 [00:00<00:00, 5962.73it/s]
Adding requests:   0%|          | 0/250 [00:00<?, ?it/s]Adding requests:  26%|██▌       | 65/250 [00:00<00:00, 647.75it/s]Adding requests:  62%|██████▏   | 156/250 [00:00<00:00, 797.91it/s]Adding requests:  98%|█████████▊| 246/250 [00:00<00:00, 843.48it/s]Adding requests: 100%|██████████| 250/250 [00:00<00:00, 816.54it/s]
Processed prompts:   0%|          | 0/250 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/250 [00:13<55:02, 13.26s/it, est. speed input: 9.73 toks/s, output: 6.56 toks/s]Processed prompts:   1%|          | 2/250 [00:13<23:44,  5.74s/it, est. speed input: 19.65 toks/s, output: 12.30 toks/s]Processed prompts:   1%|          | 3/250 [00:13<13:18,  3.23s/it, est. speed input: 95.96 toks/s, output: 18.73 toks/s]Processed prompts:   2%|▏         | 4/250 [00:14<08:24,  2.05s/it, est. speed input: 105.40 toks/s, output: 25.24 toks/s]Processed prompts:   2%|▏         | 5/250 [00:14<06:14,  1.53s/it, est. speed input: 133.60 toks/s, output: 31.36 toks/s]Processed prompts:   3%|▎         | 7/250 [00:15<03:36,  1.12it/s, est. speed input: 178.13 toks/s, output: 43.91 toks/s]Processed prompts:   3%|▎         | 8/250 [00:15<02:53,  1.39it/s, est. speed input: 223.69 toks/s, output: 50.54 toks/s]Processed prompts:   4%|▍         | 11/250 [00:16<01:39,  2.40it/s, est. speed input: 294.74 toks/s, output: 71.21 toks/s]Processed prompts:   6%|▌         | 14/250 [00:16<01:04,  3.64it/s, est. speed input: 448.16 toks/s, output: 91.97 toks/s]Processed prompts:   6%|▌         | 15/250 [00:16<00:57,  4.06it/s, est. speed input: 453.82 toks/s, output: 99.09 toks/s]Processed prompts:   7%|▋         | 17/250 [00:16<00:49,  4.67it/s, est. speed input: 497.85 toks/s, output: 112.68 toks/s]Processed prompts:   8%|▊         | 19/250 [00:16<00:41,  5.53it/s, est. speed input: 548.10 toks/s, output: 126.91 toks/s]Processed prompts:   9%|▉         | 22/250 [00:17<00:33,  6.91it/s, est. speed input: 647.14 toks/s, output: 147.04 toks/s]Processed prompts:   9%|▉         | 23/250 [00:17<00:31,  7.10it/s, est. speed input: 660.31 toks/s, output: 154.16 toks/s]Processed prompts:  10%|▉         | 24/250 [00:17<00:31,  7.07it/s, est. speed input: 709.88 toks/s, output: 161.40 toks/s]Processed prompts:  12%|█▏        | 29/250 [00:17<00:20, 10.90it/s, est. speed input: 851.07 toks/s, output: 198.98 toks/s]Processed prompts:  12%|█▏        | 31/250 [00:17<00:19, 11.35it/s, est. speed input: 906.75 toks/s, output: 213.17 toks/s]Processed prompts:  13%|█▎        | 33/250 [00:18<00:18, 11.45it/s, est. speed input: 959.77 toks/s, output: 223.99 toks/s]Processed prompts:  14%|█▍        | 35/250 [00:18<00:21, 10.20it/s, est. speed input: 989.23 toks/s, output: 237.18 toks/s]Processed prompts:  15%|█▍        | 37/250 [00:18<00:29,  7.26it/s, est. speed input: 1020.15 toks/s, output: 247.22 toks/s]Processed prompts:  15%|█▌        | 38/250 [00:18<00:29,  7.23it/s, est. speed input: 1094.72 toks/s, output: 253.82 toks/s]Processed prompts:  16%|█▌        | 39/250 [00:19<00:32,  6.54it/s, est. speed input: 1108.21 toks/s, output: 259.43 toks/s]Processed prompts:  16%|█▋        | 41/250 [00:19<00:26,  8.00it/s, est. speed input: 1169.83 toks/s, output: 274.04 toks/s]Processed prompts:  17%|█▋        | 43/250 [00:19<00:23,  8.78it/s, est. speed input: 1203.98 toks/s, output: 288.42 toks/s]Processed prompts:  18%|█▊        | 46/250 [00:19<00:18, 11.32it/s, est. speed input: 1289.14 toks/s, output: 311.46 toks/s]Processed prompts:  20%|█▉        | 49/250 [00:20<00:20,  9.75it/s, est. speed input: 1337.46 toks/s, output: 330.75 toks/s]Processed prompts:  20%|██        | 51/250 [00:20<00:26,  7.65it/s, est. speed input: 1391.50 toks/s, output: 339.30 toks/s]Processed prompts:  21%|██        | 53/250 [00:20<00:25,  7.78it/s, est. speed input: 1476.96 toks/s, output: 352.04 toks/s]Processed prompts:  22%|██▏       | 54/250 [00:20<00:29,  6.64it/s, est. speed input: 1505.54 toks/s, output: 356.01 toks/s]Processed prompts:  22%|██▏       | 55/250 [00:21<00:28,  6.89it/s, est. speed input: 1539.86 toks/s, output: 362.72 toks/s]Processed prompts:  22%|██▏       | 56/250 [00:21<00:30,  6.33it/s, est. speed input: 1547.98 toks/s, output: 367.85 toks/s]Processed prompts:  23%|██▎       | 58/250 [00:21<00:27,  6.96it/s, est. speed input: 1592.49 toks/s, output: 381.25 toks/s]Processed prompts:  25%|██▍       | 62/250 [00:21<00:20,  9.19it/s, est. speed input: 1688.95 toks/s, output: 410.91 toks/s]Processed prompts:  26%|██▌       | 65/250 [00:22<00:17, 10.87it/s, est. speed input: 1749.87 toks/s, output: 433.32 toks/s]Processed prompts:  27%|██▋       | 68/250 [00:22<00:22,  8.23it/s, est. speed input: 1876.31 toks/s, output: 449.39 toks/s]Processed prompts:  28%|██▊       | 69/250 [00:22<00:26,  6.71it/s, est. speed input: 1911.82 toks/s, output: 451.81 toks/s]Processed prompts:  28%|██▊       | 70/250 [00:23<00:27,  6.46it/s, est. speed input: 1939.59 toks/s, output: 456.96 toks/s]Processed prompts:  29%|██▉       | 72/250 [00:23<00:23,  7.69it/s, est. speed input: 1975.09 toks/s, output: 471.03 toks/s]Processed prompts:  29%|██▉       | 73/250 [00:23<00:22,  7.95it/s, est. speed input: 1977.21 toks/s, output: 477.87 toks/s]Processed prompts:  30%|███       | 75/250 [00:23<00:20,  8.74it/s, est. speed input: 2008.27 toks/s, output: 492.06 toks/s]Processed prompts:  31%|███       | 78/250 [00:23<00:15, 11.37it/s, est. speed input: 2032.85 toks/s, output: 514.75 toks/s]Processed prompts:  32%|███▏      | 81/250 [00:23<00:15, 11.22it/s, est. speed input: 2089.66 toks/s, output: 534.51 toks/s]Processed prompts:  34%|███▎      | 84/250 [00:24<00:14, 11.47it/s, est. speed input: 2146.69 toks/s, output: 555.48 toks/s]Processed prompts:  34%|███▍      | 86/250 [00:24<00:18,  8.84it/s, est. speed input: 2177.92 toks/s, output: 564.31 toks/s]Processed prompts:  35%|███▌      | 88/250 [00:24<00:17,  9.24it/s, est. speed input: 2224.62 toks/s, output: 577.80 toks/s]Processed prompts:  36%|███▌      | 90/250 [00:24<00:17,  9.29it/s, est. speed input: 2277.99 toks/s, output: 590.50 toks/s]Processed prompts:  37%|███▋      | 92/250 [00:25<00:14, 10.57it/s, est. speed input: 2322.71 toks/s, output: 605.17 toks/s]Processed prompts:  38%|███▊      | 95/250 [00:25<00:15,  9.92it/s, est. speed input: 2412.26 toks/s, output: 620.16 toks/s]Processed prompts:  39%|███▉      | 97/250 [00:25<00:15, 10.16it/s, est. speed input: 2455.90 toks/s, output: 632.68 toks/s]Processed prompts:  40%|███▉      | 99/250 [00:25<00:13, 11.41it/s, est. speed input: 2494.00 toks/s, output: 647.57 toks/s]Processed prompts:  40%|████      | 101/250 [00:26<00:17,  8.31it/s, est. speed input: 2524.67 toks/s, output: 654.86 toks/s]Processed prompts:  41%|████      | 103/250 [00:26<00:17,  8.38it/s, est. speed input: 2547.51 toks/s, output: 666.86 toks/s]Processed prompts:  42%|████▏     | 104/250 [00:26<00:20,  7.20it/s, est. speed input: 2561.24 toks/s, output: 670.16 toks/s]Processed prompts:  43%|████▎     | 107/250 [00:26<00:16,  8.88it/s, est. speed input: 2611.94 toks/s, output: 691.38 toks/s]Processed prompts:  44%|████▎     | 109/250 [00:27<00:14,  9.53it/s, est. speed input: 2638.28 toks/s, output: 702.75 toks/s]Processed prompts:  45%|████▍     | 112/250 [00:27<00:10, 12.59it/s, est. speed input: 2712.55 toks/s, output: 726.97 toks/s]Processed prompts:  46%|████▌     | 114/250 [00:27<00:12, 10.48it/s, est. speed input: 2746.85 toks/s, output: 737.75 toks/s]Processed prompts:  47%|████▋     | 118/250 [00:27<00:09, 13.84it/s, est. speed input: 2798.50 toks/s, output: 761.64 toks/s]Processed prompts:  48%|████▊     | 121/250 [00:27<00:08, 14.99it/s, est. speed input: 2869.50 toks/s, output: 775.69 toks/s]Processed prompts:  50%|████▉     | 124/250 [00:27<00:07, 17.51it/s, est. speed input: 2952.17 toks/s, output: 800.26 toks/s]Processed prompts:  51%|█████     | 127/250 [00:28<00:10, 12.17it/s, est. speed input: 2983.16 toks/s, output: 816.68 toks/s]Processed prompts:  52%|█████▏    | 129/250 [00:28<00:10, 11.50it/s, est. speed input: 3008.95 toks/s, output: 829.75 toks/s]Processed prompts:  52%|█████▏    | 131/250 [00:28<00:12,  9.70it/s, est. speed input: 3020.61 toks/s, output: 840.31 toks/s]Processed prompts:  53%|█████▎    | 133/250 [00:29<00:13,  8.58it/s, est. speed input: 3057.30 toks/s, output: 850.74 toks/s]Processed prompts:  54%|█████▍    | 135/250 [00:29<00:11, 10.09it/s, est. speed input: 3095.03 toks/s, output: 861.24 toks/s]Processed prompts:  55%|█████▍    | 137/250 [00:29<00:11,  9.44it/s, est. speed input: 3129.41 toks/s, output: 861.82 toks/s]Processed prompts:  56%|█████▌    | 139/250 [00:29<00:10, 10.33it/s, est. speed input: 3149.75 toks/s, output: 877.55 toks/s]Processed prompts:  57%|█████▋    | 142/250 [00:29<00:09, 11.01it/s, est. speed input: 3157.53 toks/s, output: 890.25 toks/s]Processed prompts:  58%|█████▊    | 144/250 [00:30<00:10, 10.13it/s, est. speed input: 3195.40 toks/s, output: 897.43 toks/s]Processed prompts:  59%|█████▉    | 147/250 [00:30<00:08, 12.46it/s, est. speed input: 3275.32 toks/s, output: 923.79 toks/s]Processed prompts:  60%|██████    | 150/250 [00:30<00:07, 13.48it/s, est. speed input: 3335.65 toks/s, output: 941.90 toks/s]Processed prompts:  61%|██████    | 152/250 [00:30<00:08, 11.12it/s, est. speed input: 3360.08 toks/s, output: 948.68 toks/s]Processed prompts:  62%|██████▏   | 155/250 [00:30<00:07, 13.38it/s, est. speed input: 3411.06 toks/s, output: 963.17 toks/s]Processed prompts:  63%|██████▎   | 157/250 [00:31<00:08, 10.48it/s, est. speed input: 3419.71 toks/s, output: 967.18 toks/s]Processed prompts:  64%|██████▍   | 160/250 [00:31<00:08, 10.70it/s, est. speed input: 3473.24 toks/s, output: 981.81 toks/s]Processed prompts:  65%|██████▍   | 162/250 [00:31<00:07, 11.51it/s, est. speed input: 3512.75 toks/s, output: 999.13 toks/s]Processed prompts:  67%|██████▋   | 167/250 [00:31<00:04, 17.13it/s, est. speed input: 3626.08 toks/s, output: 1031.37 toks/s]Processed prompts:  68%|██████▊   | 170/250 [00:31<00:04, 17.27it/s, est. speed input: 3682.06 toks/s, output: 1046.89 toks/s]Processed prompts:  70%|██████▉   | 174/250 [00:32<00:03, 19.20it/s, est. speed input: 3764.97 toks/s, output: 1077.79 toks/s]Processed prompts:  71%|███████   | 177/250 [00:32<00:04, 17.81it/s, est. speed input: 3816.96 toks/s, output: 1093.71 toks/s]Processed prompts:  72%|███████▏  | 179/250 [00:32<00:05, 13.67it/s, est. speed input: 3845.55 toks/s, output: 1096.13 toks/s]Processed prompts:  73%|███████▎  | 183/250 [00:32<00:04, 16.62it/s, est. speed input: 3959.43 toks/s, output: 1123.83 toks/s]Processed prompts:  74%|███████▍  | 185/250 [00:32<00:05, 12.63it/s, est. speed input: 3979.71 toks/s, output: 1135.86 toks/s]Processed prompts:  75%|███████▍  | 187/250 [00:33<00:05, 11.66it/s, est. speed input: 4001.46 toks/s, output: 1151.16 toks/s]Processed prompts:  76%|███████▌  | 189/250 [00:33<00:04, 12.28it/s, est. speed input: 4052.70 toks/s, output: 1169.63 toks/s]Processed prompts:  76%|███████▋  | 191/250 [00:33<00:05, 11.60it/s, est. speed input: 4113.42 toks/s, output: 1180.28 toks/s]Processed prompts:  77%|███████▋  | 193/250 [00:33<00:04, 12.43it/s, est. speed input: 4178.30 toks/s, output: 1193.77 toks/s]Processed prompts:  80%|███████▉  | 199/250 [00:33<00:03, 16.89it/s, est. speed input: 4315.77 toks/s, output: 1229.86 toks/s]Processed prompts:  80%|████████  | 201/250 [00:34<00:03, 15.26it/s, est. speed input: 4346.68 toks/s, output: 1247.57 toks/s]Processed prompts:  81%|████████  | 203/250 [00:34<00:04, 11.00it/s, est. speed input: 4347.88 toks/s, output: 1249.98 toks/s]Processed prompts:  82%|████████▏ | 205/250 [00:34<00:05,  8.72it/s, est. speed input: 4366.34 toks/s, output: 1254.83 toks/s]Processed prompts:  84%|████████▍ | 210/250 [00:35<00:03, 10.86it/s, est. speed input: 4450.63 toks/s, output: 1285.42 toks/s]Processed prompts:  85%|████████▌ | 213/250 [00:35<00:03, 10.13it/s, est. speed input: 4499.40 toks/s, output: 1294.27 toks/s]Processed prompts:  86%|████████▋ | 216/250 [00:35<00:02, 11.42it/s, est. speed input: 4551.39 toks/s, output: 1314.00 toks/s]Processed prompts:  87%|████████▋ | 218/250 [00:35<00:03, 10.16it/s, est. speed input: 4575.17 toks/s, output: 1324.41 toks/s]Processed prompts:  88%|████████▊ | 220/250 [00:36<00:02, 11.09it/s, est. speed input: 4597.05 toks/s, output: 1340.51 toks/s]Processed prompts:  89%|████████▉ | 223/250 [00:36<00:02, 11.88it/s, est. speed input: 4665.33 toks/s, output: 1363.15 toks/s]Processed prompts:  90%|█████████ | 225/250 [00:36<00:02,  8.95it/s, est. speed input: 4673.71 toks/s, output: 1366.47 toks/s]Processed prompts:  91%|█████████ | 227/250 [00:36<00:02, 10.24it/s, est. speed input: 4686.19 toks/s, output: 1377.91 toks/s]Processed prompts:  92%|█████████▏| 229/250 [00:36<00:01, 11.21it/s, est. speed input: 4723.59 toks/s, output: 1395.21 toks/s]Processed prompts:  92%|█████████▏| 231/250 [00:37<00:02,  8.97it/s, est. speed input: 4768.54 toks/s, output: 1405.11 toks/s]Processed prompts:  93%|█████████▎| 233/250 [00:37<00:01,  8.93it/s, est. speed input: 4794.43 toks/s, output: 1416.44 toks/s]Processed prompts:  94%|█████████▍| 235/250 [00:38<00:02,  5.03it/s, est. speed input: 4740.05 toks/s, output: 1405.26 toks/s]Processed prompts:  94%|█████████▍| 236/250 [00:38<00:03,  4.58it/s, est. speed input: 4734.63 toks/s, output: 1409.36 toks/s]Processed prompts:  96%|█████████▌| 239/250 [00:38<00:01,  5.72it/s, est. speed input: 4794.67 toks/s, output: 1438.40 toks/s]Processed prompts:  96%|█████████▋| 241/250 [00:39<00:01,  5.69it/s, est. speed input: 4792.41 toks/s, output: 1446.96 toks/s]Processed prompts:  97%|█████████▋| 242/250 [00:39<00:01,  4.85it/s, est. speed input: 4784.66 toks/s, output: 1445.25 toks/s]Processed prompts:  97%|█████████▋| 243/250 [00:39<00:01,  4.50it/s, est. speed input: 4787.23 toks/s, output: 1446.30 toks/s]Processed prompts:  98%|█████████▊| 244/250 [00:40<00:01,  3.73it/s, est. speed input: 4754.90 toks/s, output: 1443.44 toks/s]Processed prompts:  98%|█████████▊| 245/250 [00:42<00:02,  1.69it/s, est. speed input: 4593.31 toks/s, output: 1401.87 toks/s]Processed prompts:  99%|█████████▉| 247/250 [00:46<00:03,  1.26s/it, est. speed input: 4208.70 toks/s, output: 1308.62 toks/s]Processed prompts:  99%|█████████▉| 248/250 [01:12<00:13,  6.76s/it, est. speed input: 2724.41 toks/s, output: 881.24 toks/s] Processed prompts: 100%|█████████▉| 249/250 [01:18<00:06,  6.66s/it, est. speed input: 2518.01 toks/s, output: 849.08 toks/s]Processed prompts: 100%|██████████| 250/250 [01:25<00:00,  6.81s/it, est. speed input: 2311.19 toks/s, output: 818.72 toks/s]Processed prompts: 100%|██████████| 250/250 [01:25<00:00,  6.81s/it, est. speed input: 2311.19 toks/s, output: 818.72 toks/s]Processed prompts: 100%|██████████| 250/250 [01:25<00:00,  2.91it/s, est. speed input: 2311.19 toks/s, output: 818.72 toks/s]
+ python3 clean_generations_translation.py --model yangccccc/codellama-multi --dataset Avatar --source_lang Python --target_lang Java --remove_prompt --use_test
  0%|          | 0/250 [00:00<?, ?it/s]import java.util.Scanner ; public class atcoder_ABC146_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] g = new int [ n ] [ n ] ; int [ ] [ ] e = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) - 1 ; int b = sc.nextInt ( ) - 1 ; g [ a ] [ b ] = 1 ; g [ b ] [ a ] = 1 ; e [ a ] [ b ] = 0 ; e [ b ] [ a ] = 0 ; } int k = bfs ( 0 , n , g , e ) ; System.out.println ( k ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { System.out.print ( e [ i ] [ j ] + " " ) ; } System.out.println ( ) ; } } public static int bfs ( int s , int n , int [ ] [ ] g , int [ ] [ ] e ) { int [ ] v = new int [ n ] ; int [ ] c = new int [ n ] ; int k = 0 ; v [ s ] = 1 ; c [ s ] = 1 ; Queue < Integer > q = new LinkedList < > ( ) ; q.add ( s ) ; while ( ! q.isEmpty ( ) ) { int u = q.poll ( ) ; for ( int i = 0 ; i < n ; i ++ ) { if ( g [ u ] [ i ] == 1 && v [ i ] == 0 ) { v [ i ] = 1 ; c [ i ] = c [ u ] + 1 ; q.add ( i ) ; } } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( g [ i ] [ j ] == 1 ) { e [ i ] [ j ] = Math.min ( c [ i ] , c [ j ] ) ; } } } return k ; } }
import java.util.Scanner ; public class atcoder_ABC119_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; double [ ] x = new double [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { x [ i ] = sc.nextDouble ( ) ; } double sum = 0.0 ; for ( int i = 0 ; i < N ; i ++ ) { sum += x [ i ] ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_AGC028_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextLong ( ) ; } long [ ] fact = new long [ 1000001 ] ; fact [ 0 ] = 1 ; for ( int i = 1 ; i < 1000001 ; i ++ ) { fact [ i ] = ( fact [ i - 1 ] * i ) % 1000000007 ; } long [ ] inv = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { inv [ i ] = ( long ) ( Math.pow ( i + 1 , 1000000007 - 2 ) ) % 1000000007 ; } long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { long temp = inv [ i ] + inv [ n - 1 - i ] - 1 ; ans = ( ans + a [ i ] * temp ) % 1000000007 ; } ans = ( ans * fact [ n ] ) % 1000000007 ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_569_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int ans = 0 ; while ( s < t ) { s = s * q ; ans ++ ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC112_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ 3 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] [ 0 ] = sc.nextInt ( ) ; arr [ i ] [ 1 ] = sc.nextInt ( ) ; arr [ i ] [ 2 ] = sc.nextInt ( ) ; } int x = 0 ; int y = 0 ; int h = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] [ 2 ] > 0 ) { x = arr [ i ] [ 0 ] ; y = arr [ i ] [ 1 ] ; h = arr [ i ] [ 2 ] ; break ; } } int [ ] [ ] dp = new int [ 101 ] [ 101 ] ; for ( int i = 0 ; i < 101 ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { dp [ i ] [ j ] = - 1 ; } } dp [ x ] [ y ] = h ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { for ( int k = 0 ; k < 101 ; k ++ ) { if ( dp [ j ] [ k ] != - 1 && dp [ j ] [ k ] >= arr [ i ] [ 2 ] ) { dp [ j + arr [ i ] [ 0 ] ] [ k + arr [ i ] [ 1 ] ] = Math.max ( dp [ j ] [ k ] - Math.abs ( arr [ i ] [ 0 ] - j ) - Math.abs ( arr [ i ] [ 1 ] - k ) , 0 ) + arr [ i ] [ 2 ] ; } } } } int ansX = 0 ; int ansY = 0 ; int ansH = 0 ; for ( int i = 0 ; i < 101 ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { if ( dp [ i ] [ j ] > ansH ) { ansX = i ; ansY = j ; ansH = dp [ i ] [ j ] ; } } } System.out.println ( ansX + " " + ansY + " " + ansH ) ; } } }
import java.util.Scanner ; public class atcoder_ABC104_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int D = sc.nextInt ( ) ; int G = sc.nextInt ( ) ; int [ ] [ ] PC = new int [ D ] [ 2 ] ; for ( int i = 0 ; i < D ; i ++ ) { PC [ i ] [ 0 ] = sc.nextInt ( ) ; PC [ i ] [ 1 ] = sc.nextInt ( ) ; } int ans = ( int ) 1e9 ; for ( int i = 0 ; i < ( 1 << D ) ; i ++ ) { int score = 0 ; int problem = 0 ; for ( int j = 0 ; j < D ; j ++ ) { if ( ( i >> j ) % 2 == 1 ) { score += 100 * ( j + 1 ) * PC [ j ] [ 0 ] + PC [ j ] [ 1 ] ; problem += PC [ j ] [ 0 ] ; } } if ( score > G ) continue ; int left = G - score ; for ( int j = 0 ; j < D ; j ++ ) { if ( ( i >> j ) % 2 == 1 ) continue ; if ( left > 100 * ( j + 1 ) * PC [ j ] [ 0 ] + PC [ j ] [ 1 ] ) continue ; int tmp = ( left + 100 * ( j + 1 ) - 1 ) / ( 100 * ( j + 1 ) ) ; ans = Math.min ( ans , problem + Math.min ( tmp , PC [ j ] [ 0 ] ) ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_678_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = ( a + b - 1 ) / b * b ; System.out.println ( ans ) ; } }
[INST:perfect]
import collections
import heapq
import sys
import math
import itertools
import bisect
from io import BytesIO , IOBase
import os

def value():
    return tuple(map(int, input().split()))

def values():
    return tuple(map(int, sys.stdin.readline().split()))

def inlst():
    return [int(i) for i in input().split()]

def inlsts():
    return [int(i) for i in sys.stdin.readline().split()]

def inp():
    return int(input())

def inps():
    return int(sys.stdin.readline())

def instr():
    return input()

def stlst():
    return [i for i in input().split()]

def help(a, b, l):
    tot = []
    for i in range(b):
        tot.append(l[i * a : i * a + a])
    for i in zip(*tot):
        if sum(i) == b:
            return True
    return False

def solve():
    tot = []
    x = instr()
    s = []
    for i in x:
        if i == 'O':
            s.append(0)
        else:
            s.append(1)
    for i in range(1, 13):
        if 12 % i == 0:
            if help(i, 12 // i, s):
                tot.append((12 // i, i))
    print(len(tot), end=' ')
    for a, b in sorted(tot):
        print(f'{a}x{b}', end=' ')
    print()

if __name__ == "__main__":
    for i in range(inp()):
        solve()
import java.util.Scanner ; public class atcoder_ABC105_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; long [ ] A = new long [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextLong ( ) ; } long [ ] cum_remainders = new long [ N + 1 ] ; cum_remainders [ 0 ] = 0 ; for ( int i = 0 ; i < N ; i ++ ) { cum_remainders [ i + 1 ] = ( cum_remainders [ i ] + A [ i ] ) % M ; } long [ ] remainder_counts = new long [ M ] ; for ( int i = 0 ; i < N + 1 ; i ++ ) { remainder_counts [ cum_remainders [ i ] ] ++ ; } long combinations = 0 ; for ( int i = 0 ; i < M ; i ++ ) { combinations += remainder_counts [ i ] * ( remainder_counts [ i ] - 1 ) / 2 ; } System.out.println ( combinations ) ; } }
import java.util.Scanner ; public class atcoder_AGC033_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int H = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; int N = sc.nextInt ( ) ; int s_r = sc.nextInt ( ) ; int s_c = sc.nextInt ( ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; boolean judge = false ; int S_L = 0 ; int S_R = 0 ; int S_U = 0 ; int S_D = 0 ; int T_L = 0 ; int T_R = 0 ; int T_U = 0 ; int T_D = 0 ; for ( int x = 0 ; x < N ; x ++ ) { if ( S.charAt ( x ) == 'L' ) { S_L ++ ; if ( S_L - T_R - s_c == 0 ) { judge = true ; } } else if ( S.charAt ( x ) == 'R' ) { S_R ++ ; if ( s_c + ( S_R - T_L ) == W + 1 ) { judge = true ; } } else if ( S.charAt ( x ) == 'U' ) { S_U ++ ; if ( S_U - T_D - s_r == 0 ) { judge = true ; } } else if ( S.charAt ( x ) == 'D' ) { S_D ++ ; if ( s_r + ( S_D - T_U ) == H + 1 ) { judge = true ; } } if ( T.charAt ( x ) == 'L' ) { if ( S_R - T_L + s_c != 1 ) { T_L ++ ; } } else if ( T.charAt ( x ) == 'R' ) { if ( s_c + ( T_R - S_L ) != W ) { T_R ++ ; } } else if ( T.charAt ( x ) == 'U' ) { if ( S_D - T_U + s_r != 1 ) { T_U ++ ; } } else if ( T.charAt ( x ) == 'D' ) { if ( s_r + ( T_D - S_U ) != H ) { T_D ++ ; } } } if ( judge ) { System.out.println ( "NO" ) ; } else { System.out.println ( "YES" ) ; } } }
import java.util.Scanner ; public class codeforces_55_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; while ( n % 2 == 0 ) { n = n / 2 ; } if ( n == 1 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC106_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int K = sc.nextInt ( ) ; int l = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) != '1' ) break ; l ++ ; } if ( l >= K ) return 1 ; return S.charAt ( l ) ; } }
import java.util.Scanner ; public class codeforces_404_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.next ( ) ; } int flag = 0 ; String d1 = "" ; String d2 = "" ; Set < Character > rem = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) { d1 += s [ i ].charAt ( j ) ; } if ( i == n - j - 1 ) { d2 += s [ i ].charAt ( j ) ; } if ( i != j && i != n - j - 1 ) { rem.add ( s [ i ].charAt ( j ) ) ; } } } if ( rem.size ( ) != 1 ) { System.out.println ( "NO" ) ; } else if ( ! d1.equals ( d2 ) ) { System.out.println ( "NO" ) ; } else if ( d1.length ( ) != 1 ) { System.out.println ( "NO" ) ; } else if ( ! rem.equals ( d1 ) ) { System.out.println ( "NO" ) ; } else { System.out.println ( "YES" ) ; } } }
import java.util.Scanner ; public class atcoder_AGC046_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int C = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; long [ ] [ ] dp = new long [ C + 1 ] [ D + 1 ] ; dp [ A ] [ B ] = 1 ; for ( int i = A ; i <= C ; i ++ ) { for ( int j = B ; j <= D ; j ++ ) { dp [ i ] [ j ] += ( dp [ i ] [ j - 1 ] * i + dp [ i - 1 ] [ j ] * j - dp [ i - 1 ] [ j - 1 ] * ( i - 1 ) * ( j - 1 ) ) % 998244353 ; } } System.out.println ( dp [ C ] [ D ] ) ; } }
import java.util.Scanner ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ m ] ; int ind = 1 ; for ( int i = 0 ; i < t ; i ++ ) { String s = sc.next ( ) ; if ( s.equals ( "alloc" ) ) { int x = sc.nextInt ( ) ; int pos = 0 ; for ( int j = 0 ; j < m ; j ++ ) { if ( a [ j ] == 0 ) { pos ++ ; if ( pos == x ) { for ( int k = j - x + 1 ; k <= j ; k ++ ) { a [ k ] = ind ; } System.out.println ( ind ) ; ind ++ ; break ; } } else { pos = 0 ; } } if ( pos == 0 ) { System.out.println ( "NULL" ) ; } } else if ( s.equals ( "erase" ) ) { int x = sc.nextInt ( ) ; if ( ! ( x > 0 && x <= m ) || a [ x - 1 ] != x ) { System.out.println ( "ILLEGAL_ERASE_ARGUMENT" ) ; } else { a [ x - 1 ] = 0 ; } } else if ( s.equals ( "defragment" ) ) { int cnt = 0 ; for ( int j = 0 ; j < m ; j ++ ) { if ( a [ j ] == 0 ) { cnt ++ ; } } a = java.util.Arrays.stream ( a ).filter ( x -> x != 0 ).toArray ( ) ; for ( int j = 0 ; j < cnt ; j ++ ) { a [ m - cnt + j ] = 0 ; } } } } } }
[INST:perfect]
import java.util.Scanner ; public class atcoder_ABC089_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.next ( ) ; } int [ ] march = new int [ 5 ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ].charAt ( 0 ) == 'M' || s [ i ].charAt ( 0 ) == 'A' || s [ i ].charAt ( 0 ) == 'R' || s [ i ].charAt ( 0 ) == 'C' || s [ i ].charAt ( 0 ) == 'H' ) { if ( s [ i ].charAt ( 0 ) == 'M' ) { march [ 0 ] ++ ; } else if ( s [ i ].charAt ( 0 ) == 'A' ) { march [ 1 ] ++ ; } else if ( s [ i ].charAt ( 0 ) == 'R' ) { march [ 2 ] ++ ; } else if ( s [ i ].charAt ( 0 ) == 'C' ) { march [ 3 ] ++ ; } else if ( s [ i ].charAt ( 0 ) == 'H' ) { march [ 4 ] ++ ; } } } long ans = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { for ( int k = 0 ; k < 3 ; k ++ ) { ans += march [ i ] * march [ j ] * march [ k ] ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC013_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 1 ; i < n - 1 ; i ++ ) { if ( a [ i - 1 ] < a [ i ] && a [ i ] > a [ i + 1 ] || a [ i - 1 ] > a [ i ] && a [ i ] < a [ i + 1 ] ) { ans ++ ; } } System.out.println ( ans + 1 ) ; } }
import java.util.Scanner ; public class codeforces_609_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] cnt = new int [ 100001 ] ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ a [ i ] ] ++ ; } long res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( cnt [ a [ i ] ] > 1 ) { res += n - i - cnt [ a [ i ] ] ; cnt [ a [ i ] ] -- ; } else { res += n - i - 1 ; } } System.out.println ( res ) ; } }
import java.util.Scanner ; public class atcoder_ABC162_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; int r = 0 ; int g = 0 ; int b = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == 'R' ) { r ++ ; } else if ( s.charAt ( i ) == 'G' ) { g ++ ; } else { b ++ ; } } int ans = r * g * b ; for ( int i = 1 ; i <= n / 2 ; i ++ ) { for ( int j = 0 ; j <= n - 2 * i ; j ++ ) { String str = "" + s.charAt ( j ) + s.charAt ( j + i ) + s.charAt ( j + i * 2 ) ; if ( str.equals ( "RGB" ) || str.equals ( "RBG" ) || str.equals ( "BGR" ) || str.equals ( "BRG" ) || str.equals ( "GBR" ) || str.equals ( "GRB" ) ) { ans -- ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC014_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; int [ ] b = new int [ n + 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } int [ ] c = new int [ n + 1 ] ; int [ ] d = new int [ n + 1 ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { c [ a [ i ] ] ++ ; d [ b [ i ] ] ++ ; } int [ ] e = new int [ n + 1 ] ; int [ ] f = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( c [ i ] == 0 ) { e [ i ] = 1 ; } if ( d [ i ] == 0 ) { f [ i ] = 1 ; } } int [ ] g = new int [ n + 1 ] ; int [ ] h = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( e [ i ] == 1 ) { g [ i ] = 1 ; } if ( f [ i ] == 1 ) { h [ i ] = 1 ; } } int [ ] ans = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( g [ i ] == 1 && h [ i ] == 1 ) { ans [ i ] = 1 ; } } for ( int i = 1 ; i <= n ; i ++ ) { if ( ans [ i ] == 1 ) { System.out.println ( "First" ) ; return ; } } System.out.println ( "Second" ) ; } }
import java.util.Scanner ; public class atcoder_ABC151_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; char c = s.charAt ( 0 ) ; int index = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { if ( c == ( char ) ( 'a' + i ) ) { index = i ; break ; } } char ans = ( char ) ( 'a' + ( index + 1 ) ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_581_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int [ ] ans = new int [ n ] ; int mx = arr [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) { ans [ i ] = Math.max ( 0 , mx - arr [ i ] + 1 ) ; if ( arr [ i ] > mx ) { mx = arr [ i ] ; } } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( ans [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC126_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] [ ] graph = new int [ n ] [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; graph [ x - 1 ] [ i ] = y ; graph [ y - 1 ] [ i ] = x ; } int [ ] visited = new int [ n ] ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( visited [ i ] == 0 ) { count ++ ; Queue < Integer > q = new LinkedList < > ( ) ; q.add ( i ) ; while ( ! q.isEmpty ( ) ) { int node = q.poll ( ) ; visited [ node ] = 1 ; for ( int j = 0 ; j < m ; j ++ ) { int adj = graph [ node ] [ j ] ; if ( visited [ adj ] == 0 ) q.add ( adj ) ; } } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC118_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int gcd = a [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { gcd = gcd ( gcd , a [ i ] ) ; } System.out.println ( gcd ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; } }
import java.util.Scanner ; public class atcoder_ABC132_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; long [ ] coef = new long [ n ] ; for ( int i = 1 ; i <= ( int ) Math.sqrt ( n ) ; i ++ ) { coef [ i - 1 ] = n / i - n / ( i + 1 ) ; } for ( int i = 0 ; i < n - coef.length ; i ++ ) { coef [ coef.length + i ] = 1 ; } for ( int i = coef.length - 1 ; i >= 0 ; i -- ) { coef [ i ] = coef [ coef.length - 1 - i ] ; } long [ ] [ ] dp = new long [ k + 1 ] [ coef.length ] ; for ( int i = 0 ; i < dp.length ; i ++ ) { for ( int j = 0 ; j < dp [ 0 ].length ; j ++ ) { dp [ i ] [ j ] = 0 ; } } dp [ 0 ] [ 0 ] = 1 ; for ( int i = 1 ; i <= k ; i ++ ) { for ( int j = 0 ; j < coef.length ; j ++ ) { long tmp = 0 ; for ( int k = coef.length - 1 ; k > j ; k -- ) { tmp += dp [ i - 1 ] [ coef.length - 1 - k ] ; tmp %= 1000000007 ; } dp [ i ] [ j ] = coef [ j ] * tmp ; dp [ i ] [ j ] %= 1000000007 ; } } long ans = 0 ; for ( int i = 0 ; i < dp [ k ].length ; i ++ ) { ans += dp [ k ] [ i ] ; ans %= 1000000007 ; } System.out.println ( ans ) ; } } }
import java.util.Scanner ; public class codeforces_581_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int min = Math.min ( a , b ) ; int max = Math.max ( a , b ) ; int ans = ( max - min ) / 2 ; System.out.println ( min + " " + ans ) ; } }
import java.util.Scanner ; public class codeforces_92_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int i = 1 ; while ( m >= i ) { m -= i ; i = ( i % n ) + 1 ; } System.out.println ( m ) ; } }
import java.util.Scanner ; public class atcoder_ABC170_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = 0 ; if ( a == 0 ) { f = 1 ; } else if ( b == 0 ) { f = 2 ; } else if ( c == 0 ) { f = 3 ; } else if ( d == 0 ) { f = 4 ; } else if ( e == 0 ) { f = 5 ; } System.out.println ( f ) ; } }
import java.util.Scanner ; public class codeforces_653_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } Arrays.sort ( arr ) ; boolean flag = false ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 ) { if ( arr [ i ] + 1 < arr [ i ] + 2 )
import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int x = 0 ; int y = 0 ; int [ ] dx = { 0 , 0 , 1 , - 1 } ; int [ ] dy = { 1 , - 1 , 0 , 0 } ; boolean isBug = false ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char c = S.charAt ( i ) ; int nx = x + dx [ c - 'L' ] ; int ny = y + dy [ c - 'L' ] ; if ( ! isBug ) { if ( nx < 0 || nx >= 3 || ny < 0 || ny >= 3 ) { isBug = true ; } else if ( nx == x && ny == y ) { isBug = true ; } else { for ( int j = 0 ; j < 4 ; j ++ ) { if ( nx + dx [ j ] == x && ny + dy [ j ] == y ) { isBug = true ; break ; } } } } if ( isBug ) { break ; } x = nx ; y = ny ; } if ( isBug ) { System.out.println ( "BUG" ) ; } else { System.out.println ( "OK" ) ; } } }
import java.util.Scanner ; public class codeforces_146_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] number = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { number [ i ] = sc.nextInt ( ) ; } int h1 = 0 ; int h2 = 0 ; int x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( number [ i ] != 4 && number [ i ] != 7 ) { System.out.println ( "NO" ) ; x ++ ; break ; } if ( i < n / 2 ) { h1 += number [ i ] ; } else { h2 += number [ i ] ; } } if ( x == 0 ) { if ( h1 == h2 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } } }
[java]
import java.util.Scanner ; public class codeforces_299_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int gcd = 0 ; for ( int i = 0 ; i < n ; i ++ ) { gcd = gcd ( arr [ i ] , gcd ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % gcd != 0 ) { ans ++ ; } } System.out.println ( ans ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } else { return gcd ( b , a % b ) ; } } }
import java.util.Scanner ; public class codeforces_518_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; String t = sc.next ( ) ; int [ ] freqs = new int [ 26 ] ; int [ ] freqt = new int [ 26 ] ; int yay = 0 ; int whoops = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { freqs [ s.charAt ( i ) - 'a' ] ++ ; } for ( int i = 0 ; i < t.length ( ) ; i ++ ) { freqt [ t.charAt ( i ) - 'a' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) { while ( freqs [ i ] > 0 && freqt [ i ] > 0 ) { yay ++ ; freqs [ i ] -- ; freqt [ i ] -- ; } } for ( int i = 0 ; i < 26 ; i ++ ) { while ( freqs [ i ] > 0 ) { if ( ( i >= 0 && i <= 25 ) && freqt [ i - 32 ] > 0 ) { whoops ++ ; freqs [ i ] -- ; freqt [ i - 32 ] -- ; } else if ( ( i >= 32 && i <= 57 ) && freqt [ i + 32 ] > 0 ) { whoops ++ ; freqs [ i ] -- ; freqt [ i + 32 ] -- ; } else { break ; } } } System.out.println ( yay + " " + whoops ) ; } }
import java.util.Scanner ; public class codeforces_421_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int [ ] listA = new int [ n ] ; int [ ] listB = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { listA [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { listB [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( listA [ i ] == i + 1 ) { System.out.print ( 1 + " " ) ; } else { System.out.print ( 2 + " " ) ; } } } }
import java.util.Scanner ; public class codeforces_340_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int lcm = lcm ( x , y ) ; int ans = b / lcm - ( a - 1 ) / lcm ; System.out.println ( ans ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static int lcm ( int a , int b ) { return a * b / gcd ( a , b ) ; } }
import java.util.Scanner ; public class atcoder_ABC140_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] S = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { S [ i ] = sc.nextInt ( ) ; } int [ ] flag = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { flag [ i ] = 1 ; } int [ ] cur = new int [ N ] ; cur [ 0 ] = S [ 0 ] ; flag [ 0 ] = 0 ; for ( int i = 0 ; i < N ; i ++ ) { int j = 0 ; int jM = cur.length ; for ( int k = 0 ; k < N ; k ++ ) { if ( flag [ k ] == 1 && S [ k ] < cur [ j ] ) { cur [ j + 1 ] = S [ k ] ; j ++ ; flag [ k ] = 0 ; if ( j == jM ) { break ; } } } if ( j != jM ) { System.out.println ( "No" ) ; return ; } cur = cur ; } System.out.println ( "Yes" ) ; } }
import java.util.Scanner ; public class codeforces_534_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int v1 = sc.nextInt ( ) ; int v2 = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int a = 1 ; int v = v1 ; int distance = 0 ; for ( int i = 0 ; i < t ; i ++ ) { if ( v - v2 > ( t - i - 1 ) * d ) { a *= - 1 ; v = ( t - i - 1 ) * d + v2 ; } distance += v ; v += a * d ; } System.out.println ( distance ) ; } }
import java.util.Scanner ; public class codeforces_672_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ 370 ] ; int ind = 0 ; for ( int i = 1 ; i <= 370 ; i ++ ) { int temp = 0 ; int p = i , q = i ; while ( p != 0 ) { p /= 10 ; temp ++ ; } if ( temp == 1 ) { arr [ ind ++ ] = i ; } else if ( temp == 2 ) { int [ ] tempArr = new int [ temp ] ; int j = 0 ; while ( q != 0 ) { tempArr [ j ++ ] = q % 10 ; q /= 10 ; } for ( int k = temp - 1 ; k >= 0 ; k -- ) { arr [ ind ++ ] = tempArr [ k ] ; } } else if ( temp == 3 ) { int [ ] tempArr = new int [ temp ] ; int j = 0 ; while ( q != 0 ) { tempArr [ j ++ ] = q % 10 ; q /= 10 ; } for ( int k = temp - 1 ; k >= 0 ; k -- ) { arr [ ind ++ ] = tempArr [ k ] ; } } } arr [ ind - 1 ] = 0 ; arr [ ind - 2 ] = 0 ; int x = sc.nextInt ( ) ; System.out.println ( arr [ x - 1 ] ) ; } }
import java.util.Scanner ; public class codeforces_148_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int p = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( d <= p ) { System.out.println ( 0 ) ; return ; } int result = 0 ; int position = t * p ; position += p * position / ( d - p ) ; while ( position < c ) { result ++ ; position += p * position / d ; position += p * f ; position += p * position / ( d - p ) ; } System.out.println ( result ) ; } }
import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; int c = 0 , l = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) >= 'a' && s.charAt ( i ) <= 'z' ) { l ++ ; } else { c ++ ; } } if ( c > l ) { System.out.println ( s.toUpperCase ( ) ) ; } else { System.out.println ( s.toLowerCase ( ) ) ; } } }
import java.util.Scanner ; public class codeforces_474_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int r = 1 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = r ; r ++ ; for ( int j = 0 ; j < sc.nextInt ( ) ; j ++ ) { a [ i ] = a [ i ] * 2 + 1 ; } } sc.nextLine ( ) ; int m = sc.nextInt ( ) ; for ( int i = 0 ; i < m ; i ++ ) { System.out.println ( a [ sc.nextInt ( ) - 1 ] ) ; } } }
import java.util.Scanner ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > b [ i ] ) { int total = 0 ; while ( a [ i ] > 0 && b [ i ] > 0 ) { total += a [ i ] / b [ i ] ; a [ i ] = a [ i ] % b [ i ] ; if ( a [ i ] > 0 ) { total += b [ i ] / a [ i ] ; b [ i ] = b [ i ] % a [ i ] ; } } System.out.println ( total ) ; } else if ( a [ i ] < b [ i ] ) { int total = 0 ; while ( a [ i ] > 0 && b [ i ] > 0 ) { total += b [ i ] / a [ i ] ; b [ i ] = b [ i ] % a [ i ] ; if ( b [ i ] > 0 ) { total += a [ i ] / b [ i ] ; a [ i ] = a [ i ] % b [ i ] ; } } System.out.println ( total ) ; } else { System.out.println ( 1 ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC172_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { ans += i * ( N / i ) * ( N / i + 1 ) / 2 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC112_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int age = sc.nextInt ( ) ; if ( age == 1 ) { System.out.println ( "Hello World" ) ; } else { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; System.out.println ( a + b ) ; } } }
import java.util.Scanner ; public class codeforces_265_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = n - 1 ; int last = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += Math.abs ( last - arr [ i ] ) + 1 ; last = arr [ i ] ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_342_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int d = 1 ; char c = 'R' ; if ( s < f ) { d = 1 ; c = 'R' ; } else { d = - 1 ; c = 'L' ; } String res = "" ; int i = 1 ; int j = s ; while ( j != f ) { int t = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int k = 1 ; while ( j != f ) { if ( i > t && k < m ) { t = sc.nextInt ( ) ; l = sc.nextInt ( ) ; r = sc.nextInt ( ) ; k ++ ; } if ( i == t && ( l <= j && j <= r || l <= j + d && ( j + d ) <= r ) ) { res += "X" ; } else { res += c ; j += d ; } i ++ ; } System.out.println ( res ) ; } } }
import java.util.Scanner ; public class codeforces_356_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; for ( int j = l ; j <= r ; j ++ ) { if ( arr [ j - 1 ] == 0 && j != x ) { arr [ j - 1 ] = x ; } else if ( arr [ j - 1 ] != 0 && j != x ) { arr [ j - 1 ] = r + 1 ; } else if ( arr [ j - 1 ] == 0 && j == x ) { arr [ j - 1 ] = x ; } } } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( arr [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC178_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; if ( a == 0 ) { System.out.println ( 1 ) ; } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class atcoder_ABC158_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int ans = 0 ; int rep = N / ( A + B ) ; ans += rep * A ; int res = N - rep * ( A + B ) ; ans += Math.min ( res , A ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_296_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } boolean flag = true ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] == arr [ j ] ) { flag = false ; break ; } } if ( ! flag ) break ; } if ( flag ) System.out.println ( "YES" ) ; else System.out.println ( "NO" ) ; } }
import java.util.Scanner ; public class atcoder_AGC019_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int best1L = Math.min ( q * 4 , Math.min ( h * 2 , s ) ) ; int best2L = Math.min ( d , best1L * 2 ) ; if ( n % 2 == 0 ) { System.out.println ( best2L * n / 2 ) ; } else { System.out.println ( best2L * n / 2 + best1L ) ; } } }
import java.util.Scanner ; public class atcoder_ABC134_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] [ ] ans = new int [ N ] [ ] ; for ( int i = 0 ; i < N ; i ++ ) { int idx = 0 ; for ( int j = 0 ; j < i ; j ++ ) { if ( A [ i ] > A [ j ] ) { idx ++ ; } } if ( idx == ans.length ) { ans [ idx ] = new int [ 1 ] ; ans [ idx ] [ 0 ] = A [ i ] ; } else { ans [ idx ] [ ans [ idx ].length ] = A [ i ] ; } } int cnt = 0 ; for ( int i = 0 ; i < ans.length ; i ++ ) { cnt += ans [ i ].length ; } System.out.println ( cnt ) ; } }
import java.util.Scanner ; public class codeforces_387_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int h1 = sc.nextInt ( ) ; int m1 = sc.nextInt ( ) ; int h2 = sc.nextInt ( ) ; int m2 = sc.nextInt ( ) ; m1 += h1 * 60 ; m2 += h2 * 60 ; m2 = m1 - m2 ; m2 %= 1440 ; System.out.println ( String.format ( "%02d:%02d" , m2 / 60 , m2 % 60 ) ) ; } }
import java.util.Scanner ; public class codeforces_665_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int at = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int bt = sc.nextInt ( ) ; int t1 = sc.nextInt ( ) ; int t2 = sc.nextInt ( ) ; int st = t2 + ( t1 - 5 ) * 60 ; int fin = st + at ; int now = 0 ; int ans = 0 ; while ( now < fin && now < 1140 ) { if ( now + bt > st ) { ans ++ ; } now += b ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_154_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; int n = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String x = sc.next ( ) ; int a = 0 , b = 0 ; for ( int j = 0 ; j < s.length ( ) ; j ++ ) { if ( s.charAt ( j ) == x.charAt ( 0 ) ) { a ++ ; } else if ( s.charAt ( j ) == x.charAt ( 1 ) ) { b ++ ; } else { ans += Math.min ( a , b ) ; a = 0 ; b = 0 ; } } ans += Math.min ( a , b ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_23_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; if ( a < 2 ) { System.out.println ( 0 ) ; } else { System.out.println ( a - 2 ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC150_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long num = sc.nextLong ( ) ; Set < Long > set = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { set.add ( sc.nextLong ( ) ) ; } Set < Integer > twoTimesSet = new HashSet < > ( ) ; for ( Long i : set ) { for ( int j = 1 ; j <= 30 ; j ++ ) { i /= 2 ; if ( i % 2 != 0 ) { twoTimesSet.add ( j ) ; break ; } } if ( twoTimesSet.size ( ) != 1 ) { System.out.println ( 0 ) ; return ; } } List < Long > list = new ArrayList < > ( set ) ; long lcm = list.get ( 0 ) ; for ( int i = 1 ; i < list.size ( ) ; i ++ ) { lcm = lcm * list.get ( i ) / gcd ( lcm , list.get ( i ) ) ; } System.out.println ( ( num - lcm / 2 ) / lcm + 1 ) ; } public static long gcd ( long a , long b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } }
import java.util.Scanner ; public class codeforces_216_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; int [ ] b = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = 0 ; } for ( int i = 0 ; i < m ; i ++ ) { a [ b [ i ] ] ++ ; } int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] == 0 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC149_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int x = a - c ; int y = b - c ; if ( x < 0 ) { x = 0 ; } if ( y < 0 ) { y = 0 ; } System.out.println ( x + " " + y ) ; } }
import java.util.Scanner ; public class codeforces_612_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ a [ i ] - 1 ] = i ; } int res = 0 ; for ( int i = 1 ; i < n ; i ++ ) { res += Math.abs ( b [ i ] - b [ i - 1 ] ) ; } System.out.println ( res ) ; } }

import java.util.Scanner ; public class codeforces_607_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] l = new int [ 1000010 ] ; int [ ] dp = new int [ 1000010 ] ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; l [ a ] = b ; } if ( l [ 0 ] > 0 ) { dp [ 0 ] = 1 ; } int mx = 0 ; for ( int i = 1 ; i < 1000010 ; i ++ ) { if ( l [ i ] == 0 ) { dp [ i ] = dp [ i - 1 ] ; } else if ( l [ i ] >= i ) { dp [ i ] = 1 ; } else { dp [ i ] = dp [ i - l [ i ] - 1 ] + 1 ; } if ( dp [ i ] > mx ) { mx = dp [ i ] ; } } System.out.println ( n - mx ) ; } }
import java.util.Scanner ; public class atcoder_AGC010_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } if ( sum % ( n * ( n + 1 ) / 2 ) != 0 ) { System.out.println ( "NO" ) ; return ; } int k = sum / ( n * ( n + 1 ) / 2 ) ; a [ n ] = a [ 0 ] ; int sum2 = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum2 += ( k - a [ i - 1 ] + a [ i ] ) % n ; } if ( sum2 != 0 ) { System.out.println ( "NO" ) ; return ; } int sum3 = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum3 += ( k - a [ i - 1 ] + a [ i ] ) / n ; } if ( sum3 != n ) { System.out.println ( "NO" ) ; return ; } System.out.println ( "YES" ) ; } }
import java.util.Scanner ; public class codeforces_190_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; if ( n < 1 ) { if ( m < 1 ) { System.out.println ( n + " " + m ) ; return ; } System.out.println ( "Impossible" ) ; return ; } if ( m > n ) { int min = m ; int max = n + m - 1 ; System.out.println ( min + " " + max ) ; } else { int min = n ; int max = n + m - 1 ; if ( m == 0 ) { max = n ; } System.out.println ( min + " " + max ) ; } } }
import java.util.Scanner ; public class codeforces_387_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] round = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { round [ i ] = sc.nextInt ( ) ; } int [ ] george = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { george [ i ] = sc.nextInt ( ) ; } int i = 0 ; int j = 0 ; while ( i < n && j < m ) { if ( round [ i ] <= george [ j ] ) { i ++ ; } j ++ ; } System.out.println ( n - i ) ; } }
import java.util.Scanner ; public class atcoder_ABC137_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] x = new int [ n ] ; int [ ] y = new int [ m ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < m ; i ++ ) { y [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( x [ i ] <= y [ j ] ) { sum += x [ i ] ; break ; } } } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC120_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; if ( s.length ( ) == 1 ) { System.out.println ( 0 ) ; return ; } int [ ] cnt = new int [ 26 ] ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { cnt [ s.charAt ( i ) - 'a' ] ++ ; } int ans = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { if ( cnt [ i ] > 0 ) { ans = Math.max ( ans , cnt [ i ] ) ; } } System.out.println ( ans * 2 ) ; } }
import java.util.Scanner ; public class codeforces_397_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= b [ i ] * c [ i ] ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } } }
import java.util.Scanner ; public class atcoder_ARC102_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int K = sc.nextInt ( ) ; int N = sc.nextInt ( ) ; long [ ] dp = new long [ 2 * K + 2 ] ; dp [ 1 ] = 1 ; for ( int i = 2 ; i <= 2 * K + 1 ; i ++ ) { dp [ i ] = ( dp [ i - 1 ] * 2 ) % 998244353 ; } for ( int i = 2 ; i <= 2 * K + 1 ; i ++ ) { if ( i <= K + 1 ) { dp [ i ] = ( dp [ i ] + dp [ i - 2 ] * ( N - 1 ) ) % 998244353 ; } else { dp [ i ] = dp [ 2 * K + 2 - i ] ; } } System.out.println ( dp [ 2 * K + 1 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC148_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ta = sc.nextInt ( ) ; int ao = sc.nextInt ( ) ; ta -- ; ao -- ; int [ ] [ ] g = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; g [ a - 1 ] [ b - 1 ] = 1 ; g [ b - 1 ] [ a - 1 ] = 1 ; } int [ ] ta_dist = new int [ n ] ; ta_dist [ ta ] = 0 ; int [ ] ao_dist = new int [ n ] ; ao_dist [ ao ] = 0 ; dfs ( g , ta_dist , ao_dist , ta ) ; dfs ( g , ao_dist , ta_dist , ao ) ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( ta_dist [ i ] > ao_dist [ i ] ) continue ; res = Math.max ( res , ao_dist [ i ] ) ; } System.out.println ( res - 1 ) ; } static void dfs ( int [ ] [ ] g , int [ ] dist , int [ ] other_dist , int node ) { for ( int i = 0 ; i < g [ node ].length ; i ++ ) { if ( dist [ g [ node ] [ i ] ] != 0 ) continue ; dist [ g [ node ] [ i ] ] = dist [ node ] + 1 ; dfs ( g , dist , other_dist , g [ node ] [ i ] ) ; } } }
import java.util.Scanner ; public class atcoder_ABC070_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( b <= c || c <= a ) { System.out.println ( 0 ) ; } else { int [ ] arr = { a , b , c } ; Arrays.sort ( arr ) ; System.out.println ( arr [ 2 ] - arr [ 1 ] ) ; } } }
import java.util.Scanner ; public class atcoder_ABC152_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = 1 ; int pos = 0 ; for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ pos ] > arr [ i ] ) { ans ++ ; pos = i ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC111_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] x = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc.nextInt ( ) ; } int [ ] a = new int [ n / 2 ] ; int [ ] b = new int [ n / 2 ] ; int k = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 == 0 ) { a [ k ] = x [ i ] ; k ++ ; } else { b [ k ] = x [ i ] ; k ++ ; } } int [ ] cnta = new int [ 100002 ] ; int [ ] cntb = new int [ 100002 ] ; for ( int i = 0 ; i < n / 2 ; i ++ ) { cnta [ a [ i ] ] ++ ; cntb [ b [ i ] ] ++ ; } int vala = 0 ; int vala1 = 0 ; int maxCnta = 0 ; int maxCnta1 = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) { if ( maxCnta < cnta [ a [ i ] ] ) { vala = a [ i ] ; maxCnta = cnta [ a [ i ] ] ; } if ( maxCnta1 < cnta [ a [ i ] ] && vala != a [ i ] ) { maxCnta1 = cnta [ a [ i ] ] ; vala1 = a [ i ] ; } } int valb = 0 ; int valb1 = 0 ; int maxCntb = 0 ; int maxCntb1 = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) { if ( maxCntb < cntb [ b [ i ] ] ) { valb = b [ i ] ; maxCntb = cntb [ b [ i ] ] ; } if ( maxCntb1 < cntb [ b [ i ] ] && valb != b [ i ] ) { maxCntb1 = cntb [ b [ i ] ] ; valb1 = b [ i ] ; } } if ( valb != vala ) { int res = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) { if ( a [ i ] != vala ) { res ++ ; } if ( b [ i ] != valb ) { res ++ ; } } System.out.println ( res ) ; } else { int resa = 0 ; int resb = 0 ; int resa1 = 0 ; int resb1 = 0 ; for ( int i = 0 ; i < n / 2 ; i ++ ) { if ( a [ i ] != vala ) { resa ++ ; } if ( a [ i ] != vala1 ) { resa1 ++ ; } } for ( int i = 0 ; i < n / 2 ; i ++ ) { if ( b [ i ] != valb ) { resb ++ ; } if ( b [ i ] != valb1 ) { resb1 ++ ; } } System.out.println ( Math.min ( resa + resb1 , resa1 + resb ) ) ; } } } }
import java.util.Scanner ; public class codeforces_268_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] q = new int [ n ] [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { q [ i ] [ 0 ] = sc.nextInt ( ) ; q [ i ] [ 1 ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) continue ; if ( q [ i ] [ 0 ] == q [ j ] [ 1 ] ) ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_651_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int ans = 0 ; if ( x + y >= 3 ) { ans = x + y - 3 ; } if ( y - x >= 3 ) { ans += ( y - x ) / 3 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_274_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long k = sc.nextLong ( ) ; long [ ] arr = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextLong ( ) ; } long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k != 0 || ! isIn ( arr [ i ] / k , arr , k ) ) { ans ++ ; } } System.out.println ( ans ) ; } private static boolean isIn ( long x , long [ ] arr , long k ) { for ( int i = 0 ; i < arr.length ; i ++ ) { if ( arr [ i ] == x ) { return true ; } } return false ; } }
import java.util.Scanner ; public class codeforces_306_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int q = n / m ; int r = n % m ; int [ ] a = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = q ; } for ( int i = 0 ; i < r ; i ++ ) { a [ i ] ++ ; } for ( int i = 0 ; i < m ; i ++ ) { System.out.print ( a [ i ] + " " ) ; } } }
import java.util.Scanner ; public class codeforces_400_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String s = sc.next ( ) ; for ( int j = 0 ; j < m ; j ++ ) { if ( s.charAt ( j ) == 'S' ) { count ++ ; } else if ( s.charAt ( j ) == 'G' ) { count -- ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_327_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == '1' ) count ++ ; } int ans = count ; for ( int i = 0 ; i < n ; i ++ ) { if ( s.charAt ( i ) == '0' ) { int j = i + 1 ; while ( j < n && s.charAt ( j ) == '0' ) j ++ ; int k = j ; while ( k < n && s.charAt ( k ) == '1' ) k ++ ; int l = k ; while ( l < n && s.charAt ( l ) == '0' ) l ++ ; if ( l - i > ans ) ans = l - i ; i = l ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_567_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i == 0 ) { System.out.println ( a [ i + 1 ] - a [ i ] + " " + a [ n - 1 ] - a [ i ] ) ; continue ; } if ( i == n - 1 ) { System.out.println ( a [ n - 1 ] - a [ n - 2 ] + " " + a [ n - 1 ] - a [ 0 ] ) ; continue ; } if ( a [ i ] - a [ i - 1 ] > a [ i + 1 ] - a [ i ] ) { System.out.print ( a [ i + 1 ] - a [ i ] + " " ) ; } else { System.out.print ( a [ i ] - a [ i - 1 ] + " " ) ; } if ( a [ n - 1 ] - a [ i ] > a [ i ] - a [ 0 ] ) { System.out.println ( a [ n - 1 ] - a [ i ] ) ; } else { System.out.println ( a [ i ] - a [ 0 ] ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC109_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.next ( ) ; } String res = "Yes" ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ] == null ) { res = "No" ; break ; } if ( s [ i ].length ( ) != 1 ) { res = "No" ; break ; } if ( i > 0 && s [ i ].charAt ( 0 ) != s [ i - 1 ].charAt ( s [ i - 1 ].length ( ) - 1 ) ) { res = "No" ; break ; } } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_579_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int x = 1 ; while ( n > 1 ) { int k = ( int ) ( Math.log ( n ) / Math.log ( 2 ) ) ; n -= ( int ) ( Math.pow ( 2 , k ) ) ; x ++ ; } System.out.println ( x ) ; } }
import java.util.Scanner ; public class codeforces_189_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int o = sc.nextInt ( ) ; int p = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int ans = 0 ; if ( a == b ) { if ( a == c ) { if ( a == d ) { if ( a == e ) { if ( a == f ) { if ( a == g ) { if ( a == h ) { if ( a == i ) { if ( a == j ) { if ( a == k ) { if ( a == l ) { if ( a == m ) { if ( a == n ) { if ( a == o ) { if ( a == p ) { if ( a == q ) { if ( a == r ) { if ( a == s ) { if ( a == t ) { if ( a == u ) { if ( a == v ) { if ( a == w ) { if ( a == x ) { if ( a == y ) { if ( a == z ) { ans = 1 ; } else { ans = 0 ; } } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ; } } else { ans = 0 ;
import java.util.Scanner ; public class atcoder_AGC037_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; if ( K >= 15 || 2 ** K >= N ) { System.out.println ( min ( S ) * N ) ; return ; } if ( K == 1 ) { System.out.println ( S ) ; return ; } int count = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == S.charAt ( 0 ) ) { count ++ ; } else { break ; } } if ( count * 2 ** ( K - 1 ) >= N ) { System.out.println ( S.charAt ( 0 ) * N ) ; return ; } S = S.charAt ( 0 ) + ( count * ( 2 ** ( K - 1 ) - 1 ) ) + S ; System.out.println ( S.substring ( 0 , N ) ) ; } static char min ( String S ) { char min = S.charAt ( 0 ) ; for ( int i = 1 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) < min ) { min = S.charAt ( i ) ; } } return min ; } }
import java.util.Scanner ; public class codeforces_222_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; if ( arr [ 0 ] == arr [ n - 1 ] ) { System.out.println ( 0 ) ; return ; } if ( k == 1 ) { System.out.println ( - 1 ) ; return ; } if ( arr [ k - 1 ] != arr [ n - 1 ] ) { System.out.println ( - 1 ) ; return ; } int target = arr [ n - 1 ] ; for ( int i = 0 ; i < k - 1 ; i ++ ) { if ( arr [ i ] == target ) { count ++ ; } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC165_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; int Q = sc.nextInt ( ) ; int [ ] a = new int [ Q ] ; int [ ] b = new int [ Q ] ; int [ ] c = new int [ Q ] ; int [ ] d = new int [ Q ] ; for ( int i = 0 ; i < Q ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } long ans = 0 ; for ( int i = 0 ; i < Q ; i ++ ) { for ( int j = a [ i ] ; j <= b [ i ] ; j ++ ) { if ( j == a [ i ] ) { if ( c [ i ] == 0 ) { ans += d [ i ] ; } } else if ( j == b [ i ] ) { if ( c [ i ] == 0 ) { ans += d [ i ] ; } } else { if ( c [ i ] == 0 ) { ans += d [ i ] ; } } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_203_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] [ ] count = new int [ n ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { count [ i ] [ j ] = 0 ; } } int ans = - 1 ; for ( int k = 0 ; k < m ; k ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; x -- ; y -- ; boolean found = false ; for ( int i = x - 2 ; i <= x + 1 ; i ++ ) { for ( int j = y - 2 ; j <= y + 1 ; j ++ ) { if ( i >= 0 && i < n && j >= 0 && j < n ) { count [ i ] [ j ] ++ ; if ( count [ i ] [ j ] == 9 ) { found = true ; } } } } if ( found ) { ans = k + 1 ; break ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC024_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] P = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { P [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( i == 0 || P [ i - 1 ] + 1 == P [ i ] ) { ans ++ ; } else { ans = Math.max ( ans , 1 ) ; } } System.out.println ( N - ans ) ; } }
import java.util.Scanner ; public class codeforces_287_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int [ ] [ ] t = new int [ 4 ] [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { t [ i ] [ j ] = sc.nextInt ( ) ; } } int black = 0 ; int white = 0 ; int correct = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { if ( t [ i ] [ j ] == 1 ) { black ++ ; } else { white ++ ; } if ( t [ i ] [ j + 1 ] == 1 ) { black ++ ; } else { white ++ ; } if ( t [ i + 1 ] [ j ] == 1 ) { black ++ ; } else { white ++ ; } if ( t [ i + 1 ] [ j + 1 ] == 1 ) { black ++ ; } else { white ++ ; } if ( black == 0 || black == 3 || white == 0 || white == 3 || white == 4 || black == 4 ) { correct = 1 ; break ; } black = 0 ; white = 0 ; } } if ( correct == 1 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class codeforces_37_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int tower = n ; int high = 1 ; int maximum = 1 ; for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ i ] == arr [ i - 1 ] ) { tower -- ; high ++ ; } else { if ( high > maximum ) { maximum = high ; } high = 1 ; } } if ( high > maximum ) { maximum = high ; } System.out.println ( maximum + " " + tower ) ; } }
import java.util.Scanner ; public class atcoder_AGC006_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int X = sc.nextInt ( ) ; if ( X == 1 || X == N * 2 - 1 ) { System.out.println ( "No" ) ; } else { System.out.println ( "Yes" ) ; if ( X == N * 2 - 2 ) { for ( int i = N - 1 ; i <= X + 2 ; i ++ ) { System.out.println ( i ) ; } for ( int i = 1 ; i < N - 1 ; i ++ ) { System.out.println ( i ) ; } } else { int [ ] ys = new int [ N * 2 ] ; for ( int i = 1 ; i <= N * 2 ; i ++ ) { ys [ i - 1 ] = i ; } int [ ] xs = new int [ N * 2 - 3 ] ; for ( int i = 0 ; i < N - 3 ; i ++ ) { xs [ i ] = ys [ i ] ; } xs [ N - 3 ] = X + 2 ; xs [ N - 2 ] = X - 1 ; xs [ N - 1 ] = X ; xs [ N ] = X + 1 ; for ( int i = N + 1 ; i < N * 2 ; i ++ ) { xs [ i - N ] = ys [ i ] ; } for ( int x : xs ) { System.out.println ( x ) ; } } } } }
import java.util.Scanner ; public class codeforces_632_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; s [ i ] = sc.next ( ) ; } int pScore = 0 ; int sScore = 0 ; int pMaxScore = 0 ; int sMaxScore = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ].equals ( "B" ) ) { pScore += a [ i ] ; if ( pScore > pMaxScore ) { pMaxScore = pScore ; } } else { pScore -= a [ i ] ; } } for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( s [ i ].equals ( "A" ) ) { sScore += a [ i ] ; if ( sScore > sMaxScore ) { sMaxScore = sScore ; } } else { sScore -= a [ i ] ; } } if ( pMaxScore > sMaxScore ) { System.out.println ( pMaxScore ) ; } else { System.out.println ( sMaxScore ) ; } } }
import java.util.Scanner ; public class codeforces_110_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = "" ; for ( int i = 0 ; i < n ; i ++ ) { s += "abcd" [ i % 4 ] ; } System.out.println ( s ) ; } }
[INST:perfect]  
import sys
input = sys.stdin.readline
n = int ( input ( ) )
w = list ( map ( int , input ( ).split ( ) ) )
x = sum ( w )
d = []
for i in range ( n ) :
    if ( x - w [ i ] ) / ( n - 1 ) == w [ i ] :
        d.append ( i + 1 )
print ( len ( d ) )
print ( ' '.join ( map ( str , d ) ) )
import java.util.Scanner ; public class atcoder_AGC034_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int A = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == 'A' ) { A ++ ; } else if ( S.charAt ( i ) == 'B' ) { if ( i < S.length ( ) - 1 && S.charAt ( i + 1 ) == 'C' ) { A ++ ; i ++ ; } else { A = 0 ; } } else { A = 0 ; } } System.out.println ( A ) ; } }
import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; if ( S.length ( ) != T.length ( ) ) { System.out.println ( "No" ) ; } else { int [ ] countS = new int [ 26 ] ; int [ ] countT = new int [ 26 ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { countS [ S.charAt ( i ) - 'a' ] ++ ; countT [ T.charAt ( i ) - 'a' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) { if ( countS [ i ] != countT [ i ] ) { System.out.println ( "No" ) ; return ; } } System.out.println ( "Yes" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC123_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int o = sc.nextInt ( ) ; int p = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int sum = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z ; System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_AGC025_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a = 10 ; int b = 100 ; int c = 1000 ; int d = 10000 ; int e = 100000 ; if ( n == a || n == b || n == c || n == d || n == e ) { System.out.println ( 10 ) ; } else { int sum = 0 ; while ( n > 0 ) { sum += n % 10 ; n /= 10 ; } System.out.println ( sum ) ; } } }
import java.util.Scanner ; public class atcoder_ABC108_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x1 = sc.nextInt ( ) ; int y1 = sc.nextInt ( ) ; int x2 = sc.nextInt ( ) ; int y2 = sc.nextInt ( ) ; int DIF1 = x2 - x1 ; int DIF2 = y2 - y1 ; int x3 = x2 - DIF2 ; int y3 = y2 + DIF1 ; int x4 = x1 - DIF2 ; int y4 = y1 + DIF1 ; System.out.println ( x3 + " " + y3 + " " + x4 + " " + y4 ) ; } }
import java.util.Scanner ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int total = 0 ; for ( int i = 0 ; i < n ; i ++ ) { total ^= a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( a [ i ] ^ total + " " ) ; } } }
import java.util.Scanner ; public class codeforces_445_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; char [ ] [ ] s = new char [ n ] [ m ] ; for ( int i = 0 ; i < n ; i ++ ) { String str = sc.next ( ) ; for ( int j = 0 ; j < m ; j ++ ) { s [ i ] [ j ] = str.charAt ( j ) ; } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( s [ i ] [ j ] == '.' ) { if ( ( i + j ) % 2 == 1 ) { s [ i ] [ j ] = 'W' ; } else { s [ i ] [ j ] = 'B' ; } } } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { System.out.print ( s [ i ] [ j ] ) ; } System.out.println ( ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC143_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } Arrays.sort ( a ) ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { int x = a [ i ] , y = a [ j ] ; int left = Math.max ( 0 , Math.max ( x - y , y - x ) ) ; int right = Math.min ( n , x + y ) ; int tmp = right - left ; if ( left <= i && i < right ) { tmp -- ; } if ( left <= j && j < right ) { tmp -- ; } ans += tmp ; } } System.out.println ( ans / 3 ) ; } }
[java]
import java.util.Scanner ; public class codeforces_30_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int x = 0 ; for ( int i = - 1000 ; i <= 1000 ; i ++ ) { x = i ; if ( a * ( x * x * x ) == b ) { break ; } } if ( x * x * x == b ) { System.out.println ( x ) ; } else { System.out.println ( "No solution" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC142_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } Arrays.sort ( A ) ; for ( int i = 0 ; i < N - 1 ; i ++ ) { System.out.print ( A [ i ] + " " ) ; } System.out.println ( A [ N - 1 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC171_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } Arrays.sort ( arr ) ; int sum = 0 ; for ( int i = 0 ; i < k ; i ++ ) { sum += arr [ i ] ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC107_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = n * ( n + 1 ) / 4 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] d = new int [ 100001 ] ; int c = 0 ; for ( int i = 0 ; i < 100001 ; i ++ ) { d [ i ] = - 1 ; } for ( int i = 0 ; i < n ; i ++ ) { if ( d [ a [ i ] ] == - 1 ) { d [ a [ i ] ] = ++ c ; } } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = d [ a [ i ] ] ; } int [ ] bit = new int [ 100001 ] ; for ( int i = 0 ; i < 100001 ; i ++ ) { bit [ i ] = 0 ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += bit [ b [ i ] ] ; bit [ b [ i ] ] ++ ; } if ( ans >= m ) { System.out.println ( d [ b [ 0 ] ] ) ; } else { System.out.println ( d [ b [ n - 1 ] ] ) ; } } }
import java.util.Scanner ; public class codeforces_106_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] [ 0 ] = sc.nextInt ( ) ; arr [ i ] [ 1 ] = sc.nextInt ( ) ; arr [ i ] [ 2 ] = sc.nextInt ( ) ; arr [ i ] [ 3 ] = sc.nextInt ( ) ; } int [ ] outdated = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ i ] [ 0 ] < arr [ j ] [ 0 ] && arr [ i ] [ 1 ] < arr [ j ] [ 1 ] && arr [ i ] [ 2 ] < arr [ j ] [ 2 ] ) { outdated [ i ] ++ ; } } } int min = 100000 ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( outdated [ i ] == 0 && arr [ i ] [ 3 ] < min ) { min = arr [ i ] [ 3 ] ; ans = i + 1 ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC002_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; if ( a > 0 ) { System.out.println ( "Positive" ) ; } else if ( a <= 0 && b >= 0 ) { System.out.println ( "Zero" ) ; } else if ( ( a + b ) % 2 == 0 ) { System.out.println ( "Negative" ) ; } else { System.out.println ( "Positive" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC140_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; int seg_cnt = 0 ; for ( int i = 0 ; i < N - 1 ; i ++ ) { if ( S.charAt ( i ) != S.charAt ( i + 1 ) ) { seg_cnt ++ ; } } int cur_happy = N - 1 - seg_cnt ; int ans = 0 ; if ( 2 * K >= seg_cnt ) { ans = N - 1 ; } else { ans = cur_happy + 2 * K ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC167_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int [ ] [ ] c = new int [ n ] [ m + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m + 1 ; j ++ ) { c [ i ] [ j ] = sc.nextInt ( ) ; } } int [ ] pre = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { pre [ i ] = i ; } List < Integer > [ ] l = new ArrayList < > ( ) ; List < Integer > rem = new ArrayList < > ( ) ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 0 ; j < i ; j ++ ) { l.add ( new ArrayList < > ( ) ) ; for ( int k = 0 ; k < pre.length ; k ++ ) { if ( ( i - 1 ) & 1 == 0 ) { if ( ( j & 1 ) == 0 ) { l.get ( l.size ( ) - 1 ).add ( pre [ k ] ) ; } } else { if ( ( j & 1 ) == 1 ) { l.get ( l.size ( ) - 1 ).add ( pre [ k ] ) ; } } } } } for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 0 ; j < l.size ( ) ; j ++ ) { int ca = 0 ; for ( int k : l.get ( j ) ) { ca += c [ k ] [ i ] ; } if ( ca < x ) { rem.add ( 0 , j ) ; } } if ( rem.size ( ) > 0 ) { for ( int j : rem ) { l.remove ( j ) ; } rem.clear ( ) ; } if ( l.size ( ) == 0 ) { System.out.println ( - 1 ) ; break ; } } } for ( int i = 0 ; i < l.size ( ) ; i ++ ) { int ca = 0 ; for ( int j : l.get ( i ) ) { ca += c [ j ] [ 0 ] ; } if ( ans == 0 ) { ans = ca ; } else { ans = Math.min ( ans , ca ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC143_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = a - 2 * b ; if ( ans < 0 ) { ans = 0 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC139_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int hole = 1 ; int i = 0 ; boolean check = true ; while ( check ) { if ( hole >= b ) { check = false ; } else { hole = a * ( i + 1 ) - i ; i ++ ; } } System.out.println ( i ) ; } }
import java.util.Scanner ; public class atcoder_ABC124_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { c += Math.max ( a , b ) ; if ( a >= b ) { a -- ; } else { b -- ; } } System.out.println ( c ) ; } }
import java.util.Scanner ; public class codeforces_25_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 1 ) { count ++ ; } } if ( count == 1 ) { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 1 ) { System.out.println ( i + 1 ) ; break ; } } } else { for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % 2 == 0 ) { System.out.println ( i + 1 ) ; break ; } } } } } }
import java.util.Scanner ; public class codeforces_282_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int total = 0 ; String memory = "" ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; if ( total + a <= 500 ) { total += a ; memory += "A" ; } else { total -= g ; memory += "G" ; } } System.out.println ( memory ) ; } }
import java.util.Scanner ; public class atcoder_ABC169_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = a * b / 100 ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_350_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] t = new int [ n + 1 ] ; int [ ] a = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { t [ i ] = sc.nextInt ( ) ; } for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] ans = new int [ n + 1 ] ; int [ ] cnt = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { cnt [ a [ i ] ] ++ ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( t [ i ] == 1 ) { int crt = i ; int x = a [ i ] ; while ( cnt [ x ] == 1 ) { crt = crt + x ; x = a [ x ] ; } if ( crt.length > ans.length ) { ans = crt ; } } } ans = ans.reverse ( ) ; System.out.println ( ans.length ) ; for ( int i = 0 ; i < ans.length ; i ++ ) { System.out.print ( ans [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC142_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( i + 1 ) % 2 == 1 ) { t ++ ; } } double ans = t / ( double ) n ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_333_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n * 2 ] ; for ( int i = 0 ; i < n * 2 ; i ++ ) { a [ i ] = 1 ; } a [ 0 ] = a [ n - 1 ] = a [ n ] = a [ 2 * n - 1 ] = 0 ; for ( int i = 0 ; i < m ; i ++ ) { int r = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; a [ r - 1 ] = a [ n + c - 1 ] = 0 ; } if ( n % 2 == 1 && a [ n / 2 ] == 1 && a [ n + n / 2 ] == 1 ) { a [ n / 2 ] = 0 ; } System.out.println ( sum ( a ) ) ; } public static int sum ( int [ ] a ) { int s = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { s += a [ i ] ; } return s ; } }
import java.util.Scanner ; public class atcoder_ABC166_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] h = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { h [ i ] = sc.nextInt ( ) ; } int [ ] [ ] path = new int [ n + 1 ] [ m + 1 ] ; for ( int i = 1 ; i <= m ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; path [ a ] [ i ] = b ; path [ b ] [ i ] = a ; } int c = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int f = 0 ; for ( int j = 1 ; j <= m ; j ++ ) { if ( h [ i ] <= h [ path [ i ] [ j ] ] ) { f = 1 ; break ; } } if ( f == 0 ) { c ++ ; } } System.out.println ( c ) ; } }
import java.util.Scanner ; public class codeforces_79_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = 0 ; while ( x >= 0 && y >= 22 || x >= 1 && y >= 12 || x >= 2 && y >= 2 ) { if ( a == 0 ) { if ( x >= 2 && y >= 2 ) { x -= 2 ; y -= 2 ; } else if ( x >= 1 && y >= 12 ) { x -= 1 ; y -= 12 ; } else { y -= 22 ; } } else { if ( y >= 22 ) { y -= 22 ; } else if ( x >= 1 && y >= 12 ) { x -= 1 ; y -= 12 ; } else { x -= 2 ; y -= 2 ; } } a = 1 - a ; } System.out.println ( a == 0 ? "Ciel" : "Hanako" ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_AGC004_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 1 ) { continue ; } int cnt = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( a [ j ] == a [ i ] ) { cnt ++ ; } } if ( cnt == k ) { ans ++ ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC174_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int t = 0 ; for ( int i = 1 ; i <= k ; i ++ ) { t = ( t % k ) * 10 + 7 ; if ( t % k == 0 ) { System.out.println ( i ) ; break ; } } if ( i > k ) { System.out.println ( - 1 ) ; } } }
import java.util.Scanner ; public class codeforces_67_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int m = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ j ] == 0 ) { System.out.print ( j + 1 + " " ) ; break ; } } for ( int j = 0 ; j < j + 1 - k ; j ++ ) { arr [ j ] -- ; } arr [ j ] -- ; } } } }
import java.util.Scanner ; public class atcoder_ABC168_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; double C = Math.abs ( 360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m ) ; if ( C > 180 ) { C = 360 - C ; } double cosC = Math.cos ( Math.toRadians ( C ) ) ; double ans = Math.sqrt ( a * a + b * b - 2 * a * b * cosC ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_354_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int L = sc.nextInt ( ) ; int R = sc.nextInt ( ) ; int QL = sc.nextInt ( ) ; int QR = sc.nextInt ( ) ; int [ ] W = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { W [ i ] = sc.nextInt ( ) ; } int [ ] sum_el = new int [ n + 1 ] ; sum_el [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum_el [ i ] = W [ i - 1 ] + sum_el [ i - 1 ] ; } int answer = QR * ( n - 1 ) + sum_el [ n ] * R ; for ( int i = 1 ; i <= n ; i ++ ) { int energy = L * sum_el [ i ] + R * ( sum_el [ n ] - sum_el [ i ] ) ; if ( i > n - i ) { energy += ( i - ( n - i ) - 1 ) * QL ; } else if ( n - i > i ) { energy += ( n - i - i - 1 ) * QR ; } if ( energy < answer ) { answer = energy ; } } System.out.println ( answer ) ; } }
import java.util.Scanner ; public class codeforces_49_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; char [ ] vowels = { 'a' , 'e' , 'i' , 'o' , 'u' , 'y' , 'A' , 'E' , 'I' , 'O' , 'U' , 'Y' } ; for ( int i = S.length ( ) - 1 ; i >= 0 ; i -- ) { if ( S.charAt ( i ) == ' ' || S.charAt ( i ) == '?' ) continue ; if ( vowels [ ] contains ( S.charAt ( i ) ) ) { System.out.println ( "YES" ) ; break ; } else { System.out.println ( "NO" ) ; break ; } } } }
import java.util.Scanner ; public class atcoder_ABC168_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; if ( S.length ( ) <= K ) { System.out.println ( S ) ; } else { System.out.println ( S.substring ( 0 , K ) + "..." ) ; } } }
import java.util.Scanner ; public class atcoder_ABC149_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int X = sc.nextInt ( ) ; boolean [ ] prime = new boolean [ 100010 ] ; prime [ 0 ] = false ; prime [ 1 ] = false ; for ( int i = 4 ; i < 100010 ; i += 2 ) { prime [ i ] = false ; } int i = 3 ; while ( i * i <= 100008 ) { if ( prime [ i ] ) { for ( int j = i + i ; j <= 100008 ; j += i ) { prime [ j ] = false ; } } i += 2 ; } for ( int i = X ; i < 100008 ; i ++ ) { if ( prime [ i ] ) { System.out.println ( i ) ; break ; } } } } }
import java.util.Scanner ; public class codeforces_302_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; String s = sc.next ( ) ; int sa = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '-' ) sa ++ ; } sa = Math.min ( sa , n - sa ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < m ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; b = b - a ; sb.append ( ( b % 2 == 0 && b <= sa * 2 ) ? "1\n" : "0\n" ) ; } System.out.println ( sb ) ; } }
import java.util.Scanner ; public class codeforces_58_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; for ( int i = n ; i > 0 ; i -- ) { if ( n % i == 0 ) { n = i ; System.out.print ( i + " " ) ; } } } }
import java.util.Scanner ; public class atcoder_AGC028_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int [ ] list_S = new int [ S.length ( ) ] ; int [ ] list_T = new int [ T.length ( ) ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { list_S [ i ] = S.charAt ( i ) - 'a' + 1 ; } for ( int i = 0 ; i < T.length ( ) ; i ++ ) { list_T [ i ] = T.charAt ( i ) - 'a' + 1 ; } int [ ] Number_i = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Number_i [ i ] = i ; } int [ ] Number_iMN = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Number_iMN [ i ] = ( i * M ) / N ; } int [ ] Number_j = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Number_j [ i ] = i ; } int [ ] Kaburi_j = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Kaburi_j [ i ] = Number_iMN [ i ] ; } int [ ] Kaburi_i = new int [ M ] ; for ( int i = 0 ; i < M ; i ++ ) { Kaburi_i [ i ] = ( Kaburi_j [ i ] * N ) / M ; } int counter = 0 ; int Flag = 0 ; int Kaburi_Size = M ; while ( counter < Kaburi_Size ) { if ( list_S [ Kaburi_i [ counter ] ] == list_T [ Kaburi_j [ counter ] ] ) { counter ++ ; } else { Flag = 1 ; break ; } } if ( Flag == 1 ) { System.out.println ( - 1 ) ; } else { System.out.println ( ( N * M ) / gcd ( N , M ) ) ; } } public static int gcd ( int a , int b ) { while ( b > 0 ) { int temp = b ; b = a % b ; a = temp ; } return a ; } }
import java.util.Scanner ; public class codeforces_56_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int mn = N + 1 ; int mx = - 1 ; for ( int i = 0 ; i < N ; i ++ ) { if ( i + 1 != A [ i ] ) { mn = Math.min ( mn , i ) ; mx = Math.max ( mx , i ) ; } } if ( mx == - 1 ) { System.out.println ( "0 0" ) ; } else { A = A [ 0 ] + A [ 1 ] + A [ 2 ] + A [ 3 ] ; if ( sorted ( A ) == A ) { System.out.println ( mn + 1 + " " + mx + 1 ) ; } else { System.out.println ( "0 0" ) ; } } } public static int [ ] sorted ( int [ ] A ) { int [ ] B = new int [ A.length ] ; for ( int i = 0 ; i < A.length ; i ++ ) { B [ i ] = A [ i ] ; } for ( int i = 0 ; i < B.length ; i ++ ) { for ( int j = i + 1 ; j < B.length ; j ++ ) { if ( B [ i ] > B [ j ] ) { int temp = B [ i ] ; B [ i ] = B [ j ] ; B [ j ] = temp ; } } } return B ; } }
import java.util.Scanner ; public class codeforces_99_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; if ( a == 9 && b == 1 ) { System.out.println ( "GOTO Vasilisa." ) ; } else if ( a != 9 && b < 5 ) { System.out.println ( a + "" + b ) ; } else { System.out.println ( ( a + 1 ) + "" + b ) ; } } }
import java.util.Scanner ; public class codeforces_412_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; String v = sc.next ( ) ; String [ ] d = { "LEFT" , "RIGHT" } ; boolean f = k - 1 < n - k ; int m = Math.min ( k - 1 , n - k ) ; String [ ] a = new String [ m + v.length ( ) ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = d [ f ? 1 : 0 ] ; } for ( int i = 0 ; i < v.length ( ) ; i ++ ) { a [ m + i ] = "PRINT " + v.charAt ( v.length ( ) - i - 1 ) ; a [ m + i + 1 ] = d [ f ? 0 : 1 ] ; } for ( int i = 0 ; i < a.length - 1 ; i ++ ) { System.out.println ( a [ i ] ) ; } } }
import java.util.Scanner ; public class codeforces_86_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = 0 ; for ( int i = a ; i <= b ; i ++ ) { int rev = 0 ; for ( int j = i ; j > 0 ; j /= 10 ) { rev = rev * 10 + 9 - j % 10 ; } if ( i >= a && i <= b ) { ans = Math.max ( ans , rev * i ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC128_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { for ( int j = 0 ; j <= n ; j ++ ) { for ( int k = 0 ; k <= n ; k ++ ) { if ( i + j + k == n ) { int x = 0 ; int y = 0 ; int z = 0 ; for ( int l = 0 ; l < m ; l ++ ) { if ( a [ l ] == 1 ) { x ++ ; } else if ( a [ l ] == 2 ) { y ++ ; } else { z ++ ; } } if ( x == b [ l ] ) { ans ++ ; } else if ( y == b [ l ] ) { ans ++ ; } else if ( z == b [ l ] ) { ans ++ ; } } } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC004_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long x = sc.nextLong ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextLong ( ) ; } long [ ] [ ] b = new long [ n ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { int k = i - j ; if ( k < 0 ) { k += n ; } b [ j ] [ i ] = Math.min ( a [ k ] , b [ j ] [ i ] ) ; } } long ans = ( long ) 1e15 ; for ( int i = 0 ; i < n ; i ++ ) { ans = Math.min ( ans , sum ( b [ i ] ) + x * i ) ; } System.out.println ( ans ) ; } private static long sum ( long [ ] a ) { long s = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { s += a [ i ] ; } return s ; } }
import java.util.Scanner ; public class atcoder_ABC150_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } int mod = 1000000007 ; int b = 1 ; for ( int i = 0 ; i < 2 * n - 2 ; i ++ ) { b = ( b * 2 ) % mod ; } int a = 2 * b % mod ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += c [ i ] * ( a + i * b ) ; ans %= mod ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_456_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] [ 0 ] = sc.nextInt ( ) ; arr [ i ] [ 1 ] = sc.nextInt ( ) ; } int max = arr [ 0 ] [ 1 ] ; for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ i ] [ 1 ] > max ) { System.out.println ( "Happy Alex" ) ; return ; } max = Math.max ( max , arr [ i ] [ 1 ] ) ; } System.out.println ( "Poor Alex" ) ; } }
import java.util.Scanner ; public class codeforces_598_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; for ( int i = 0 ; i < t ; i ++ ) { int n = sc.nextInt ( ) ; int s = ( 1 + n ) * n / 2 ; int t = 1 ; while ( t <= n ) { s -= 2 * t ; t *= 2 ; } System.out.println ( s ) ; } } }
import java.util.Scanner ; public class atcoder_AGC027_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int X = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] S = new int [ N + 1 ] ; S [ 0 ] = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { S [ i ] = S [ i - 1 ] + A [ i - 1 ] ; } long ans = ( long ) ( 1e18 ) ; for ( int k = 1 ; k <= N ; k ++ ) { long E = ( long ) ( k * X + 2 * ( S [ N - 2 * k ] + S [ N - k ] ) ) ; ans = Math.min ( ans , E ) ; } System.out.println ( ans + N * X + 5 * S [ N ] ) ; } }
import java.util.Scanner ; public class codeforces_408_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int o = sc.nextInt ( ) ; int p = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int sum = a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z ; System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_AGC006_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; char [ ] s = sc.next ( ).toCharArray ( ) ; char [ ] t = sc.next ( ).toCharArray ( ) ; if ( s [ 0 ] == t [ 0 ] ) { System.out.println ( n ) ; } else { int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n - i ; j ++ ) { if ( s [ i + j ] != t [ j ] ) break ; if ( j == n - i - 1 ) cnt = n - i ; } } System.out.println ( 2 * n - cnt ) ; } } }
import java.util.Scanner ; public class atcoder_AGC043_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 1 ) { res ++ ; } } if ( res % 2 == 1 ) { System.out.println ( 1 ) ; } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class codeforces_31_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) continue ; for ( int k = 0 ; k < n ; k ++ ) { if ( arr [ k ] != arr [ j ] && arr [ k ] != arr [ i ] && arr [ k ] == arr [ i ] + arr [ j ] ) { System.out.println ( k + 1 + " " + j + 1 + " " + i + 1 ) ; return ; } } } } System.out.println ( - 1 ) ; } }
import java.util.Scanner ; public class atcoder_AGC011_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] vis = new int [ n + 1 ] ; int ci = 0 , cb = 0 , cc = 0 ; int [ ] [ ] g = new int [ n + 1 ] [ ] ; for ( int i = 0 ; i < m ; i ++ ) { int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; g [ u ] [ 0 ] ++ ; g [ v ] [ 0 ] ++ ; g [ u ] [ g [ u ] [ 0 ] ] = v ; g [ v ] [ g [ v ] [ 0 ] ] = u ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( vis [ i ] == 0 ) { if ( g [ i ] [ 0 ] == 0 ) ci ++ ; else if ( dfs ( i ) ) cb ++ ; else cc ++ ; } } long ans = ci * ci + 2 * ci * ( n - ci ) + cc * cc + 2 * cb * cc + 2 * cb * cb ; System.out.println ( ans ) ; } static boolean dfs ( int x ) { Queue < Integer > q = new LinkedList < > ( ) ; q.add ( x ) ; boolean flag = true ; while ( ! q.isEmpty ( ) ) { int u = q.poll ( ) ; if ( vis [ u ] != 0 ) { flag &= vis [ u ] == 1 ; continue ; } vis [ u ] = 1 ; for ( int i = 1 ; i <= g [ u ] [ 0 ] ; i ++ ) q.add ( g [ u ] [ i ] ) ; } return flag ; } }
import java.util.Scanner ; public class atcoder_ABC125_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] left = new int [ n + 1 ] ; int [ ] right = new int [ n + 1 ] ; left [ 0 ] = 0 ; right [ n ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { left [ i + 1 ] = Math.max ( left [ i ] , a [ i ] ) ; } for ( int i = n - 1 ; i >= 0 ; i -- ) { right [ i ] = Math.max ( right [ i + 1 ] , a [ i ] ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans = Math.max ( ans , Math.min ( left [ i ] , right [ i + 1 ] ) ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC007_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; double ret = 0 ; for ( int i = 0 ; i < N ; i ++ ) { ret += d + ( N - 0.5 ) * x ; d += d / N + 5 * x / ( 2 * N ) ; x += 2 * x / N ; } System.out.println ( ret ) ; } }
import java.util.Scanner ; public class codeforces_459_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int min = arr [ 0 ] ; int max = arr [ n - 1 ] ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] == min ) { count ++ ; } } if ( min == max ) { System.out.println ( min + " " + n * ( n - 1 ) / 2 ) ; } else { System.out.println ( min + " " + count * ( n - count ) ) ; } } }
import java.util.Scanner ; public class atcoder_ABC125_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] V = new int [ N ] ; int [ ] C = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { V [ i ] = sc.nextInt ( ) ; C [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( V [ i ] - C [ i ] > 0 ) { ans += V [ i ] - C [ i ] ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC043_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String ans = "" ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char c = S.charAt ( i ) ; if ( c == '0' || c == '1' ) { ans += c ; } else if ( c == 'B' && ans.length ( ) != 0 ) { ans = ans.substring ( 0 , ans.length ( ) - 1 ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int total = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { total += i * k ; } if ( total > n ) { System.out.println ( total - n ) ; } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class codeforces_231_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c1 = sc.nextInt ( ) ; if ( a + b + c1 > 1 ) c ++ ; } System.out.println ( c ) ; } }
import java.util.Scanner ; public class atcoder_AGC033_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int h = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int [ ] [ ] graph = new int [ h ] [ w ] ; for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { graph [ i ] [ j ] = sc.next ( ).equals ( "#" ) ? 0 : Integer.MAX_VALUE ; } } for ( int i = 0 ; i < w - 1 ; i ++ ) { for ( int j = 0 ; j < h ; j ++ ) { graph [ j ] [ i + 1 ] = Math.min ( graph [ j ] [ i ] + 1 , graph [ j ] [ i + 1 ] ) ; } } for ( int i = w - 1 ; i > 0 ; i -- ) { for ( int j = 0 ; j < h ; j ++ ) { graph [ j ] [ i - 1 ] = Math.min ( graph [ j ] [ i ] + 1 , graph [ j ] [ i - 1 ] ) ; } } for ( int i = 0 ; i < h - 1 ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { graph [ i + 1 ] [ j ] = Math.min ( graph [ i ] [ j ] + 1 , graph [ i + 1 ] [ j ] ) ; } } for ( int i = h - 1 ; i > 0 ; i -- ) { for ( int j = 0 ; j < w ; j ++ ) { graph [ i - 1 ] [ j ] = Math.min ( graph [ i ] [ j ] + 1 , graph [ i - 1 ] [ j ] ) ; } } int ans = 0 ; for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { ans = Math.max ( ans , graph [ i ] [ j ] ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC127_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int r = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; for ( int i = 2 ; i <= 12 ; i ++ ) { System.out.println ( ( int ) ( Math.pow ( r , i - 1 ) * ( x + D / ( 1 - r ) ) - D / ( 1 - r ) ) ) ; } } }
import java.util.Scanner ; public class atcoder_AGC038_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int H = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; for ( int i = 0 ; i < H ; i ++ ) { for ( int j = 0 ; j < W ; j ++ ) { if ( i < B ) { if ( j < A ) { System.out.print ( 0 ) ; } else { System.out.print ( 1 ) ; } } else { if ( j < A ) { System.out.print ( 1 ) ; } else { System.out.print ( 0 ) ; } } } System.out.println ( ) ; } } }
import java.util.Scanner ; public class codeforces_500_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int [ ] s = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.nextInt ( ) ; } int currentCell = 0 ; while ( currentCell <= t ) { currentCell += s [ currentCell - 1 ] ; if ( currentCell == t ) { System.out.println ( "YES" ) ; return ; } } System.out.println ( "NO" ) ; } }
import java.util.Scanner ; public class atcoder_ABC155_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int ll = - ( int ) 1e18 - 1 ; int rr = ( int ) 1e18 + 1 ; while ( ll + 1 < rr ) { int x = ( ll + rr ) / 2 ; int tot = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( A [ i ] < 0 ) { int l = - 1 ; int r = N ; while ( l + 1 < r ) { int c = ( l + r ) / 2 ; if ( A [ i ] * A [ c ] < x ) { r = c ; } else { l = c ; } } tot += N - r ; } else { int l = - 1 ; int r = N ; while ( l + 1 < r ) { int c = ( l + r ) / 2 ; if ( A [ i ] * A [ c ] < x ) { l = c ; } else { r = c ; } } tot += r ; } if ( A [ i ] * A [ i ] < x ) { tot -- ; } } tot /= 2 ; if ( tot < K ) { ll = x ; } else { rr = x ; } } System.out.println ( ll ) ; } }
import java.util.Scanner ; public class atcoder_ABC147_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long [ ] A = new long [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextLong ( ) ; } long ans = 0 ; for ( int b = 0 ; b < 60 ; b ++ ) { int bs = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ( A [ i ] >> b ) % 2 == 1 ) { bs ++ ; } } ans = ( ans + bs * ( N - bs ) * ( 1L << b ) ) % 1000000007 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC046_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int gcd = gcd ( 360 , x ) ; System.out.println ( 360 / gcd ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } }
import java.util.Scanner ; public class codeforces_596_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] r = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { r [ i ] = sc.nextInt ( ) ; } int ans = Math.abs ( r [ 0 ] ) ; for ( int i = 1 ; i < n ; i ++ ) { ans += Math.abs ( r [ i ] - r [ i - 1 ] ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_171_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int x = Math.max ( String.valueOf ( a ).length ( ) , String.valueOf ( b ).length ( ) ) ; StringBuffer sb = new StringBuffer ( ) ; int carry = 0 ; for ( int i = 0 ; i < x ; i ++ ) { int sum = carry + ( a % 10 ) + ( b % 10 ) ; sb.append ( sum % 10 ) ; carry = sum / 10 ; a /= 10 ; b /= 10 ; } if ( carry == 1 ) { sb.append ( 1 ) ; } System.out.println ( Integer.parseInt ( sb.reverse ( ).toString ( ) ) ) ; } }
import java.util.Scanner ; public class codeforces_276_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int [ ] count = new int [ 26 ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { count [ S.charAt ( i ) - 'a' ] ++ ; } int ans = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { if ( count [ i ] % 2 == 1 ) { ans ++ ; } } if ( ans == 0 ) { if ( S.length ( ) % 2 == 0 ) { System.out.println ( "Second" ) ; } else { System.out.println ( "First" ) ; } } else if ( ans == 1 ) { if ( S.length ( ) % 2 == 0 ) { System.out.println ( "First" ) ; } else { System.out.println ( "Second" ) ; } } else { System.out.println ( "First" ) ; } } }
import java.util.Scanner ; public class codeforces_617_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String a = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < a.length ( ) ; i ++ ) { if ( a.charAt ( i ) == '1' ) { count ++ ; } } if ( count == 0 ) { System.out.println ( 0 ) ; } else { int res = 1 ; for ( int i = 0 ; i < a.length ( ) ; i ++ ) { if ( a.charAt ( i ) == '0' ) { res *= 2 ; } } System.out.println ( res ) ; } } }
import java.util.Scanner ; public class codeforces_55_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; String s = sc.next ( ) ; int ans = 10000000000000000000000000 ; if ( s.charAt ( 0 ) == '+' ) { ans = a + b ; } else if ( s.charAt ( 0 ) == '*' ) { ans = a * b ; } if ( s.charAt ( 1 ) == '+' ) { ans += c ; } else if ( s.charAt ( 1 ) == '*' ) { ans *= c ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC178_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int ans = Math.max ( a * c , b * d ) ; ans = Math.max ( ans , a * d ) ; ans = Math.max ( ans , b * c ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC164_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; if ( x <= k ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_242_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int id = 0 ; for ( int i = 1 ; i < n ; i ++ ) { int li = sc.nextInt ( ) ; int ri = sc.nextInt ( ) ; if ( li <= l && r <= ri ) { id = i ; } else if ( li < l || r < ri ) { id = n ; } l = Math.min ( l , li ) ; r = Math.max ( r , ri ) ; } System.out.println ( id == n ? - 1 : id + 1 ) ; } }
import java.util.Scanner ; public class atcoder_ABC132_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int [ ] count = new int [ 26 ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { count [ S.charAt ( i ) - 'a' ] ++ ; } boolean flag = true ; for ( int i = 0 ; i < 26 ; i ++ ) { if ( count [ i ] != 0 && count [ i ] != 2 ) { flag = false ; break ; } } if ( flag ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC169_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; if ( n == 1 ) { System.out.println ( 0 ) ; return ; } int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ i ] == arr [ j ] ) { x ++ ; } } ans += x ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC126_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = a [ i ] + b [ i ] ; } int [ ] d = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { d [ i ] = c [ i ] % 2 ; } for ( int i = 0 ; i < n ; i ++ ) { if ( d [ i ] == 0 ) { System.out.println ( 0 ) ; } else { System.out.println ( 1 ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC129_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int mod = 1000000007 ; int n = sc.nextInt ( ) ; int [ ] [ ] dp = new int [ n + 1 ] [ 2 ] ; dp [ 0 ] [ 0 ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { char c = sc.next ( ).charAt ( 0 ) ; if ( c == '0' ) { dp [ i + 1 ] [ 0 ] += dp [ i ] [ 0 ] ; dp [ i + 1 ] [ 1 ] += dp [ i ] [ 1 ] * 3 ; } else { dp [ i + 1 ] [ 0 ] += dp [ i ] [ 0 ] * 2 ; dp [ i + 1 ] [ 1 ] += dp [ i ] [ 0 ] ; dp [ i + 1 ] [ 1 ] += dp [ i ] [ 1 ] * 3 ; } dp [ i + 1 ] [ 0 ] %= mod ; dp [ i + 1 ] [ 1 ] %= mod ; } System.out.println ( ( dp [ n ] [ 0 ] + dp [ n ] [ 1 ] ) % mod ) ; } }
import java.util.Scanner ; public class codeforces_678_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int d = 0 ; int ans = 0 ; while ( true ) { if ( n % 400 == 0 || ( n % 4 == 0 && n % 100 != 0 ) ) { if ( d == 0 ) { d = 1 ; n ++ ; } else if ( d == 1 ) { d = 2 ; n ++ ; } else if ( d == 2 ) { d = 3 ; n ++ ; } else if ( d == 3 ) { d = 4 ; n ++ ; } else if ( d == 4 ) { d = 5 ; n ++ ; } else if ( d == 5 ) { d = 6 ; n ++ ; } else if ( d == 6 ) { d = 0 ; n ++ ; } } else { if ( d == 0 ) { d = 2 ; n ++ ; } else if ( d == 1 ) { d = 3 ; n ++ ; } else if ( d == 2 ) { d = 4 ; n ++ ; } else if ( d == 3 ) { d = 5 ; n ++ ; } else if ( d == 4 ) { d = 6 ; n ++ ; } else if ( d == 5 ) { d = 0 ; n ++ ; } else if ( d == 6 ) { d = 1 ; n ++ ; } } if ( d == 0 && ans == 0 && ( n % 400 == 0 || ( n % 4 == 0 && n % 100 != 0 ) ) ) { break ; } else if ( d == 0 && ans == 1 && ( n % 400 != 0 && ( n % 4 != 0 || n % 100 == 0 ) ) ) { break ; } } System.out.println ( n ) ; } }
import java.util.Scanner ; public class codeforces_462_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; String s = sc.next ( ) ; int [ ] count = new int [ 26 ] ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { count [ s.charAt ( i ) - 'A' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) { if ( count [ i ] >= k ) { System.out.println ( k * k ) ; return ; } k -= count [ i ] ; } int res = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { res += count [ i ] * count [ i ] ; } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_334_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int i = 1 , j = n * n ; while ( i < j ) { System.out.println ( i + " " + j ) ; i ++ ; j -- ; } } }
import java.util.Scanner ; public class atcoder_AGC029_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; dp [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= dp [ i ] ) { dp [ i + 1 ] = dp [ i ] ; } else { dp [ i + 1 ] = a [ i ] ; } } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( dp [ i ] <= a [ i ] ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_313_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int [ ] A = new int [ S.length ( ) + 1 ] ; for ( int i = 1 ; i < A.length ; i ++ ) { A [ i ] = A [ i - 1 ] ; if ( S.charAt ( i - 1 ) == S.charAt ( i ) ) { A [ i ] ++ ; } } int N = sc.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { String str = sc.next ( ) ; arr [ i ] = A [ Integer.parseInt ( str.substring ( str.indexOf ( " " ) + 1 ) ) - 1 ] - A [ Integer.parseInt ( str.substring ( 0 , str.indexOf ( " " ) ) ) - 1 ] ; } for ( int i = 0 ; i < N ; i ++ ) { System.out.println ( arr [ i ] ) ; } } }
import java.util.Scanner ; public class codeforces_108_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } Arrays.sort ( arr ) ; boolean flag = false ; for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ i ] != arr [ i - 1 ] && arr [ i ] < arr [ i - 1 ] * 2 ) { flag = true ; break ; } } if ( flag ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class codeforces_705_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] w = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { w [ i ] = sc.nextInt ( ) ; } int c = 2 ; for ( int i = 0 ; i < n ; i ++ ) { if ( w [ i ] == 1 ) { System.out.println ( c ) ; } else if ( w [ i ] % 2 == 0 ) { c = 3 - c ; System.out.println ( c ) ; } else { System.out.println ( c ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC127_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; long [ ] ans = new long [ 2 ] ; long [ ] p1 = new long [ q ] ; long [ ] p2 = new long [ q ] ; for ( int i = 0 ; i < q ; i ++ ) { int a = sc.nextInt ( ) ; long b = sc.nextLong ( ) ; long c = sc.nextLong ( ) ; if ( a == 1 ) { p1 [ i ] = b ; p2 [ i ] = c ; } else { if ( p1 [ i - 1 ] == 0 ) { p1 [ i ] = b ; p2 [ i ] = c ; } else if ( p1 [ i - 1 ] <= b ) { p1 [ i ] = b ; p2 [ i ] = c ; } else { p1 [ i ] = b ; p2 [ i ] = - c ; } } } for ( int i = 0 ; i < q ; i ++ ) { if ( p1 [ i ] == 0 ) { ans [ 0 ] += p2 [ i ] ; ans [ 1 ] += p2 [ i ] ; } else if ( p1 [ i ] > 0 ) { ans [ 0 ] += p1 [ i ] ; ans [ 1 ] += p2 [ i ] ; } else { ans [ 0 ] += p2 [ i ] ; ans [ 1 ] += p1 [ i ] ; } } System.out.println ( ans [ 0 ] + " " + ans [ 1 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC153_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int h = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int sho = h / a ; int am = h % a ; if ( am != 0 ) { sho ++ ; } System.out.println ( sho ) ; } }
import java.util.Scanner ; public class atcoder_ABC158_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; if ( s.contains ( "A" ) && s.contains ( "B" ) ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } }
import java.util.Scanner ; public class atcoder_AGC005_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ a [ i ] - 1 ] = i ; } long ans = 0 ; for ( int k = n - 1 ; k >= 0 ; k -- ) { long l = 1 , r = 1 ; if ( k > 0 && a [ k - 1 ] > a [ k ] ) { l += b [ k - 1 ] ; } if ( k + 1 < n && a [ k + 1 ] > a [ k ] ) { r += b [ k + 1 ] ; } ans += l * r * a [ k ] ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_70_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; sc.nextLine ( ) ; String s = sc.nextLine ( ) ; int ans = 1 ; int sumL = 0 ; for ( String sentence : s.split ( "[.?!]" ) ) { sentence = sentence.trim ( ) + "." ; int L = sentence.length ( ) ; if ( L > 1 ) { if ( L > n ) { System.out.println ( "Impossible" ) ; return ; } if ( sumL + L + ( sumL > 0 ) > n ) { ans ++ ; sumL = L ; } else { sumL += L + ( sumL > 0 ) ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC125_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int cookie = 0 ; double time = a ; while ( time <= t + 0.5 ) { cookie += b ; time += a ; } System.out.println ( cookie ) ; } }
import java.util.Scanner ; public class atcoder_ABC145_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] x = new int [ N ] ; int [ ] y = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { x [ i ] = sc.nextInt ( ) ; y [ i ] = sc.nextInt ( ) ; } double ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = i + 1 ; j < N ; j ++ ) { double dx = x [ j ] - x [ i ] ; double dy = y [ j ] - y [ i ] ; double distance = Math.sqrt ( dx * dx + dy * dy ) ; ans += distance ; } } System.out.println ( ans / ( N * ( N - 1 ) ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC164_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int S = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; if ( S <= W ) { System.out.println ( "unsafe" ) ; } else { System.out.println ( "safe" ) ; } } }
import java.util.Scanner ; public class codeforces_514_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; if ( a > 4 ) { ans += 9 - a ; } else { ans += a ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_272_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; int y = 0 ; while ( x > 1 ) { if ( x % 2 == 1 ) { y ++ ; } x = x / 2 ; } ans += y ; } System.out.println ( ans ) ; } }
[java]
import java.util.Scanner ; public class codeforces_96_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) { ans ++ ; } else { ans += 2 ; } } System.out.println ( ans ) ; } }

[/java]
import java.util.Scanner ; public class atcoder_ABC169_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] low = new int [ n ] ; int [ ] high = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { low [ i ] = sc.nextInt ( ) ; high [ i ] = sc.nextInt ( ) ; } Arrays.sort ( low ) ; Arrays.sort ( high ) ; if ( n % 2 == 1 ) { System.out.println ( high [ n / 2 ] - low [ n / 2 ] + 1 ) ; } else { int hh = ( high [ n / 2 - 1 ] + high [ n / 2 ] ) / 2 ; int ll = ( low [ n / 2 - 1 ] + low [ n / 2 ] ) / 2 ; System.out.println ( ( hh - ll ) * 2 + 1 ) ; } } }
import java.util.Scanner ; public class atcoder_AGC035_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] deg = new int [ n ] ; int [ ] parity = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; deg [ a - 1 ] ++ ; deg [ b - 1 ] ++ ; } if ( m % 2 != 0 ) { System.out.println ( - 1 ) ; return ; } Queue < Integer > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { q.add ( deg [ i ] ) ; } while ( ! q.isEmpty ( ) ) { int d = q.poll ( ) ; int u = d - 1 ; if ( parity [ u ] != 0 ) { for ( int v : edges [ u ] ) { edges [ v ].remove ( u ) ; if ( parity [ u ] == 1 ) { System.out.println ( u + 1 + " " + v + 1 ) ; parity [ u ] = 0 ; } else { System.out.println ( v + 1 + " " + u + 1 ) ; parity [ u ] = 1 ; } deg [ v ] -- ; q.add ( deg [ v ] ) ; } } } } } static class Edge { int to ; Edge ( int to ) { this.to = to ; } } static class Graph { int n ; Edge [ ] [ ] edges ; Graph ( int n ) { this.n = n ; edges = new Edge [ n ] [ n ] ; } void addEdge ( int from , int to ) { edges [ from ] [ to ] = new Edge ( to ) ; } } }
import java.util.Scanner ; public class codeforces_147_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.nextLine ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( i > 0 && s.charAt ( i ) == ' ' && s.charAt ( i - 1 ) == ' ' ) continue ; if ( s.charAt ( i ) == ',' || s.charAt ( i ) == '.' || s.charAt ( i ) == '!' || s.charAt ( i ) == '?' ) { if ( sb.charAt ( sb.length ( ) - 1 ) != ' ' ) sb.append ( ' ' ) ; sb.append ( s.charAt ( i ) ) ; sb.append ( ' ' ) ; } else { sb.append ( s.charAt ( i ) ) ; } } System.out.println ( sb.toString ( ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC152_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int lcm = 1 ; for ( int i = 0 ; i < n ; i ++ ) { lcm = lcm * a [ i ] / gcd ( lcm , a [ i ] ) ; } long ans = lcm * sum ( a ) % 1000000007 ; System.out.println ( ans ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static long sum ( int [ ] a ) { long sum = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { sum += a [ i ] ; } return sum ; } }
import java.util.Scanner ; public class codeforces_203_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int da = sc.nextInt ( ) ; int db = sc.nextInt ( ) ; if ( x == 0 ) { System.out.println ( "YES" ) ; return ; } int a_time = Math.min ( a / da , t - 1 ) ; int b_time = Math.min ( b / db , t - 1 ) ; for ( int i = 0 ; i <= a_time ; i ++ ) { for ( int j = 0 ; j <= b_time ; j ++ ) { if ( a - da * i == x || b - db * j == x ) { System.out.println ( "YES" ) ; return ; } if ( ( a - da * i ) + ( b - db * j ) == x ) { System.out.println ( "YES" ) ; return ; } } } System.out.println ( "NO" ) ; } }
import java.util.Scanner ; public class atcoder_ABC123_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ x ] ; int [ ] b = new int [ y ] ; int [ ] c = new int [ z ] ; for ( int i = 0 ; i < x ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < y ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < z ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } int [ ] ab = new int [ x * y ] ; int index = 0 ; for ( int i = 0 ; i < x ; i ++ ) { for ( int j = 0 ; j < y ; j ++ ) { ab [ index ++ ] = a [ i ] + b [ j ] ; } } java.util.Arrays.sort ( ab ) ; int [ ] abc = new int [ k ] ; index = 0 ; for ( int i = 0 ; i < k ; i ++ ) { for ( int j = 0 ; j < z ; j ++ ) { abc [ index ++ ] = ab [ i ] + c [ j ] ; } } java.util.Arrays.sort ( abc ) ; for ( int i = 0 ; i < k ; i ++ ) { System.out.println ( abc [ i ] ) ; } } }
[INST:perfect]
import sys
input_methods = ['clipboard', 'file', 'key']
using_method = 0
input_method = input_methods[using_method]
IN = lambda: map(int, input().split())
mod = 1000000007


def main_b():
    s = input()
    pp = 0
    na = 0
    for i, c in enumerate(s[::-1]):
        cc = na + int(c)
        na = 0
        if cc <= 4:
            pp += cc
        else:
            na = 1
            if i == len(s) - 1:
                pp += 1
            pp += 10 - cc
    print(pp)


def main():
    s = input()
    pmin = 1000
    mmin = 0
    s = '0' + s
    for c in s[::-1]:
        v = int(c)
        npmin = min(pmin + 10 - (v + 1), mmin + 10 - v)
        nmmin = min(pmin + v + 1, mmin + v)
        pmin = npmin
        mmin = nmmin
    return min(pmin, mmin)


isTest = False


def pa(v):
    if isTest:
        print(v)


if __name__ == "__main__":
    if sys.platform == 'ios':
        if input_method == input_methods[0]:
            ic = input_clipboard()
            input = lambda: ic.__next__()
        elif input_method == input_methods[1]:
            sys.stdin = open('inputFile.txt')
        else:
            pass
        isTest = True
    else:
        pass
    ret = main()
    if ret is not None:
        print(ret)
import java.util.Scanner ; public class codeforces_369_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int sa = sc.nextInt ( ) ; int sk = sc.nextInt ( ) ; int [ ] ans = new int [ n ] ; for ( int i = 0 ; i < k ; i ++ ) { ans [ i ] = sk / k + ( sk % k > i ? 1 : 0 ) ; } for ( int i = k ; i < n ; i ++ ) { ans [ i ] = sa / ( n - k ) + ( sa % ( n - k ) > i - k ? 1 : 0 ) ; } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( ans [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC133_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] [ ] graph = new int [ N ] [ N ] ; for ( int i = 0 ; i < N - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; graph [ a - 1 ] [ b - 1 ] = 1 ; graph [ b - 1 ] [ a - 1 ] = 1 ; } int mod = 1000000007 ; long ans = dfs ( 0 , - 1 , K , graph , mod ) ; System.out.println ( ans ) ; } public static long dfs ( int fro , int to , int f , int [ ] [ ] graph , int mod ) { long caseNum = f ; int colorNum = K - 1 ; if ( f == K ) colorNum = K - 2 ; for ( int u : graph [ fro ] ) { if ( u == to ) continue ; long pat = dfs ( u , fro , colorNum , graph , mod ) ; if ( pat == 0 ) { caseNum = 0 ; break ; } caseNum = ( caseNum * pat ) % mod ; colorNum -- ; } return caseNum ; } }
import java.util.Scanner ; public class codeforces_95_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] arr = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.next ( ) ; } String s = sc.next ( ) ; char c = sc.next ( ).charAt ( 0 ) ; StringBuilder sb = new StringBuilder ( s ) ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == c ) { sb.setCharAt ( i , c ) ; } else if ( s.charAt ( i ) == Character.toLowerCase ( c ) ) { sb.setCharAt ( i , Character.toUpperCase ( c ) ) ; } } System.out.println ( sb.toString ( ) ) ; } }
import java.util.Scanner ; public class codeforces_373_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int w = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int lo = 0 ; int hi = ( int ) 1e18 ; while ( hi - lo > 1 ) { int md = ( lo + hi ) / 2 ; int c = sum ( m + md - 1 ) - sum ( m - 1 ) ; if ( c * k <= w ) { lo = md ; } else { hi = md ; } } System.out.println ( lo ) ; } public static int sum ( int k ) { int ret = 0 ; int pw = 10 ; int len = 1 ; while ( true ) { int cur = Math.min ( pw - 1 , k ) ; int prev = pw / 10 ; ret += ( cur - prev + 1 ) * len ; if ( pw - 1 >= k ) { break ; } len ++ ; pw *= 10 ; } return ret ; } }
import java.util.Scanner ; public class codeforces_242_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int count = 0 ; for ( int i = a ; i <= x ; i ++ ) { if ( i <= b ) continue ; for ( int j = b ; j <= y ; j ++ ) { if ( i > j ) { count ++ ; } } } System.out.println ( count ) ; for ( int i = 0 ; i < count ; i ++ ) { System.out.println ( games [ i ].x + " " + games [ i ].y ) ; } } static class game { int x ; int y ; game ( int x , int y ) { this.x = x ; this.y = y ; } } }
import java.util.Scanner ; public class codeforces_608_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int f = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int x = t - ( s - f ) ; if ( x > c ) { c = x ; } } System.out.println ( s + c ) ; } }
import java.util.Scanner ; public class codeforces_469_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { sum += b [ i ] ; } if ( sum % 2 == 1 ) { System.out.println ( "I become the guy." ) ; } else { System.out.println ( "Oh, my keyboard!" ) ; } } }
import java.util.Scanner ; public class codeforces_351_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; double [ ] arr = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextDouble ( ) ; } double sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += arr [ i ] ; } double ans = 2000000000.0 ; for ( int i = 0 ; i <= n ; i ++ ) { if ( i + 2 * n - arr.length >= n ) { ans = Math.min ( ans , Math.abs ( i - sum ) ) ; } } System.out.println ( String.format ( "%.3f" , ans ) ) ; } }
import java.util.Scanner ; public class atcoder_AGC003_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) * N + i ; } Arrays.sort ( A ) ; int cnt = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ( A [ i ] % N ) % 2 != i % 2 ) { cnt ++ ; } } System.out.println ( cnt / 2 ) ; } }
import java.util.Scanner ; public class codeforces_629_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] cake = new int [ n ] [ n ] ; int happiness = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String line = sc.next ( ) ; for ( int j = 0 ; j < n ; j ++ ) { cake [ i ] [ j ] = line.charAt ( j ) - '0' ; } } for ( int i = 0 ; i < n ; i ++ ) { int chocCount = 0 ; for ( int j = 0 ; j < n ; j ++ ) { chocCount += cake [ i ] [ j ] ; } if ( chocCount > 1 ) { int nfat = 1 ; for ( int k = chocCount ; k > chocCount - 2 ; k -- ) { nfat *= k ; } happiness += nfat / 2 ; } } } for ( int j = 0 ; j < n ; j ++ ) { int chocCount = 0 ; for ( int i = 0 ; i < n ; i ++ ) { chocCount += cake [ i ] [ j ] ; } if ( chocCount > 1 ) { int nfat = 1 ; for ( int k = chocCount ; k > chocCount - 2 ; k -- ) { nfat *= k ; } happiness += nfat / 2 ; } } System.out.println ( happiness ) ; } }
import java.util.Scanner ; public class codeforces_459_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x1 = sc.nextInt ( ) ; int y1 = sc.nextInt ( ) ; int x2 = sc.nextInt ( ) ; int y2 = sc.nextInt ( ) ; if ( x1 == x2 && y1 == y2 ) { System.out.println ( x2 + " " + ( y2 + 100 ) + " " + x1 + " " + ( y1 + 100 ) ) ; } else if ( x1 == x2 ) { System.out.println ( x2 + " " + y2 + " " + x1 + " " + y1 ) ; } else if ( y1 == y2 ) { System.out.println ( x1 + " " + y1 + " " + x2 + " " + y2 ) ; } else { System.out.println ( "-1" ) ; } } }
import java.util.Scanner ; public class codeforces_32_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String result = "" ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == '.' ) { result += "0" ; } else { i ++ ; if ( S.charAt ( i ) == '.' ) { result += "1" ; } else { result += "2" ; } } } System.out.println ( result ) ; } }
[INST:perfect]  
import sys
sys.setrecursionlimit(10000000)
mod = 10**9 + 7

def read_ints():
    return list(map(int, input().split()))

def main():
    n = int(input())
    A = read_ints()
    A.sort()
    ans = 0
    for i in range(len(A) - 2, len(A) - 2 * n - 1, -2):
        ans += A[i]
    print(ans)

if __name__ == '__main__':
    main()
import java.util.Scanner ; public class atcoder_ABC122_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long mod = 1000000007 ; long [ ] [ ] memo = new long [ n + 1 ] [ 4 ] ; memo [ 0 ] [ 0 ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { if ( memo [ i ] [ j ] == 0 ) continue ; for ( int k = 0 ; k < 4 ; k ++ ) { if ( j == 0 && k == 0 ) continue ; if ( ( j == 0 && k == 1 ) || ( j == 1 && k == 0 ) ) { memo [ i + 1 ] [ k ] += memo [ i ] [ j ] ; memo [ i + 1 ] [ k ] %= mod ; } else { memo [ i + 1 ] [ k ] += memo [ i ] [ j ] ; memo [ i + 1 ] [ k ] %= mod ; } } } } } System.out.println ( memo [ n ] [ 0 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC042_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( a + b + c == 17 && a == 5 && b == 5 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class codeforces_629_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = 368 ; int [ ] m = new int [ N ] ; int [ ] f = new int [ N ] ; int K = sc.nextInt ( ) ; for ( int i = 0 ; i < K ; i ++ ) { String str = sc.next ( ) ; int a = Integer.parseInt ( str.substring ( 1 , 2 ) ) ; int b = Integer.parseInt ( str.substring ( 3 , 4 ) ) + 1 ; if ( str.charAt ( 0 ) == 'M' ) { m [ a ] += 2 ; m [ b ] -= 2 ; } else { f [ a ] += 2 ; f [ b ] -= 2 ; } } int a = 0 ; int b = 0 ; int c = 0 ; for ( int i = 0 ; i < N ; i ++ ) { a += m [ i ] ; b += f [ i ] ; if ( Math.min ( a , b ) > c ) { c = Math.min ( a , b ) ; } } System.out.println ( c ) ; } }
import java.util.Scanner ; public class atcoder_ABC123_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int A [ ] = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int min = A [ 0 ] ; for ( int i = 1 ; i < 5 ; i ++ ) { if ( A [ i ] < min ) { min = A [ i ] ; } } System.out.println ( ( N + 4 ) / min ) ; } }
import java.util.Scanner ; public class atcoder_ABC167_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] L = new int [ N + 1 ] ; L [ 0 ] = - 1 ; for ( int i = 1 ; i <= N ; i ++ ) { L [ i ] = sc.nextInt ( ) ; } int [ ] path = new int [ N + 1 ] ; path [ 0 ] = 1 ; int ind = 0 ; int x = 1 ; int t = - 1 ; boolean flag = false ; for ( int i = 1 ; i <= N ; i ++ ) { int ne = L [ x ] ; if ( path [ ne ] != 0 ) { flag = true ; t = path [ ne ] ; break ; } path [ i ] = ne ; ind ++ ; path [ ne ] = ind ; x = ne ; } if ( flag ) { int loop = path [ t ] ; if ( K < path.length ) { System.out.println ( path [ K ] ) ; } else { K = K - path.length ; K = K % loop.length ; System.out.println ( loop [ K ] ) ; } } else { System.out.println ( path [ K - 1 ] ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC051_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; s = s.replace ( "," , " " ) ; System.out.println ( s ) ; } }
import java.util.Scanner ; public class atcoder_ABC122_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; String s = sc.next ( ) ; int [ ] [ ] problems = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { problems [ i ] [ 0 ] = sc.nextInt ( ) ; problems [ i ] [ 1 ] = sc.nextInt ( ) ; } int [ ] cumsum = new int [ n + 1 ] ; cumsum [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { cumsum [ i ] = cumsum [ i - 1 ] + ( s.charAt ( i - 1 ) == 'A' && s.charAt ( i ) == 'C' ? 1 : 0 ) ; } for ( int i = 0 ; i < q ; i ++ ) { System.out.println ( cumsum [ problems [ i ] [ 1 ] ] - cumsum [ problems [ i ] [ 0 ] - 1 ] ) ; } } }
import java.util.Scanner ; public class codeforces_673_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = 0 ; if ( arr [ 0 ] > 15 ) { ans = 15 ; } else { for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ i ] - arr [ i - 1 ] > 15 ) { ans = arr [ i - 1 ] + 15 ; break ; } } if ( ans == 0 ) { if ( arr [ n - 1 ] == 90 || arr [ n - 1 ] + 15 >= 90 ) { ans = 90 ; } else { ans = arr [ n - 1 ] + 15 ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC174_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int left = 1 ; int right = 1000000 ; int ans = 0 ; while ( left <= right ) { int mid = ( left + right ) / 2 ; int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] <= mid ) { cnt ++ ; } else { cnt -= arr [ i ] / mid ; } } if ( cnt >= k ) { ans = mid ; right = mid - 1 ; } else { left = mid + 1 ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC154_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; String U = sc.next ( ) ; if ( S.equals ( U ) ) { A -- ; } if ( T.equals ( U ) ) { B -- ; } System.out.println ( A + " " + B ) ; } }
import java.util.Scanner ; public class codeforces_637_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int max = 0 ; int index = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > max ) { max = a [ i ] ; index = i ; } } System.out.println ( a [ index ] ) ; } }
import java.util.Scanner ; public class codeforces_11_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( arr [ i ] >= arr [ i + 1 ] ) { int q = ( arr [ i ] - arr [ i + 1 ] ) / d + 1 ; count += q ; arr [ i + 1 ] += q * d ; } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC150_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( a [ i ] == b [ j ] ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC145_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int T = sc.nextInt ( ) ; int [ ] [ ] timeValue = new int [ N + 1 ] [ 2 ] ; for ( int i = 1 ; i <= N ; i ++ ) { timeValue [ i ] [ 0 ] = sc.nextInt ( ) ; timeValue [ i ] [ 1 ] = sc.nextInt ( ) ; } for ( int i = 1 ; i <= N ; i ++ ) { for ( int j = 1 ; j <= T ; j ++ ) { if ( timeValue [ i ] [ 0 ] > j ) { timeValue [ i ] [ 1 ] += timeValue [ i - 1 ] [ 1 ] ; } else { timeValue [ i ] [ 1 ] = Math.max ( timeValue [ i ] [ 1 ] , timeValue [ i - 1 ] [ 1 ] + timeValue [ i - 1 ] [ 0 ] ) ; } } } int ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { ans += timeValue [ i ] [ 1 ] ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_621_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] % 2 == 0 ) { sum += a [ i ] ; } else { if ( i % 2 == 0 ) { sum += a [ i ] ; } else { if ( i > 0 && a [ i - 1 ] % 2 == 1 ) { sum += a [ i ] ; } } } } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class codeforces_544_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int x = 0 ; if ( k <= Math.max ( n * n / 2 , n * n - n * n / 2 ) ) { System.out.println ( "YES" ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i % 2 == j % 2 && x < k ) { System.out.print ( "L" ) ; x ++ ; } else { System.out.print ( "S" ) ; } } System.out.println ( ) ; } } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC107_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int [ ] pos = new int [ N ] ; int [ ] neg = new int [ N ] ; int posCount = 0 ; int negCount = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( arr [ i ] > 0 ) { pos [ posCount ++ ] = arr [ i ] ; } else if ( arr [ i ] < 0 ) { neg [ negCount ++ ] = arr [ i ] ; } else { K -- ; } } int ans = 1000000000 ; for ( int i = 0 ; i <= K ; i ++ ) { int x = 0 ; int y = negCount - 1 ; if ( i == 0 ) { x = 0 ; } else { x = pos [ i - 1 ] ; } if ( K - i == 0 ) { y = 0 ; } else { y = neg [ negCount - 1 - ( K - i ) ] ; } ans = Math.min ( ans , 2 * x + Math.abs ( y ) , x + 2 * Math.abs ( y ) ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_450_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] l = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { l [ i ] = sc.nextInt ( ) ; } int [ ] l2 = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( l [ i ] % m == 0 ) { l2 [ i ] = l [ i ] / m ; } else { l2 [ i ] = l [ i ] / m + 1 ; } } int mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( l2 [ i ] > mx ) { mx = l2 [ i ] ; } } int ind = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( l2 [ i ] == mx ) { ind = i ; } } System.out.println ( ind + 1 ) ; } }
import java.util.Scanner ; public class atcoder_AGC017_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int P = sc.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count1 = 0 ; int count0 = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( arr [ i ] % 2 == 1 ) { count1 ++ ; } else { count0 ++ ; } } long ans = 0 ; for ( int i = 0 ; i <= count0 ; i ++ ) { ans += combi ( count0 , i ) ; } long time = 0 ; while ( time <= count1 ) { if ( time % 2 == P ) { ans += combi ( count1 , time ) ; } time ++ ; } System.out.println ( ans ) ; } public static long combi ( int n , int k ) { long ans = 1 ; for ( int i = 0 ; i < k ; i ++ ) { ans *= n - i ; ans /= i + 1 ; } return ans ; } }
import java.util.Scanner ; public class codeforces_682_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > c ) { c ++ ; } } System.out.println ( c + 1 ) ; } }
import java.util.Scanner ; public class atcoder_ARC062_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int score = 0 ; if ( a > b ) { score = 1 ; } else if ( a < b ) { score = - 1 ; } System.out.println ( score ) ; } }
import java.util.Scanner ; public class atcoder_ABC114_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i <= N ; i ++ ) { if ( i % 3 == 0 && i % 5 == 0 && i % 7 == 0 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC002_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; int [ ] [ ] balls = new int [ N ] [ 2 ] ; balls [ 0 ] = new int [ 2 ] ; balls [ 0 ] [ 0 ] = 0 ; balls [ 0 ] [ 1 ] = 1 ; for ( int i = 0 ; i < M ; i ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int w_x = balls [ x - 1 ] [ 0 ] ; int r_x = balls [ x - 1 ] [ 1 ] ; int w_y = balls [ y - 1 ] [ 0 ] ; int r_y = balls [ y - 1 ] [ 1 ] ; if ( w_x >= 1 && r_x >= 1 ) { balls [ x - 1 ] [ 0 ] -- ; balls [ y - 1 ] [ 1 ] ++ ; } else if ( w_x == 0 ) { balls [ x - 1 ] [ 1 ] -- ; balls [ y - 1 ] [ 1 ] ++ ; } else { balls [ x - 1 ] [ 0 ] -- ; balls [ y - 1 ] [ 0 ] ++ ; } } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( balls [ i ] [ 1 ] == 1 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC145_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; if ( n % 2 == 1 ) { System.out.println ( "No" ) ; } else { if ( s.substring ( 0 , n / 2 ).equals ( s.substring ( n / 2 ) ) ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } } }
import java.util.Scanner ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; while ( q -- > 0 ) { String s = sc.next ( ) ; if ( s.equals ( "AC" ) ) { System.out.println ( "AC" ) ; } else { System.out.println ( "WA" ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC136_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int ans = 0 ; int i = 1 ; while ( 10 * i <= N ) { ans += ( 10 * i - 10 * ( i - 1 ) ) ; i += 2 ; } ans += Math.max ( 0 , N - 10 * ( i - 1 ) + 1 ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ARC086_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int max = 0 ; int maxIndex = - 1 ; for ( int i = 0 ; i < N ; i ++ ) { if ( Math.abs ( A [ i ] ) > max ) { max = Math.abs ( A [ i ] ) ; maxIndex = i ; } } if ( A [ maxIndex ] > 0 ) { System.out.println ( 2 * N - 1 ) ; for ( int i = 0 ; i < N ; i ++ ) { if ( i < maxIndex ) { System.out.println ( maxIndex + 1 + " " + ( i + 1 ) ) ; } else { System.out.println ( i + 1 + " " + ( i + 2 ) ) ; } } } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class atcoder_ABC124_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( i % 2 == 0 ) { if ( s.charAt ( i ) == '0' ) count ++ ; } else { if ( s.charAt ( i ) == '1' ) count ++ ; } } System.out.println ( s.length ( ) - count ) ; } }
import java.util.Scanner ; public class codeforces_644_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] d = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } int [ ] res = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { res [ i ] = - 1 ; } int time = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > time && res [ i ] == - 1 ) { time = a [ i ] + d [ i ] ; res [ i ] = time ; } else if ( a [ i ] >= time && res [ i ] == - 1 ) { int temp = time ; time = a [ i ] + d [ i ] ; res [ i ] = time ; time = temp ; } else if ( res [ i ] == - 1 ) { res [ i ] = - 1 ; } } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( res [ i ] + " " ) ; } } }
import java.util.Scanner ; public class codeforces_624_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int pre = ( int ) 1e9 + 1 ; long ans = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) { ans += Math.max ( 0 , Math.min ( pre - 1 , a [ i ] ) ) ; pre = Math.max ( 0 , Math.min ( pre - 1 , a [ i ] ) ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC027_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } Arrays.sort ( a ) ; int ans = 0 ; if ( a [ 0 ] > x ) { System.out.println ( 0 ) ; return ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > x ) { x = 0 ; break ; } x -= a [ i ] ; ans ++ ; } if ( x != 0 ) { ans -- ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_669_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ans = ( n * 2 + 1 ) / 3 ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC135_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ 13 ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( i == 0 ) { dp [ a [ i ] ] ++ ; } else { for ( int j = 0 ; j < 13 ; j ++ ) { dp [ ( j * 10 + a [ i ] ) % 13 ] += dp [ j ] ; } } } System.out.println ( dp [ 5 ] ) ; } }
100%|██████████| 250/250 [00:00<00:00, 8729.91it/s]
import java.util.Scanner ; public class atcoder_ABC133_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int [ ] [ ] points = new int [ n ] [ d ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < d ; j ++ ) { points [ i ] [ j ] = sc.nextInt ( ) ; } } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { double dist = 0 ; for ( int k = 0 ; k < d ; k ++ ) { dist += Math.pow ( points [ i ] [ k ] - points [ j ] [ k ] , 2 ) ; } if ( Math.sqrt ( dist ) % 1 == 0 ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_622_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int l = 1 ; int r = n ; while ( l < r ) { int mid = l + ( r - l ) / 2 ; int idxcnt = mid * ( mid + 1 ) / 2 ; if ( idxcnt < n ) { l = mid + 1 ; } else { r = mid ; } } l -= 1 ; idxcnt = l * ( l + 1 ) / 2 ; System.out.println ( n - idxcnt ) ; } }
import java.util.Scanner ; public class codeforces_519_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a [ ] = new int [ n ] ; int b [ ] = new int [ n ] ; int c [ ] = new int [ n ] ; int x = 0 ; int y = 0 ; int z = 0 ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { x += a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { y += b [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { z += c [ i ] ; } System.out.println ( Math.abs ( x - y ) ) ; System.out.println ( Math.abs ( y - z ) ) ; } }
import java.util.Scanner ; public class codeforces_131_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ i ] + arr [ j ] == 0 ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_379_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int s = 0 ; int r = 0 ; while ( a > 0 || r >= b ) { a += r / b ; r %= b ; s += a ; r += a % b ; a /= b ; } System.out.println ( s ) ; } }
+ python3 -u test_translation.py --dataset Avatar --source_lang Python --target_lang Java --model yangccccc/codellama-multi --test_type use_test
testing translations
Filename:  atcoder_ABC146_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC146_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC119_B.java
Filename:  atcoder_AGC028_B.java
Filename:  codeforces_569_A.java
Filename:  atcoder_ABC112_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC112_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC104_C.java
Filename:  codeforces_678_A.java
Filename:  codeforces_400_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_400_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC105_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC105_D.java' returned non-zero exit status 1.
Filename:  atcoder_AGC033_B.java
Filename:  codeforces_55_A.java
Filename:  atcoder_ABC106_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC106_C.java' returned non-zero exit status 1.
Filename:  codeforces_404_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_404_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC046_B.java
Filename:  codeforces_7_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_7_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC021_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC021_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC089_C.java
Filename:  atcoder_AGC013_A.java
Filename:  codeforces_609_B.java
Filename:  atcoder_ABC162_D.java
Filename:  atcoder_AGC014_D.java
Filename:  atcoder_ABC151_A.java
Filename:  codeforces_581_B.java
Filename:  atcoder_ABC126_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC126_E.java' returned non-zero exit status 1.
Filename:  atcoder_ABC118_C.java
Filename:  atcoder_ABC132_F.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC132_F.java' returned non-zero exit status 1.
Filename:  codeforces_581_A.java
Filename:  codeforces_92_A.java
Filename:  atcoder_ABC170_A.java
Filename:  codeforces_653_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_653_A.java' returned non-zero exit status 4.
Filename:  codeforces_8_B.java
Filename:  codeforces_146_A.java
Filename:  codeforces_299_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_299_A.java' returned non-zero exit status 1.
Filename:  codeforces_518_B.java
Filename:  codeforces_421_A.java
Filename:  codeforces_340_A.java
Filename:  atcoder_ABC140_F.java
Filename:  codeforces_534_B.java
Filename:  codeforces_672_A.java
Filename:  codeforces_148_B.java
Filename:  codeforces_59_A.java
Filename:  codeforces_474_B.java
Filename:  codeforces_267_A.java
Filename:  atcoder_ABC172_D.java
Filename:  atcoder_ABC112_A.java
Filename:  codeforces_265_B.java
Filename:  codeforces_342_B.java
Filename:  codeforces_356_A.java
Filename:  atcoder_ABC178_A.java
Filename:  atcoder_ABC158_B.java
Filename:  codeforces_296_A.java
Filename:  atcoder_AGC019_A.java
Filename:  atcoder_ABC134_E.java
Filename:  codeforces_387_A.java
Filename:  codeforces_665_A.java
Filename:  codeforces_154_A.java
Filename:  codeforces_23_B.java
Filename:  atcoder_ABC150_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC150_D.java' returned non-zero exit status 1.
Filename:  codeforces_216_B.java
Filename:  atcoder_ABC149_B.java
Filename:  codeforces_612_B.java
Filename:  codeforces_583_B.java
Filename:  codeforces_607_A.java
Filename:  atcoder_AGC010_B.java
Filename:  codeforces_190_A.java
Filename:  codeforces_387_B.java
Filename:  atcoder_ABC137_D.java
Filename:  atcoder_ABC120_C.java
Filename:  codeforces_397_B.java
Filename:  atcoder_ARC102_C.java
Filename:  atcoder_ABC148_F.java
Filename:  atcoder_ABC070_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC070_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC152_C.java
Filename:  atcoder_ABC111_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC111_C.java' returned non-zero exit status 1.
Filename:  codeforces_268_A.java
Filename:  codeforces_651_A.java
Filename:  codeforces_274_A.java
Filename:  codeforces_306_A.java
Filename:  codeforces_400_B.java
Filename:  codeforces_327_A.java
Filename:  codeforces_567_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_567_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC109_B.java
Filename:  codeforces_579_A.java
Filename:  codeforces_189_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_189_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC037_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC037_E.java' returned non-zero exit status 1.
Filename:  codeforces_222_A.java
Filename:  atcoder_ABC165_C.java
Filename:  codeforces_203_B.java
Filename:  atcoder_AGC024_B.java
Filename:  codeforces_287_A.java
Filename:  codeforces_37_A.java
Filename:  atcoder_AGC006_B.java
Filename:  codeforces_632_B.java
Filename:  codeforces_110_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_110_B.java' returned non-zero exit status 1.
Filename:  codeforces_134_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_134_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC034_B.java
Filename:  atcoder_ABC110_C.java
Filename:  atcoder_ABC123_B.java
Filename:  atcoder_AGC025_A.java
Filename:  atcoder_ABC108_B.java
Filename:  atcoder_ABC171_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC171_E.java' returned non-zero exit status 1.
Filename:  codeforces_445_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_445_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC143_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC143_D.java' returned non-zero exit status 1.
Filename:  codeforces_30_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_30_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC142_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC142_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC171_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC171_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC107_D.java
Filename:  codeforces_106_B.java
Filename:  atcoder_AGC002_A.java
Filename:  atcoder_ABC140_D.java
Filename:  atcoder_ABC167_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC167_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC143_A.java
Filename:  atcoder_ABC139_B.java
Filename:  atcoder_ABC124_A.java
Filename:  codeforces_25_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_25_A.java' returned non-zero exit status 1.
Filename:  codeforces_282_B.java
Filename:  atcoder_ABC169_C.java
Filename:  codeforces_350_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_350_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC142_A.java
Filename:  codeforces_333_B.java
Filename:  atcoder_ABC166_C.java
Filename:  codeforces_79_A.java
Filename:  atcoder_AGC004_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC004_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC174_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC174_C.java' returned non-zero exit status 1.
Filename:  codeforces_67_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_67_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC168_C.java
Filename:  codeforces_354_A.java
Filename:  codeforces_49_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_49_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC168_B.java
Filename:  atcoder_ABC149_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC149_C.java' returned non-zero exit status 1.
Filename:  codeforces_302_A.java
Filename:  codeforces_58_B.java
Filename:  atcoder_AGC028_A.java
Filename:  codeforces_56_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_56_B.java' returned non-zero exit status 1.
Filename:  codeforces_99_A.java
Filename:  codeforces_412_A.java
Filename:  codeforces_86_A.java
Filename:  atcoder_ABC128_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC128_C.java' returned non-zero exit status 1.
Filename:  atcoder_AGC004_B.java
Filename:  atcoder_ABC150_E.java
Filename:  codeforces_456_A.java
Filename:  codeforces_598_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_598_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC027_B.java
Filename:  codeforces_408_B.java
Filename:  atcoder_AGC006_A.java
Filename:  atcoder_AGC043_B.java
Filename:  codeforces_31_A.java
Filename:  atcoder_AGC011_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC011_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC125_C.java
Filename:  atcoder_AGC007_C.java
Filename:  codeforces_459_B.java
Filename:  atcoder_ABC125_B.java
Filename:  atcoder_ABC043_B.java
Filename:  codeforces_546_A.java
Filename:  codeforces_231_A.java
Filename:  atcoder_AGC033_A.java
Filename:  atcoder_ABC127_B.java
Filename:  atcoder_AGC038_A.java
Filename:  codeforces_500_A.java
Filename:  atcoder_ABC155_D.java
Filename:  atcoder_ABC147_D.java
Filename:  atcoder_AGC046_A.java
Filename:  codeforces_596_B.java
Filename:  codeforces_171_A.java
Filename:  codeforces_276_B.java
Filename:  codeforces_617_B.java
Filename:  codeforces_55_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_55_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC178_B.java
Filename:  atcoder_ABC164_D.java
Filename:  codeforces_242_B.java
Filename:  atcoder_ABC132_A.java
Filename:  atcoder_ABC169_D.java
Filename:  atcoder_ABC126_D.java
Filename:  atcoder_ABC129_E.java
Filename:  codeforces_678_B.java
Filename:  codeforces_462_B.java
Filename:  codeforces_334_A.java
Filename:  atcoder_AGC029_C.java
Filename:  codeforces_313_B.java
Filename:  codeforces_108_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_108_B.java' returned non-zero exit status 1.
Filename:  codeforces_705_B.java
Filename:  atcoder_ABC127_F.java
Filename:  atcoder_ABC153_A.java
Filename:  atcoder_ABC158_A.java
Filename:  atcoder_AGC005_B.java
Filename:  codeforces_70_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_70_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC125_A.java
Filename:  atcoder_ABC145_C.java
Filename:  atcoder_ABC164_A.java
Filename:  codeforces_514_A.java
Filename:  codeforces_272_B.java
Filename:  codeforces_96_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_96_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC169_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC169_E.java' returned non-zero exit status 1.
Filename:  atcoder_AGC035_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC035_B.java' returned non-zero exit status 1.
Filename:  codeforces_147_A.java
Filename:  atcoder_ABC152_E.java
Filename:  codeforces_203_A.java
Filename:  atcoder_ABC123_D.java
Filename:  atcoder_ABC155_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC155_E.java' returned non-zero exit status 1.
Filename:  codeforces_369_B.java
Filename:  atcoder_ABC133_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC133_E.java' returned non-zero exit status 1.
Filename:  codeforces_95_A.java
Filename:  codeforces_373_B.java
Filename:  codeforces_242_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_242_A.java' returned non-zero exit status 1.
Filename:  codeforces_608_A.java
Filename:  codeforces_469_A.java
Filename:  codeforces_351_A.java
Filename:  atcoder_AGC003_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC003_C.java' returned non-zero exit status 1.
Filename:  codeforces_629_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_629_A.java' returned non-zero exit status 1.
Filename:  codeforces_459_A.java
Filename:  codeforces_32_B.java
Filename:  atcoder_AGC012_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC012_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC122_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC122_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC042_A.java
Filename:  codeforces_629_B.java
Filename:  atcoder_ABC123_C.java
Filename:  atcoder_ABC167_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC167_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC051_A.java
Filename:  atcoder_ABC122_C.java
Filename:  codeforces_673_A.java
Filename:  atcoder_ABC174_E.java
Filename:  atcoder_ABC154_A.java
Filename:  codeforces_637_A.java
Filename:  codeforces_11_A.java
Filename:  atcoder_ABC150_C.java
Filename:  atcoder_ABC145_E.java
Filename:  codeforces_621_A.java
Filename:  codeforces_544_B.java
Filename:  atcoder_ABC107_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC107_C.java' returned non-zero exit status 1.
Filename:  codeforces_450_A.java
Filename:  atcoder_AGC017_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC017_A.java' returned non-zero exit status 1.
Filename:  codeforces_682_B.java
Filename:  atcoder_ARC062_B.java
Filename:  atcoder_ABC114_C.java
Filename:  atcoder_AGC002_B.java
Filename:  atcoder_ABC145_B.java
Filename:  codeforces_61_B.java
Filename:  atcoder_ABC136_B.java
Filename:  atcoder_ARC086_B.java
Filename:  atcoder_ABC124_C.java
Filename:  codeforces_644_B.java
Filename:  codeforces_624_B.java
Filename:  atcoder_AGC027_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC027_A.java' returned non-zero exit status 1.
Filename:  codeforces_669_A.java
Filename:  atcoder_ABC135_D.java
Filename:  atcoder_ABC133_B.java
Filename:  codeforces_622_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_622_A.java' returned non-zero exit status 1.
Filename:  codeforces_519_B.java
Filename:  codeforces_131_B.java
Filename:  codeforces_379_A.java
../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/pass_id.txt
#Success: 68
Success: ['codeforces_242_B.java', 'codeforces_333_B.java', 'atcoder_ABC124_A.java', 'atcoder_ABC164_A.java', 'atcoder_AGC038_A.java', 'codeforces_106_B.java', 'atcoder_AGC033_B.java', 'atcoder_ABC154_A.java', 'atcoder_ABC142_A.java', 'atcoder_ABC158_A.java', 'codeforces_59_A.java', 'codeforces_265_B.java', 'codeforces_669_A.java', 'atcoder_ABC145_B.java', 'codeforces_534_B.java', 'codeforces_609_B.java', 'atcoder_ABC170_A.java', 'atcoder_ABC139_B.java', 'codeforces_608_A.java', 'codeforces_569_A.java', 'codeforces_268_A.java', 'codeforces_354_A.java', 'atcoder_ABC168_B.java', 'atcoder_ABC178_A.java', 'codeforces_387_B.java', 'atcoder_ABC051_A.java', 'atcoder_AGC025_A.java', 'codeforces_154_A.java', 'codeforces_190_A.java', 'atcoder_ABC043_B.java', 'codeforces_203_A.java', 'codeforces_92_A.java', 'codeforces_55_A.java', 'codeforces_231_A.java', 'codeforces_340_A.java', 'atcoder_AGC006_B.java', 'codeforces_342_B.java', 'atcoder_ABC108_B.java', 'atcoder_ABC152_C.java', 'atcoder_ABC112_A.java', 'codeforces_23_B.java', 'codeforces_705_B.java', 'atcoder_ABC133_B.java', 'codeforces_32_B.java', 'codeforces_673_A.java', 'codeforces_581_B.java', 'atcoder_ABC118_C.java', 'atcoder_AGC046_A.java', 'codeforces_379_A.java', 'atcoder_AGC002_A.java', 'atcoder_ABC125_A.java', 'codeforces_450_A.java', 'codeforces_11_A.java', 'atcoder_ABC151_A.java', 'atcoder_ABC153_A.java', 'codeforces_282_B.java', 'atcoder_AGC006_A.java', 'codeforces_58_B.java', 'codeforces_95_A.java', 'codeforces_607_A.java', 'atcoder_ABC140_D.java', 'codeforces_581_A.java', 'codeforces_612_B.java', 'atcoder_ABC104_C.java', 'codeforces_546_A.java', 'atcoder_ABC143_A.java', 'codeforces_267_A.java', 'codeforces_544_B.java']
Fail: ['atcoder_ABC165_C.java', 'atcoder_ABC145_E.java', 'codeforces_37_A.java', 'atcoder_AGC002_B.java', 'atcoder_ABC042_A.java', 'atcoder_ABC178_B.java', 'atcoder_ARC062_B.java', 'atcoder_ABC123_C.java', 'atcoder_ABC109_B.java', 'atcoder_AGC013_A.java', 'codeforces_462_B.java', 'codeforces_459_A.java', 'codeforces_86_A.java', 'codeforces_397_B.java', 'atcoder_ABC168_C.java', 'codeforces_596_B.java', 'atcoder_AGC029_C.java', 'codeforces_651_A.java', 'codeforces_274_A.java', 'atcoder_ABC107_D.java', 'codeforces_678_A.java', 'codeforces_621_A.java', 'atcoder_ABC172_D.java', 'atcoder_AGC019_A.java', 'atcoder_ABC150_E.java', 'atcoder_ABC114_C.java', 'codeforces_351_A.java', 'atcoder_ABC122_C.java', 'codeforces_306_A.java', 'atcoder_ABC124_C.java', 'codeforces_334_A.java', 'codeforces_203_B.java', 'atcoder_ABC126_D.java', 'atcoder_ABC155_D.java', 'atcoder_AGC046_B.java', 'atcoder_ABC137_D.java', 'codeforces_624_B.java', 'codeforces_617_B.java', 'atcoder_ABC150_C.java', 'codeforces_637_A.java', 'codeforces_400_B.java', 'codeforces_131_B.java', 'codeforces_296_A.java', 'atcoder_ARC102_C.java', 'atcoder_ABC110_C.java', 'codeforces_302_A.java', 'codeforces_31_A.java', 'atcoder_ARC086_B.java', 'codeforces_147_A.java', 'atcoder_ABC174_E.java', 'codeforces_644_B.java', 'codeforces_356_A.java', 'codeforces_171_A.java', 'codeforces_148_B.java', 'atcoder_AGC024_B.java', 'atcoder_AGC028_B.java', 'codeforces_79_A.java', 'atcoder_ABC147_D.java', 'atcoder_ABC145_C.java', 'codeforces_373_B.java', 'atcoder_ABC148_F.java', 'atcoder_ABC089_C.java', 'atcoder_AGC034_B.java', 'codeforces_579_A.java', 'codeforces_222_A.java', 'codeforces_369_B.java', 'atcoder_ABC152_E.java', 'atcoder_ABC127_B.java', 'atcoder_ABC140_F.java', 'atcoder_ABC136_B.java', 'atcoder_AGC004_B.java', 'atcoder_ABC125_B.java', 'codeforces_459_B.java', 'atcoder_AGC014_D.java', 'codeforces_216_B.java', 'atcoder_AGC005_B.java', 'codeforces_682_B.java', 'atcoder_AGC007_C.java', 'codeforces_678_B.java', 'atcoder_ABC125_C.java', 'codeforces_632_B.java', 'atcoder_ABC127_F.java', 'codeforces_146_A.java', 'codeforces_8_B.java', 'codeforces_412_A.java', 'atcoder_ABC169_C.java', 'atcoder_ABC149_B.java', 'atcoder_AGC028_A.java', 'atcoder_ABC129_E.java', 'codeforces_514_A.java', 'atcoder_ABC135_D.java', 'atcoder_ABC162_D.java', 'codeforces_272_B.java', 'codeforces_61_B.java', 'codeforces_469_A.java', 'atcoder_AGC033_A.java', 'codeforces_519_B.java', 'atcoder_AGC043_B.java', 'atcoder_ABC134_E.java', 'codeforces_327_A.java', 'atcoder_AGC027_B.java', 'atcoder_ABC123_D.java', 'codeforces_665_A.java', 'atcoder_ABC119_B.java', 'codeforces_672_A.java', 'atcoder_ABC123_B.java', 'codeforces_387_A.java', 'atcoder_ABC169_D.java', 'atcoder_ABC158_B.java', 'codeforces_474_B.java', 'codeforces_456_A.java', 'atcoder_ABC132_A.java', 'codeforces_408_B.java', 'codeforces_518_B.java', 'atcoder_ABC120_C.java', 'codeforces_287_A.java', 'codeforces_500_A.java', 'atcoder_ABC164_D.java', 'atcoder_AGC010_B.java', 'codeforces_99_A.java', 'codeforces_276_B.java', 'codeforces_313_B.java', 'codeforces_583_B.java', 'codeforces_421_A.java', 'codeforces_629_B.java', 'codeforces_404_A.java', 'codeforces_55_B.java', 'atcoder_ABC142_C.java', 'codeforces_25_A.java', 'atcoder_ABC128_C.java', 'atcoder_ABC143_D.java', 'atcoder_ABC070_B.java', 'atcoder_ABC132_F.java', 'codeforces_49_A.java', 'atcoder_ABC111_C.java', 'atcoder_AGC021_B.java', 'atcoder_ABC106_C.java', 'codeforces_598_A.java', 'atcoder_ABC169_E.java', 'codeforces_189_A.java', 'codeforces_56_B.java', 'codeforces_7_B.java', 'codeforces_400_A.java', 'atcoder_ABC105_D.java', 'codeforces_567_A.java', 'atcoder_ABC174_C.java', 'atcoder_ABC155_E.java', 'codeforces_110_B.java', 'atcoder_AGC017_A.java', 'codeforces_622_A.java', 'atcoder_ABC133_E.java', 'atcoder_AGC003_C.java', 'codeforces_67_B.java', 'atcoder_ABC107_C.java', 'codeforces_445_A.java', 'atcoder_ABC167_C.java', 'atcoder_ABC167_D.java', 'codeforces_350_B.java', 'codeforces_70_B.java', 'codeforces_134_A.java', 'atcoder_ABC112_C.java', 'atcoder_ABC126_E.java', 'codeforces_108_B.java', 'atcoder_AGC027_A.java', 'atcoder_ABC149_C.java', 'atcoder_AGC011_C.java', 'atcoder_ABC146_D.java', 'codeforces_242_A.java', 'atcoder_AGC037_E.java', 'atcoder_ABC122_D.java', 'atcoder_ABC150_D.java', 'codeforces_299_A.java', 'atcoder_AGC004_D.java', 'codeforces_653_A.java', 'codeforces_30_A.java', 'codeforces_629_A.java', 'atcoder_AGC035_B.java', 'atcoder_ABC171_B.java', 'atcoder_ABC171_E.java', 'atcoder_AGC012_A.java', 'codeforces_96_B.java', 'atcoder_ABC148_F.java', 'codeforces_86_A.java', 'atcoder_ABC166_C.java']
+ kill_yang_java_processes
+ echo 'Killing all running Java processes for user '\''yang'\''...'
Killing all running Java processes for user 'yang'...
+ ps aux
+ grep '^yang'
+ grep 'java '
+ awk '{print $2}'
+ xargs -r kill -9
+ echo 'All Java processes for '\''yang'\'' have been killed.'
All Java processes for 'yang' have been killed.
+ echo 'All models for version '\''before-Python/code/'\'' have been run.'
All models for version 'before-Python/code/' have been run.
+ mv /home/ubuntu/translation/Experiment_Results GAs_ft_cl/Experiment_Results_before-Python_code_
+ for version in "${versions[@]}"
+ echo 'Running version: v0-Python-code'
Running version: v0-Python-code
+ dest=/home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ rm -rf /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ cp -r /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/v0-Python-code /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ ls /home/ubuntu/translation/dataset/Intermediate/Translation/Avatar/Python/code
+ wc -l
231
+ for model in "${models[@]}"
+ echo 'Running model: yangccccc/codellama-multi'
Running model: yangccccc/codellama-multi
+ bash -x run_SR.sh yangccccc/codellama-multi
+ tee GAs_ft_cl/v0-Python-code_yangccccc_codellama-multi_20250901_193456.log
+ model=yangccccc/codellama-multi
+ dataset=Avatar
+ cache=tmp
+ src=Python
+ tgt=Java
+ python3 translate.py --model yangccccc/codellama-multi --dataset Avatar --source_lang Python --target_lang Java --cache_dir tmp --use_test
INFO 09-01 19:50:06 [__init__.py:241] Automatically detected platform cuda.
found 231 inputs
INFO 09-01 19:50:08 [utils.py:326] non-default args: {'model': 'yangccccc/codellama-multi', 'trust_remote_code': True, 'dtype': 'bfloat16', 'max_model_len': 4096, 'tensor_parallel_size': 2, 'disable_log_stats': True}
The argument `trust_remote_code` is to be used with Auto classes. It has no effect here and is ignored.
INFO 09-01 19:50:17 [__init__.py:711] Resolved architecture: LlamaForCausalLM
`torch_dtype` is deprecated! Use `dtype` instead!
INFO 09-01 19:50:17 [__init__.py:1750] Using max model len 4096
INFO 09-01 19:50:17 [scheduler.py:222] Chunked prefill is enabled with max_num_batched_tokens=8192.
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:18 [core.py:636] Waiting for init message from front-end.
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:18 [core.py:74] Initializing a V1 LLM engine (v0.10.1.1) with config: model='yangccccc/codellama-multi', speculative_config=None, tokenizer='yangccccc/codellama-multi', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=4096, download_dir=None, load_format=auto, tensor_parallel_size=2, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=yangccccc/codellama-multi, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output","vllm.mamba_mixer2"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"cudagraph_mode":1,"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"pass_config":{},"max_capture_size":512,"local_cache_dir":null}
[1;36m(EngineCore_0 pid=1862772)[0;0m WARNING 09-01 19:50:18 [multiproc_worker_utils.py:273] Reducing Torch parallelism from 240 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:18 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1], buffer_handle=(2, 16777216, 10, 'psm_ee636c18'), local_subscribe_addr='ipc:///tmp/73f90a4e-6889-4e01-937f-ec752e76dfea', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:21 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_96a3e354'), local_subscribe_addr='ipc:///tmp/0bc7d74b-c226-4da4-9c57-94089e67d382', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:21 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_1fdeb529'), local_subscribe_addr='ipc:///tmp/bea0a2e1-c531-460e-aaa7-d25f77a6a054', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:22 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:22 [__init__.py:1418] Found nccl from library libnccl.so.2
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:22 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:22 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:23 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [custom_all_reduce.py:35] Skipping P2P check and trusting the driver's P2P report.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1], buffer_handle=(1, 4194304, 6, 'psm_cc722a47'), local_subscribe_addr='ipc:///tmp/9d31ca0f-2429-4a01-8c23-b976dce75e89', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:23 [parallel_state.py:1134] rank 1 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [parallel_state.py:1134] rank 0 in world size 2 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m WARNING 09-01 19:50:23 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m WARNING 09-01 19:50:23 [topk_topp_sampler.py:61] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:23 [gpu_model_runner.py:1953] Starting to load model yangccccc/codellama-multi...
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [gpu_model_runner.py:1953] Starting to load model yangccccc/codellama-multi...
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:23 [gpu_model_runner.py:1985] Loading model from scratch...
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:23 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:23 [cuda.py:328] Using Flash Attention backend on V1 engine.
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:24 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:24 [weight_utils.py:296] Using model weights format ['*.safetensors']
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/6 [00:00<?, ?it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:  17% Completed | 1/6 [00:00<00:01,  4.80it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:  33% Completed | 2/6 [00:01<00:02,  1.47it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:  50% Completed | 3/6 [00:02<00:02,  1.17it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:  67% Completed | 4/6 [00:03<00:01,  1.04it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards:  83% Completed | 5/6 [00:04<00:01,  1.00s/it]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards: 100% Completed | 6/6 [00:05<00:00,  1.03s/it]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Loading safetensors checkpoint shards: 100% Completed | 6/6 [00:05<00:00,  1.08it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m 
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:30 [default_loader.py:262] Loading weights took 5.74 seconds
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:30 [default_loader.py:262] Loading weights took 5.72 seconds
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:31 [gpu_model_runner.py:2007] Model loading took 12.2637 GiB and 6.780075 seconds
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:31 [gpu_model_runner.py:2007] Model loading took 12.2637 GiB and 7.055041 seconds
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:42 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/cdaeac2c31/rank_0_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:42 [backends.py:559] Dynamo bytecode transform time: 10.43 s
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:42 [backends.py:548] Using cache directory: /home/ubuntu/.cache/vllm/torch_compile_cache/cdaeac2c31/rank_1_0/backbone for vLLM's torch.compile
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:42 [backends.py:559] Dynamo bytecode transform time: 10.42 s
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:51 [backends.py:161] Directly load the compiled graph(s) for dynamic shape from the cache, took 8.107 s
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:51 [backends.py:161] Directly load the compiled graph(s) for dynamic shape from the cache, took 8.106 s
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:57 [monitor.py:34] torch.compile takes 10.43 s in total
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:57 [monitor.py:34] torch.compile takes 10.42 s in total
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:50:58 [gpu_worker.py:276] Available KV cache memory: 57.16 GiB
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:50:58 [gpu_worker.py:276] Available KV cache memory: 57.16 GiB
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:59 [kv_cache_utils.py:849] GPU KV cache size: 149,840 tokens
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:59 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 36.58x
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:59 [kv_cache_utils.py:849] GPU KV cache size: 149,840 tokens
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:50:59 [kv_cache_utils.py:853] Maximum concurrency for 4,096 tokens per request: 36.58x
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   3%|▎         | 2/67 [00:00<00:04, 13.86it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   6%|▌         | 4/67 [00:00<00:04, 14.89it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):   9%|▉         | 6/67 [00:00<00:03, 15.46it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  12%|█▏        | 8/67 [00:00<00:03, 15.67it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  15%|█▍        | 10/67 [00:00<00:03, 15.82it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  18%|█▊        | 12/67 [00:00<00:03, 15.84it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  21%|██        | 14/67 [00:00<00:03, 15.85it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  24%|██▍       | 16/67 [00:01<00:03, 15.81it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  27%|██▋       | 18/67 [00:01<00:02, 16.38it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  30%|██▉       | 20/67 [00:01<00:02, 16.78it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  33%|███▎      | 22/67 [00:01<00:02, 16.99it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  36%|███▌      | 24/67 [00:01<00:02, 17.17it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  39%|███▉      | 26/67 [00:01<00:02, 17.39it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  42%|████▏     | 28/67 [00:01<00:02, 17.47it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  45%|████▍     | 30/67 [00:01<00:02, 17.57it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  48%|████▊     | 32/67 [00:01<00:01, 17.66it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  51%|█████     | 34/67 [00:02<00:01, 18.31it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  55%|█████▌    | 37/67 [00:02<00:01, 19.00it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  58%|█████▊    | 39/67 [00:02<00:01, 19.25it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  63%|██████▎   | 42/67 [00:02<00:01, 19.65it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  67%|██████▋   | 45/67 [00:02<00:01, 19.88it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  70%|███████   | 47/67 [00:02<00:01, 19.76it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  75%|███████▍  | 50/67 [00:02<00:00, 20.19it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  79%|███████▉  | 53/67 [00:02<00:00, 20.40it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  84%|████████▎ | 56/67 [00:03<00:00, 20.55it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  88%|████████▊ | 59/67 [00:03<00:00, 20.93it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  93%|█████████▎| 62/67 [00:03<00:00, 20.55it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE):  97%|█████████▋| 65/67 [00:03<00:00, 20.77it/s]Capturing CUDA graphs (mixed prefill-decode, PIECEWISE): 100%|██████████| 67/67 [00:03<00:00, 18.47it/s]
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:51:03 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:51:03 [custom_all_reduce.py:196] Registering 5427 cuda graph addresses
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP1 pid=1862780)[0;0m INFO 09-01 19:51:03 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 2.26 GiB
[1;36m(EngineCore_0 pid=1862772)[0;0m [1;36m(VllmWorker TP0 pid=1862778)[0;0m INFO 09-01 19:51:03 [gpu_model_runner.py:2708] Graph capturing finished in 4 secs, took 2.26 GiB
[1;36m(EngineCore_0 pid=1862772)[0;0m INFO 09-01 19:51:03 [core.py:214] init engine (profile, create kv cache, warmup model) took 31.91 seconds
INFO 09-01 19:51:04 [llm.py:298] Supported_tasks: ['generate']
Translating 231 files...
  0%|          | 0/231 [00:00<?, ?it/s]100%|██████████| 231/231 [00:00<00:00, 6023.08it/s]
Adding requests:   0%|          | 0/231 [00:00<?, ?it/s]Adding requests:  23%|██▎       | 54/231 [00:00<00:00, 534.52it/s]Adding requests:  56%|█████▌    | 129/231 [00:00<00:00, 657.84it/s]Adding requests:  88%|████████▊ | 203/231 [00:00<00:00, 692.54it/s]Adding requests: 100%|██████████| 231/231 [00:00<00:00, 674.89it/s]
Processed prompts:   0%|          | 0/231 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]Processed prompts:   0%|          | 1/231 [00:13<50:18, 13.12s/it, est. speed input: 99.13 toks/s, output: 6.71 toks/s]Processed prompts:   1%|          | 2/231 [00:13<22:27,  5.88s/it, est. speed input: 106.96 toks/s, output: 13.20 toks/s]Processed prompts:   1%|▏         | 3/231 [00:14<12:39,  3.33s/it, est. speed input: 150.04 toks/s, output: 20.45 toks/s]Processed prompts:   2%|▏         | 4/231 [00:14<08:13,  2.18s/it, est. speed input: 193.71 toks/s, output: 27.13 toks/s]Processed prompts:   2%|▏         | 5/231 [00:14<05:23,  1.43s/it, est. speed input: 220.90 toks/s, output: 34.24 toks/s]Processed prompts:   3%|▎         | 7/231 [00:14<02:49,  1.32it/s, est. speed input: 396.55 toks/s, output: 48.97 toks/s]Processed prompts:   3%|▎         | 8/231 [00:15<02:18,  1.61it/s, est. speed input: 412.88 toks/s, output: 55.10 toks/s]Processed prompts:   4%|▍         | 9/231 [00:15<01:46,  2.08it/s, est. speed input: 468.98 toks/s, output: 61.82 toks/s]Processed prompts:   4%|▍         | 10/231 [00:15<01:26,  2.55it/s, est. speed input: 531.13 toks/s, output: 68.77 toks/s]Processed prompts:   5%|▍         | 11/231 [00:15<01:14,  2.97it/s, est. speed input: 603.20 toks/s, output: 75.16 toks/s]Processed prompts:   5%|▌         | 12/231 [00:15<01:00,  3.65it/s, est. speed input: 635.06 toks/s, output: 82.69 toks/s]Processed prompts:   6%|▌         | 14/231 [00:16<00:43,  4.94it/s, est. speed input: 725.40 toks/s, output: 96.40 toks/s]Processed prompts:   6%|▋         | 15/231 [00:16<00:42,  5.13it/s, est. speed input: 769.42 toks/s, output: 102.98 toks/s]Processed prompts:   7%|▋         | 16/231 [00:16<00:43,  4.89it/s, est. speed input: 784.97 toks/s, output: 109.25 toks/s]Processed prompts:   7%|▋         | 17/231 [00:16<00:45,  4.68it/s, est. speed input: 810.84 toks/s, output: 115.43 toks/s]Processed prompts:   8%|▊         | 18/231 [00:16<00:47,  4.52it/s, est. speed input: 844.26 toks/s, output: 121.66 toks/s]Processed prompts:   9%|▊         | 20/231 [00:17<00:40,  5.19it/s, est. speed input: 907.11 toks/s, output: 135.70 toks/s]Processed prompts:   9%|▉         | 21/231 [00:17<00:40,  5.20it/s, est. speed input: 961.67 toks/s, output: 142.42 toks/s]Processed prompts:  10%|▉         | 23/231 [00:17<00:43,  4.83it/s, est. speed input: 1035.38 toks/s, output: 154.89 toks/s]Processed prompts:  11%|█         | 25/231 [00:18<00:32,  6.29it/s, est. speed input: 1110.61 toks/s, output: 170.11 toks/s]Processed prompts:  11%|█▏        | 26/231 [00:18<00:32,  6.34it/s, est. speed input: 1141.63 toks/s, output: 177.10 toks/s]Processed prompts:  12%|█▏        | 28/231 [00:18<00:33,  6.15it/s, est. speed input: 1245.52 toks/s, output: 189.86 toks/s]Processed prompts:  13%|█▎        | 30/231 [00:18<00:31,  6.32it/s, est. speed input: 1301.75 toks/s, output: 203.37 toks/s]Processed prompts:  13%|█▎        | 31/231 [00:18<00:31,  6.30it/s, est. speed input: 1329.47 toks/s, output: 210.40 toks/s]Processed prompts:  14%|█▍        | 32/231 [00:19<00:32,  6.18it/s, est. speed input: 1371.37 toks/s, output: 217.48 toks/s]Processed prompts:  15%|█▍        | 34/231 [00:19<00:29,  6.61it/s, est. speed input: 1429.28 toks/s, output: 231.61 toks/s]Processed prompts:  16%|█▌        | 36/231 [00:19<00:24,  7.97it/s, est. speed input: 1524.53 toks/s, output: 246.29 toks/s]Processed prompts:  16%|█▋        | 38/231 [00:20<00:33,  5.77it/s, est. speed input: 1562.77 toks/s, output: 256.80 toks/s]Processed prompts:  17%|█▋        | 40/231 [00:20<00:28,  6.61it/s, est. speed input: 1622.65 toks/s, output: 271.60 toks/s]Processed prompts:  18%|█▊        | 41/231 [00:20<00:31,  6.04it/s, est. speed input: 1652.59 toks/s, output: 277.69 toks/s]Processed prompts:  19%|█▊        | 43/231 [00:21<00:37,  5.05it/s, est. speed input: 1714.36 toks/s, output: 287.87 toks/s]Processed prompts:  19%|█▉        | 45/231 [00:21<00:31,  5.97it/s, est. speed input: 1775.91 toks/s, output: 302.90 toks/s]Processed prompts:  20%|█▉        | 46/231 [00:21<00:29,  6.27it/s, est. speed input: 1804.25 toks/s, output: 310.10 toks/s]Processed prompts:  21%|██        | 48/231 [00:21<00:25,  7.24it/s, est. speed input: 1859.74 toks/s, output: 324.83 toks/s]Processed prompts:  22%|██▏       | 50/231 [00:21<00:25,  7.20it/s, est. speed input: 1939.41 toks/s, output: 333.51 toks/s]Processed prompts:  23%|██▎       | 52/231 [00:22<00:22,  7.90it/s, est. speed input: 2023.68 toks/s, output: 347.97 toks/s]Processed prompts:  23%|██▎       | 53/231 [00:22<00:23,  7.56it/s, est. speed input: 2087.47 toks/s, output: 354.47 toks/s]Processed prompts:  23%|██▎       | 54/231 [00:22<00:28,  6.17it/s, est. speed input: 2092.24 toks/s, output: 356.62 toks/s]Processed prompts:  24%|██▍       | 55/231 [00:22<00:26,  6.64it/s, est. speed input: 2121.44 toks/s, output: 363.85 toks/s]Processed prompts:  24%|██▍       | 56/231 [00:22<00:27,  6.40it/s, est. speed input: 2132.34 toks/s, output: 370.20 toks/s]Processed prompts:  25%|██▍       | 57/231 [00:22<00:25,  6.91it/s, est. speed input: 2164.64 toks/s, output: 377.43 toks/s]Processed prompts:  26%|██▌       | 59/231 [00:23<00:26,  6.40it/s, est. speed input: 2214.42 toks/s, output: 389.31 toks/s]Processed prompts:  26%|██▌       | 60/231 [00:23<00:32,  5.27it/s, est. speed input: 2242.18 toks/s, output: 393.08 toks/s]Processed prompts:  26%|██▋       | 61/231 [00:23<00:29,  5.85it/s, est. speed input: 2293.92 toks/s, output: 399.95 toks/s]Processed prompts:  27%|██▋       | 62/231 [00:23<00:28,  5.97it/s, est. speed input: 2323.06 toks/s, output: 406.54 toks/s]Processed prompts:  27%|██▋       | 63/231 [00:24<00:33,  5.02it/s, est. speed input: 2329.33 toks/s, output: 410.93 toks/s]Processed prompts:  29%|██▊       | 66/231 [00:24<00:26,  6.23it/s, est. speed input: 2435.55 toks/s, output: 431.62 toks/s]Processed prompts:  29%|██▉       | 67/231 [00:24<00:26,  6.13it/s, est. speed input: 2449.87 toks/s, output: 437.86 toks/s]Processed prompts:  30%|██▉       | 69/231 [00:24<00:25,  6.39it/s, est. speed input: 2508.04 toks/s, output: 450.35 toks/s]Processed prompts:  30%|███       | 70/231 [00:25<00:24,  6.50it/s, est. speed input: 2530.20 toks/s, output: 456.89 toks/s]Processed prompts:  31%|███       | 72/231 [00:25<00:26,  6.05it/s, est. speed input: 2561.59 toks/s, output: 468.27 toks/s]Processed prompts:  32%|███▏      | 74/231 [00:25<00:24,  6.46it/s, est. speed input: 2605.55 toks/s, output: 481.45 toks/s]Processed prompts:  33%|███▎      | 77/231 [00:26<00:21,  7.21it/s, est. speed input: 2719.45 toks/s, output: 501.71 toks/s]Processed prompts:  34%|███▍      | 78/231 [00:26<00:26,  5.80it/s, est. speed input: 2713.59 toks/s, output: 504.57 toks/s]Processed prompts:  34%|███▍      | 79/231 [00:26<00:25,  6.01it/s, est. speed input: 2739.98 toks/s, output: 511.25 toks/s]Processed prompts:  35%|███▌      | 81/231 [00:26<00:21,  6.92it/s, est. speed input: 2807.53 toks/s, output: 525.38 toks/s]Processed prompts:  35%|███▌      | 82/231 [00:26<00:20,  7.14it/s, est. speed input: 2833.47 toks/s, output: 532.32 toks/s]Processed prompts:  36%|███▌      | 83/231 [00:27<00:39,  3.71it/s, est. speed input: 2797.10 toks/s, output: 527.63 toks/s]Processed prompts:  37%|███▋      | 85/231 [00:27<00:29,  4.93it/s, est. speed input: 2834.35 toks/s, output: 536.54 toks/s]Processed prompts:  37%|███▋      | 86/231 [00:28<00:29,  4.86it/s, est. speed input: 2875.75 toks/s, output: 541.84 toks/s]Processed prompts:  38%|███▊      | 87/231 [00:28<00:27,  5.15it/s, est. speed input: 2889.77 toks/s, output: 548.07 toks/s]Processed prompts:  39%|███▉      | 90/231 [00:28<00:21,  6.59it/s, est. speed input: 2952.58 toks/s, output: 566.09 toks/s]Processed prompts:  39%|███▉      | 91/231 [00:28<00:24,  5.66it/s, est. speed input: 2969.58 toks/s, output: 568.96 toks/s]Processed prompts:  40%|███▉      | 92/231 [00:29<00:26,  5.15it/s, est. speed input: 2972.81 toks/s, output: 573.35 toks/s]Processed prompts:  40%|████      | 93/231 [00:29<00:28,  4.81it/s, est. speed input: 2994.34 toks/s, output: 577.95 toks/s]Processed prompts:  41%|████      | 95/231 [00:29<00:22,  6.18it/s, est. speed input: 3036.39 toks/s, output: 589.85 toks/s]Processed prompts:  42%|████▏     | 96/231 [00:29<00:20,  6.55it/s, est. speed input: 3056.40 toks/s, output: 596.93 toks/s]Processed prompts:  42%|████▏     | 97/231 [00:29<00:26,  5.09it/s, est. speed input: 3049.11 toks/s, output: 594.14 toks/s]Processed prompts:  42%|████▏     | 98/231 [00:30<00:25,  5.23it/s, est. speed input: 3055.70 toks/s, output: 593.80 toks/s]Processed prompts:  43%|████▎     | 99/231 [00:30<00:22,  5.93it/s, est. speed input: 3071.99 toks/s, output: 601.21 toks/s]Processed prompts:  43%|████▎     | 100/231 [00:30<00:22,  5.91it/s, est. speed input: 3101.41 toks/s, output: 607.30 toks/s]Processed prompts:  44%|████▍     | 102/231 [00:30<00:17,  7.19it/s, est. speed input: 3165.23 toks/s, output: 622.12 toks/s]Processed prompts:  45%|████▍     | 103/231 [00:30<00:17,  7.18it/s, est. speed input: 3186.79 toks/s, output: 628.58 toks/s]Processed prompts:  45%|████▌     | 104/231 [00:30<00:17,  7.14it/s, est. speed input: 3204.73 toks/s, output: 629.45 toks/s]Processed prompts:  45%|████▌     | 105/231 [00:31<00:26,  4.76it/s, est. speed input: 3188.25 toks/s, output: 630.80 toks/s]Processed prompts:  46%|████▋     | 107/231 [00:31<00:20,  5.95it/s, est. speed input: 3254.80 toks/s, output: 640.16 toks/s]Processed prompts:  47%|████▋     | 108/231 [00:31<00:21,  5.79it/s, est. speed input: 3264.33 toks/s, output: 640.55 toks/s]Processed prompts:  47%|████▋     | 109/231 [00:31<00:24,  5.02it/s, est. speed input: 3275.00 toks/s, output: 644.33 toks/s]Processed prompts:  48%|████▊     | 110/231 [00:32<00:21,  5.58it/s, est. speed input: 3289.10 toks/s, output: 651.25 toks/s]Processed prompts:  48%|████▊     | 111/231 [00:32<00:21,  5.70it/s, est. speed input: 3307.80 toks/s, output: 657.46 toks/s]Processed prompts:  48%|████▊     | 112/231 [00:32<00:19,  6.01it/s, est. speed input: 3331.31 toks/s, output: 663.85 toks/s]Processed prompts:  49%|████▉     | 113/231 [00:32<00:24,  4.74it/s, est. speed input: 3348.78 toks/s, output: 666.73 toks/s]Processed prompts:  50%|████▉     | 115/231 [00:32<00:19,  5.92it/s, est. speed input: 3407.64 toks/s, output: 680.97 toks/s]Processed prompts:  51%|█████     | 117/231 [00:33<00:15,  7.39it/s, est. speed input: 3445.01 toks/s, output: 691.28 toks/s]Processed prompts:  51%|█████     | 118/231 [00:33<00:15,  7.07it/s, est. speed input: 3452.89 toks/s, output: 691.10 toks/s]Processed prompts:  52%|█████▏    | 119/231 [00:33<00:14,  7.48it/s, est. speed input: 3482.50 toks/s, output: 696.98 toks/s]Processed prompts:  52%|█████▏    | 121/231 [00:33<00:13,  8.10it/s, est. speed input: 3508.69 toks/s, output: 700.67 toks/s]Processed prompts:  54%|█████▎    | 124/231 [00:33<00:09, 11.00it/s, est. speed input: 3580.09 toks/s, output: 720.62 toks/s]Processed prompts:  55%|█████▍    | 126/231 [00:33<00:09, 11.47it/s, est. speed input: 3623.98 toks/s, output: 733.59 toks/s]Processed prompts:  55%|█████▌    | 128/231 [00:34<00:11,  8.62it/s, est. speed input: 3645.92 toks/s, output: 738.85 toks/s]Processed prompts:  56%|█████▌    | 129/231 [00:34<00:13,  7.57it/s, est. speed input: 3651.70 toks/s, output: 737.58 toks/s]Processed prompts:  56%|█████▋    | 130/231 [00:34<00:15,  6.34it/s, est. speed input: 3643.84 toks/s, output: 736.69 toks/s]Processed prompts:  57%|█████▋    | 131/231 [00:35<00:27,  3.66it/s, est. speed input: 3621.83 toks/s, output: 733.14 toks/s]Processed prompts:  58%|█████▊    | 135/231 [00:35<00:12,  7.46it/s, est. speed input: 3744.84 toks/s, output: 754.51 toks/s]Processed prompts:  59%|█████▉    | 137/231 [00:35<00:11,  8.06it/s, est. speed input: 3786.28 toks/s, output: 763.52 toks/s]Processed prompts:  60%|██████    | 139/231 [00:35<00:11,  8.10it/s, est. speed input: 3847.43 toks/s, output: 774.52 toks/s]Processed prompts:  61%|██████▏   | 142/231 [00:36<00:08, 10.57it/s, est. speed input: 3943.47 toks/s, output: 790.26 toks/s]Processed prompts:  64%|██████▎   | 147/231 [00:36<00:05, 14.92it/s, est. speed input: 4092.55 toks/s, output: 823.75 toks/s]Processed prompts:  65%|██████▍   | 149/231 [00:36<00:06, 13.00it/s, est. speed input: 4118.78 toks/s, output: 827.67 toks/s]Processed prompts:  65%|██████▌   | 151/231 [00:36<00:08,  9.39it/s, est. speed input: 4127.18 toks/s, output: 833.25 toks/s]Processed prompts:  66%|██████▌   | 153/231 [00:37<00:07, 10.43it/s, est. speed input: 4156.56 toks/s, output: 842.71 toks/s]Processed prompts:  67%|██████▋   | 155/231 [00:37<00:07, 10.06it/s, est. speed input: 4170.48 toks/s, output: 845.28 toks/s]Processed prompts:  68%|██████▊   | 157/231 [00:37<00:07, 10.41it/s, est. speed input: 4211.08 toks/s, output: 849.43 toks/s]Processed prompts:  69%|██████▉   | 160/231 [00:37<00:06, 10.31it/s, est. speed input: 4244.40 toks/s, output: 851.80 toks/s]Processed prompts:  71%|███████   | 163/231 [00:37<00:05, 12.11it/s, est. speed input: 4290.51 toks/s, output: 863.56 toks/s]Processed prompts:  71%|███████▏  | 165/231 [00:38<00:05, 11.43it/s, est. speed input: 4342.81 toks/s, output: 877.08 toks/s]Processed prompts:  72%|███████▏  | 167/231 [00:38<00:05, 10.98it/s, est. speed input: 4381.24 toks/s, output: 884.32 toks/s]Processed prompts:  73%|███████▎  | 169/231 [00:38<00:05, 12.27it/s, est. speed input: 4419.42 toks/s, output: 891.22 toks/s]Processed prompts:  74%|███████▍  | 171/231 [00:38<00:06,  9.53it/s, est. speed input: 4459.54 toks/s, output: 904.10 toks/s]Processed prompts:  75%|███████▌  | 174/231 [00:38<00:04, 12.00it/s, est. speed input: 4525.48 toks/s, output: 917.76 toks/s]Processed prompts:  76%|███████▌  | 176/231 [00:39<00:04, 13.29it/s, est. speed input: 4590.04 toks/s, output: 934.11 toks/s]Processed prompts:  77%|███████▋  | 178/231 [00:39<00:06,  8.69it/s, est. speed input: 4580.56 toks/s, output: 934.28 toks/s]Processed prompts:  78%|███████▊  | 180/231 [00:39<00:04, 10.32it/s, est. speed input: 4629.56 toks/s, output: 944.37 toks/s]Processed prompts:  79%|███████▉  | 183/231 [00:39<00:03, 13.02it/s, est. speed input: 4705.80 toks/s, output: 965.15 toks/s]Processed prompts:  80%|████████  | 185/231 [00:39<00:04, 10.62it/s, est. speed input: 4724.70 toks/s, output: 969.71 toks/s]Processed prompts:  81%|████████  | 187/231 [00:40<00:03, 11.70it/s, est. speed input: 4764.50 toks/s, output: 978.91 toks/s]Processed prompts:  82%|████████▏ | 189/231 [00:40<00:05,  7.67it/s, est. speed input: 4766.43 toks/s, output: 985.57 toks/s]Processed prompts:  83%|████████▎ | 192/231 [00:41<00:05,  7.52it/s, est. speed input: 4807.11 toks/s, output: 998.58 toks/s]Processed prompts:  84%|████████▍ | 195/231 [00:41<00:03, 10.03it/s, est. speed input: 4887.85 toks/s, output: 1016.21 toks/s]Processed prompts:  85%|████████▌ | 197/231 [00:41<00:04,  8.37it/s, est. speed input: 4915.47 toks/s, output: 1021.60 toks/s]Processed prompts:  86%|████████▌ | 199/231 [00:41<00:03,  8.09it/s, est. speed input: 4975.77 toks/s, output: 1037.11 toks/s]Processed prompts:  87%|████████▋ | 201/231 [00:41<00:03,  8.70it/s, est. speed input: 5014.73 toks/s, output: 1049.54 toks/s]Processed prompts:  88%|████████▊ | 203/231 [00:42<00:04,  5.71it/s, est. speed input: 4990.22 toks/s, output: 1047.66 toks/s]Processed prompts:  89%|████████▊ | 205/231 [00:42<00:03,  6.83it/s, est. speed input: 5029.76 toks/s, output: 1056.90 toks/s]Processed prompts:  89%|████████▉ | 206/231 [00:42<00:03,  6.29it/s, est. speed input: 5034.11 toks/s, output: 1059.98 toks/s]Processed prompts:  90%|█████████ | 208/231 [00:43<00:02,  7.91it/s, est. speed input: 5077.53 toks/s, output: 1072.80 toks/s]Processed prompts:  91%|█████████ | 210/231 [00:43<00:03,  6.27it/s, est. speed input: 5064.11 toks/s, output: 1082.26 toks/s]Processed prompts:  91%|█████████▏| 211/231 [00:43<00:03,  5.18it/s, est. speed input: 5046.92 toks/s, output: 1083.46 toks/s]Processed prompts:  92%|█████████▏| 212/231 [00:44<00:03,  5.54it/s, est. speed input: 5065.67 toks/s, output: 1094.60 toks/s]Processed prompts:  92%|█████████▏| 213/231 [00:44<00:03,  5.93it/s, est. speed input: 5078.45 toks/s, output: 1099.25 toks/s]Processed prompts:  93%|█████████▎| 214/231 [00:44<00:02,  6.52it/s, est. speed input: 5090.89 toks/s, output: 1105.55 toks/s]Processed prompts:  93%|█████████▎| 215/231 [00:44<00:02,  6.84it/s, est. speed input: 5100.73 toks/s, output: 1110.77 toks/s]Processed prompts:  94%|█████████▍| 217/231 [00:44<00:01,  9.47it/s, est. speed input: 5137.37 toks/s, output: 1131.60 toks/s]Processed prompts:  95%|█████████▍| 219/231 [00:44<00:01,  9.08it/s, est. speed input: 5185.19 toks/s, output: 1149.15 toks/s]Processed prompts:  96%|█████████▌| 221/231 [00:45<00:02,  4.25it/s, est. speed input: 5150.81 toks/s, output: 1143.81 toks/s]Processed prompts:  97%|█████████▋| 223/231 [00:45<00:01,  4.72it/s, est. speed input: 5154.97 toks/s, output: 1154.03 toks/s]Processed prompts:  97%|█████████▋| 224/231 [00:46<00:02,  2.93it/s, est. speed input: 5095.54 toks/s, output: 1148.84 toks/s]Processed prompts:  97%|█████████▋| 225/231 [00:47<00:02,  2.14it/s, est. speed input: 5020.34 toks/s, output: 1138.86 toks/s]Processed prompts:  98%|█████████▊| 226/231 [01:07<00:24,  4.93s/it, est. speed input: 3602.65 toks/s, output: 839.18 toks/s] Processed prompts:  98%|█████████▊| 227/231 [01:12<00:20,  5.14s/it, est. speed input: 3319.84 toks/s, output: 801.60 toks/s]Processed prompts:  99%|█████████▊| 228/231 [01:23<00:19,  6.49s/it, est. speed input: 2924.63 toks/s, output: 738.66 toks/s]Processed prompts: 100%|█████████▉| 230/231 [01:25<00:04,  4.12s/it, est. speed input: 2885.38 toks/s, output: 789.72 toks/s]Processed prompts: 100%|██████████| 231/231 [01:30<00:00,  4.42s/it, est. speed input: 2722.93 toks/s, output: 778.61 toks/s]Processed prompts: 100%|██████████| 231/231 [01:30<00:00,  4.42s/it, est. speed input: 2722.93 toks/s, output: 778.61 toks/s]Processed prompts: 100%|██████████| 231/231 [01:30<00:00,  2.55it/s, est. speed input: 2722.93 toks/s, output: 778.61 toks/s]
+ python3 clean_generations_translation.py --model yangccccc/codellama-multi --dataset Avatar --source_lang Python --target_lang Java --remove_prompt --use_test
  0%|          | 0/231 [00:00<?, ?it/s]import java.util.Scanner ; public class atcoder_ABC146_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] g = new int [ n ] [ n ] ; int [ ] [ ] e = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; g [ a - 1 ] [ b - 1 ] = 1 ; g [ b - 1 ] [ a - 1 ] = 1 ; } int k = bfs ( 0 , n , g , e ) ; System.out.println ( k ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { System.out.print ( e [ i ] [ j ] + " " ) ; } System.out.println ( ) ; } } public static int bfs ( int s , int n , int [ ] [ ] g , int [ ] [ ] e ) { int [ ] color = new int [ n ] ; int [ ] [ ] node2color = new int [ n ] [ n ] ; Queue < Integer > q = new LinkedList < > ( ) ; q.add ( s ) ; color [ s ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { e [ i ] [ j ] = 0 ; } } int k = 0 ; while ( ! q.isEmpty ( ) ) { int v = q.poll ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( g [ v ] [ i ] == 1 && color [ i ] == 0 ) { color [ i ] = 1 ; c ++ ; if ( c == color [ v ] ) { c ++ ; } node2color [ v ] [ i ] = c ; e [ Math.min ( v , i ) ] [ Math.max ( v , i ) ] = c ; q.add ( i ) ; } } k = Math.max ( k , c ) ; } return k ; } }
import java.util.Scanner ; public class atcoder_ABC119_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; double sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { double a = sc.nextDouble ( ) ; sum += a ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class codeforces_569_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int ans = 0 ; while ( n < t ) { n = n * q ; ans ++ ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC112_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] xyh = new int [ n ] [ 3 ] ; for ( int i = 0 ; i < n ; i ++ ) { xyh [ i ] [ 0 ] = sc.nextInt ( ) ; xyh [ i ] [ 1 ] = sc.nextInt ( ) ; xyh [ i ] [ 2 ] = sc.nextInt ( ) ; } int x0 = 0 , y0 = 0 , h0 = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( xyh [ i ] [ 2 ] > 0 ) { x0 = xyh [ i ] [ 0 ] ; y0 = xyh [ i ] [ 1 ] ; h0 = xyh [ i ] [ 2 ] ; break ; } } int [ ] [ ] cands = new int [ 101 ] [ 101 ] ; for ( int i = 0 ; i < 101 ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { cands [ i ] [ j ] = h0 + Math.abs ( i - x0 ) + Math.abs ( j - y0 ) ; } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { for ( int k = 0 ; k < 101 ; k ++ ) { cands [ j ] [ k ] = Math.max ( cands [ j ] [ k ] - Math.abs ( j - xyh [ i ] [ 0 ] ) - Math.abs ( k - xyh [ i ] [ 1 ] ) , 0 ) ; } } } int x = 0 , y = 0 , h = 0 ; for ( int i = 0 ; i < 101 ; i ++ ) { for ( int j = 0 ; j < 101 ; j ++ ) { if ( cands [ i ] [ j ] == xyh [ n - 1 ] [ 2 ] ) { x = i ; y = j ; h = cands [ i ] [ j ] ; break ; } } } System.out.println ( x + " " + y + " " + h ) ; } }
import java.util.Scanner ; public class atcoder_ABC104_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int D = sc.nextInt ( ) ; int G = sc.nextInt ( ) ; int [ ] A = new int [ D ] ; int [ ] B = new int [ D ] ; for ( int i = 0 ; i < D ; i ++ ) { A [ i ] = sc.nextInt ( ) ; B [ i ] = sc.nextInt ( ) ; } int ans = 1000000000 ; for ( int i = 0 ; i < ( 1 << D ) ; i ++ ) { int score = 0 ; int problem = 0 ; for ( int j = 0 ; j < D ; j ++ ) { if ( ( i & ( 1 << j ) ) != 0 ) { score += 100 * ( j + 1 ) * A [ j ] + B [ j ] ; problem += A [ j ] ; } } if ( score > G ) continue ; int left = G - score ; for ( int j = 0 ; j < D ; j ++ ) { if ( ( i & ( 1 << j ) ) != 0 ) continue ; if ( left > 100 * ( j + 1 ) * A [ j ] + B [ j ] ) continue ; int tmp = ( left + 100 * ( j + 1 ) - 1 ) / ( 100 * ( j + 1 ) ) ; ans = Math.min ( ans , problem + Math.min ( tmp , A [ j ] ) ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_678_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = a / b + 1 ; int d = c * b ; System.out.println ( d ) ; } }
import java.util.Scanner ; public class codeforces_400_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] == 1 ) { count ++ ; } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC105_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; int [ ] A = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] cum_remainders = new int [ n + 1 ] ; cum_remainders [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { cum_remainders [ i + 1 ] = ( cum_remainders [ i ] + A [ i ] ) % M ; } int combinations = 0 ; for ( int i = 0 ; i < n + 1 ; i ++ ) { for ( int j = i + 1 ; j < n + 1 ; j ++ ) { int count = 0 ; for ( int k = i ; k < j ; k ++ ) { if ( cum_remainders [ k ] == cum_remainders [ j ] ) { count ++ ; } } combinations += count * ( count - 1 ) / 2 ; } } System.out.println ( combinations ) ; } }
import java.util.Scanner ; public class atcoder_AGC033_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int H = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; int N = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; boolean judge = false ; int L = 0 ; int R = 0 ; int U = 0 ; int D = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( S.charAt ( i ) == 'L' ) { L ++ ; if ( L - R - c == 0 ) { judge = true ; break ; } } else if ( S.charAt ( i ) == 'R' ) { R ++ ; if ( c + ( R - L ) == W + 1 ) { judge = true ; break ; } } else if ( S.charAt ( i ) == 'U' ) { U ++ ; if ( U - D - r == 0 ) { judge = true ; break ; } } else if ( S.charAt ( i ) == 'D' ) { D ++ ; if ( r + ( D - U ) == H + 1 ) { judge = true ; break ; } } } if ( judge ) { System.out.println ( "NO" ) ; } else { System.out.println ( "YES" ) ; } } }
import java.util.Scanner ; public class codeforces_55_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; if ( n == 1 ) { System.out.println ( "YES" ) ; } else { while ( n % 2 == 0 ) { n = n / 2 ; } if ( n == 1 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC106_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { count ++ ; } else { break ; } } if ( count >= k ) { System.out.println ( 1 ) ; } else { System.out.println ( s.charAt ( count ) ) ; } } }
import java.util.Scanner ; public class atcoder_AGC046_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int C = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; long [ ] [ ] d = new long [ C + 1 ] [ D + 1 ] ; d [ A ] [ B ] = 1 ; for ( int i = A ; i <= C ; i ++ ) { for ( int j = B ; j <= D ; j ++ ) { d [ i ] [ j ] += d [ i - 1 ] [ j ] + d [ i ] [ j - 1 ] - d [ i - 1 ] [ j - 1 ] ; } } System.out.println ( d [ C ] [ D ] ) ; } }
import java.util.Scanner ; public class codeforces_7_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int t = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = 0 ; } int ind = 1 ; while ( t -- > 0 ) { String s = sc.next ( ) ; if ( s.equals ( "alloc" ) ) { int x = sc.nextInt ( ) ; int pos = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( a [ i ] == 0 ) { pos ++ ; if ( pos == x ) { for ( int j = i - x + 1 ; j <= i ; j ++ ) { a [ j ] = ind ; } System.out.println ( ind ++ ) ; break ; } } else { pos = 0 ; } } if ( pos == 0 ) { System.out.println ( "NULL" ) ; } } else if ( s.equals ( "erase" ) ) { int x = sc.nextInt ( ) ; if ( ! ( x > 0 && x <= m ) || a [ x - 1 ] != x ) { System.out.println ( "ILLEGAL_ERASE_ARGUMENT" ) ; } else { a [ x - 1 ] = 0 ; } } else { int cnt = 0 ; for ( int i = 0 ; i < m ; i ++ ) { if ( a [ i ] == 0 ) { cnt ++ ; } } for ( int i = 0 ; i < cnt ; i ++ ) { a [ m - cnt + i ] = 0 ; } } } } } }
[INST:java]
import java.util.Scanner ; public class atcoder_AGC021_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int [ ] X = new int [ N ] ; int [ ] Y = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { X [ i ] = stdIn.nextInt ( ) ; Y [ i ] = stdIn.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i != j ) { double dx = X [ j ] - X [ i ] ; double dy = Y [ j ] - Y [ i ] ; double d = Math.sqrt ( dx * dx + dy * dy ) ; double theta = Math.acos ( dx / d ) ; if ( dy < 0 ) { theta = 2 * Math.PI - theta ; } ans += theta ; } } } System.out.println ( ans / ( 2 * Math.PI ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC089_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; String [ ] S = new String [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { S [ i ] = sc.next ( ) ; } int [ ] march = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { march [ i ] = 0 ; } for ( int i = 0 ; i < N ; i ++ ) { if ( S [ i ].charAt ( 0 ) == 'M' || S [ i ].charAt ( 0 ) == 'A' || S [ i ].charAt ( 0 ) == 'R' || S [ i ].charAt ( 0 ) == 'C' || S [ i ].charAt ( 0 ) == 'H' ) { march [ "MARCH".indexOf ( S [ i ].toUpperCase ( ).charAt ( 0 ) ) ] ++ ; } } long ans = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { for ( int j = 0 ; j < 5 ; j ++ ) { for ( int k = 0 ; k < 5 ; k ++ ) { if ( i != j && j != k && k != i ) { ans += march [ i ] * march [ j ] * march [ k ] ; } } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC013_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 1 ; i < N - 1 ; i ++ ) { if ( ( A [ i - 1 ] < A [ i ] && A [ i ] > A [ i + 1 ] ) || ( A [ i - 1 ] > A [ i ] && A [ i ] < A [ i + 1 ] ) ) { ans ++ ; } } System.out.println ( ans + 1 ) ; } }
import java.util.Scanner ; public class codeforces_609_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int res = 0 ; int [ ] cnt = new int [ 100001 ] ; for ( int i = 0 ; i < n ; i ++ ) { cnt [ a [ i ] ] ++ ; } for ( int i = 0 ; i < n ; i ++ ) { if ( cnt [ a [ i ] ] > 1 ) { res += n - i - cnt [ a [ i ] ] ; cnt [ a [ i ] ] -- ; } else { res += n - i - 1 ; } } System.out.println ( res ) ; } }
import java.util.Scanner ; public class atcoder_ABC151_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; char c = sc.next ( ).charAt ( 0 ) ; String s = "abcdefghijklmnopqrstuvwxyz" ; int index = s.indexOf ( c ) ; char ans = s.charAt ( index + 1 ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_581_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ n ] ; dp [ n - 1 ] = 0 ; int max = arr [ n - 1 ] ; for ( int i = n - 2 ; i >= 0 ; i -- ) { dp [ i ] = Math.max ( 0 , max - arr [ i ] + 1 ) ; if ( arr [ i ] > max ) { max = arr [ i ] ; } } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( dp [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC126_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] [ ] edge = new int [ n ] [ ] ; for ( int i = 0 ; i < m ; i ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; edge [ x - 1 ] [ 0 ] = y - 1 ; edge [ y - 1 ] [ 0 ] = x - 1 ; } int ans = 0 ; boolean [ ] used = new boolean [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( ! used [ i ] ) { ans ++ ; used [ i ] = true ; int q = 1 ; while ( q > 0 ) { int node = edge [ q - 1 ] [ 0 ] ; used [ node ] = true ; q = 0 ; for ( int nextnode : edge [ node ] ) { if ( ! used [ nextnode ] ) { q ++ ; } } } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC118_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int gcd = arr [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { gcd = gcd ( gcd , arr [ i ] ) ; } System.out.println ( gcd ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; else return gcd ( b , a % b ) ; } }
import java.util.Scanner ; public class atcoder_ABC132_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] coef = new int [ n ] ; for ( int i = 1 ; i <= ( int ) Math.sqrt ( n ) ; i ++ ) { coef [ i - 1 ] = n / i - n / ( i + 1 ) ; } for ( int i = 0 ; i < n - coef.length ; i ++ ) { coef [ coef.length + i ] = 1 ; } for ( int i = coef.length - 1 ; i >= 0 ; i -- ) { coef [ i ] = coef [ coef.length - 1 - i ] ; } int [ ] [ ] dp = new int [ k + 1 ] [ coef.length ] ; dp [ 0 ] [ 0 ] = 1 ; for ( int i = 1 ; i <= k ; i ++ ) { int tmp = 0 ; for ( int j = coef.length - 1 ; j >= 0 ; j -- ) { tmp += dp [ i - 1 ] [ coef.length - 1 - j ] ; tmp %= 1000000007 ; dp [ i ] [ j ] = coef [ j ] * tmp ; dp [ i ] [ j ] %= 1000000007 ; } } System.out.println ( dp [ k ] [ 0 ] ) ; } }
import java.util.Scanner ; public class codeforces_92_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int ans = 0 ; while ( m >= n ) { m -= n ; ans ++ ; } System.out.println ( m ) ; } }
import java.util.Scanner ; public class atcoder_ABC170_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int sum = a + b + c + d + e ; if ( sum == 10 ) { System.out.println ( 1 ) ; } else if ( sum == 11 ) { System.out.println ( 2 ) ; } else if ( sum == 12 ) { System.out.println ( 3 ) ; } else if ( sum == 13 ) { System.out.println ( 4 ) ; } else if ( sum == 14 ) { System.out.println ( 5 ) ; } else if ( sum == 15 ) { System.out.println ( 6 ) ; } else if ( sum == 16 ) { System.out.println ( 7 ) ; } else if ( sum == 17 ) { System.out.println ( 8 ) ; } else if ( sum == 18 ) { System.out.println ( 9 ) ; } else if ( sum == 19 ) { System.out.println ( 10 ) ; } else if ( sum == 20 ) { System.out.println ( 11 ) ; } else if ( sum == 21 ) { System.out.println ( 12 ) ; } else if ( sum == 22 ) { System.out.println ( 13 ) ; } else if ( sum == 23 ) { System.out.println ( 14 ) ; } else if ( sum == 24 ) { System.out.println ( 15 ) ; } else if ( sum == 25 ) { System.out.println ( 16 ) ; } else if ( sum == 26 ) { System.out.println ( 17 ) ; } else if ( sum == 27 ) { System.out.println ( 18 ) ; } else if ( sum == 28 ) { System.out.println ( 19 ) ; } else if ( sum == 29 ) { System.out.println ( 20 ) ; } else if ( sum == 30 ) { System.out.println ( 21 ) ; } else if ( sum == 31 ) { System.out.println ( 22 ) ; } else if ( sum == 32 ) { System.out.println ( 23 ) ; } else if ( sum == 33 ) { System.out.println ( 24 ) ; } else if ( sum == 34 ) { System.out.println ( 25 ) ; } else if ( sum == 35 ) { System.out.println ( 26 ) ; } else if ( sum == 36 ) { System.out.println ( 27 ) ; } else if ( sum == 37 ) { System.out.println ( 28 ) ; } else if ( sum == 38 ) { System.out.println ( 29 ) ; } else if ( sum == 39 ) { System.out.println ( 30 ) ; } else if ( sum == 40 ) { System.out.println ( 31 ) ; } else if ( sum == 41 ) { System.out.println ( 32 ) ; } else if ( sum == 42 ) { System.out.println ( 33 ) ; } else if ( sum == 43 ) { System.out.println ( 34 ) ; } else if ( sum == 44 ) { System.out.println ( 35 ) ; } else if ( sum == 45 ) { System.out.println ( 36 ) ; } else if ( sum == 46 ) { System.out.println ( 37 ) ; } else if ( sum == 47 ) { System.out.println ( 38 ) ; } else if ( sum == 48 ) { System.out.println ( 39 ) ; } else if ( sum == 49 ) { System.out.println ( 40 ) ; } else if ( sum == 50 ) { System.out.println ( 41 ) ; } else if ( sum == 51 ) { System.out.println ( 42 ) ; } else if ( sum == 52 ) { System.out.println ( 43 ) ; } else if ( sum == 53 ) { System.out.println ( 44 ) ; } else if ( sum == 54 ) { System.out.println ( 45 ) ; } else if ( sum == 55 ) { System.out.println ( 46 ) ; } else if ( sum == 56 ) { System.out.println ( 47 ) ; } else if ( sum == 57 ) { System.out.println ( 48 ) ; } else if ( sum == 58 ) { System.out.println ( 49 ) ; } else if ( sum == 59 ) { System.out.println ( 50 ) ; } else if ( sum == 60 ) { System.out.println ( 51 ) ; } else if ( sum == 61 ) { System.out.println ( 52 ) ; } else if ( sum == 62 ) { System.out.println ( 53 ) ; } else if ( sum == 63 ) { System.out.println ( 54 ) ; } else if ( sum == 64 ) { System.out.println ( 55 ) ; } else if ( sum == 65 ) { System.out.println ( 56 ) ; } else if ( sum == 66 ) { System.out.println ( 57 ) ; } else if ( sum == 67 ) { System.out.println ( 58 ) ; } else if ( sum == 68 ) { System.out.println ( 59 ) ; } else if ( sum == 69 ) { System.out.println ( 60 ) ; } else if ( sum == 70 ) { System.out.println ( 61 ) ; } else if ( sum == 71 ) { System.out.println ( 62 ) ; } else if ( sum == 72 ) { System.out.println ( 63 ) ; } else if ( sum == 73 ) { System.out.println ( 64 ) ; } else if ( sum == 74 ) { System.out.println ( 65 ) ; } else if ( sum == 75 ) { System.out.println ( 66 ) ; } else if ( sum == 76 ) { System.out.println ( 67 ) ; } else if ( sum == 77 ) { System.out.println ( 68 ) ; } else if ( sum == 78 ) { System.out.println ( 69 ) ; } else if ( sum == 79 ) { System.out.println ( 70 ) ; } else if ( sum == 80 ) { System.out.println ( 71 ) ; } else if ( sum == 81 ) { System.out.println ( 72 ) ; } else if ( sum == 82 ) { System.out.println ( 73 ) ; } else if ( sum == 83 ) { System.out.println ( 74 ) ; } else if ( sum == 84 ) { System.out.println ( 75 ) ; } else if ( sum == 85 ) { System.out.println ( 76 ) ; } else if ( sum == 86 ) { System.out.println ( 77 ) ; } else if ( sum == 87 ) { System.out.println ( 78 ) ; } else if ( sum == 88 ) { System.out.println ( 79 ) ; } else if ( sum == 89 ) { System.out.println ( 80 ) ; } else if ( sum == 90 ) { System.out.println ( 81 ) ; } else if ( sum == 91 ) { System.out.println ( 82 ) ; } else if ( sum == 92 ) { System.out.println ( 83 ) ; } else if ( sum == 93 ) { System.out.println ( 84 ) ; } else if ( sum == 94 ) { System.out.println ( 85 ) ; } else if ( sum == 95 ) { System.out.println ( 86 ) ; } else if ( sum == 96 ) { System.out.println ( 87 ) ; } else if ( sum == 97 ) { System.out.println ( 88 ) ; } else if ( sum == 98 ) { System.out.println ( 89 ) ; } else if ( sum == 99 ) { System.out.println ( 90 ) ; } else if ( sum == 100 ) { System.out.println ( 91 ) ; } } }
import java.util.Scanner ; public class codeforces_653_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int [ ] sorted = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { sorted [ i ] = arr [ i ] ; } Arrays.sort ( sorted ) ; boolean flag = false ; for ( int i = 0 ; i < n ; i ++ ) { if ( sorted [ i ] + 1 < sorted [ i ] + 2 ) { flag = true ; break ; } } if ( flag ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class codeforces_8_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; int x = 0 ; int y = 0 ; int [ ] dx = { 0 , 0 , 1 , -1 } ; int [ ] dy = { 1 , -1 , 0 , 0 } ; boolean bug = false ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { int c = s.charAt ( i ) - 'A' ; x += dx [ c ] ; y += dy [ c ] ; if ( ! ( x >= 0 && x < 3 && y >= 0 && y < 3 ) ) { bug = true ; break ; } if ( x == 1 && y == 1 ) { bug = true ; break ; } if ( x == 1 && y == 0 ) { if ( s.charAt ( i ) == 'L' ) { bug = true ; break ; } } if ( x == 2 && y == 0 ) { if ( s.charAt ( i ) == 'R' ) { bug = true ; break ; } } if ( x == 0 && y == 1 ) { if ( s.charAt ( i ) == 'U' ) { bug = true ; break ; } } if ( x == 0 && y == 2 ) { if ( s.charAt ( i ) == 'D' ) { bug = true ; break ; } } if ( x == 1 && y == 2 ) { if ( s.charAt ( i ) == 'U' ) { bug = true ; break ; } } if ( x == 2 && y == 1 ) { if ( s.charAt ( i ) == 'D' ) { bug = true ; break ; } } } if ( bug ) { System.out.println ( "BUG" ) ; } else { System.out.println ( "OK" ) ; } } } }
import java.util.Scanner ; public class codeforces_146_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int h1 = 0 ; int h2 = 0 ; int x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] != 4 && arr [ i ] != 7 ) { System.out.println ( "NO" ) ; x = 1 ; break ; } if ( i < n / 2 ) { h1 += arr [ i ] ; } else { h2 += arr [ i ] ; } } if ( x == 0 ) { if ( h1 == h2 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } } }
[INST:java]
import java.util.Scanner ; public class codeforces_299_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int gcd = arr [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { gcd = gcd ( gcd , arr [ i ] ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % gcd != 0 ) { ans ++ ; } } System.out.println ( ans ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) { return a ; } else { return gcd ( b , a % b ) ; } } }
import java.util.Scanner ; public class codeforces_518_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int [ ] countS = new int [ 26 ] ; int [ ] countT = new int [ 26 ] ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { countS [ S.charAt ( i ) - 'a' ] ++ ; } for ( int i = 0 ; i < T.length ( ) ; i ++ ) { countT [ T.charAt ( i ) - 'a' ] ++ ; } int ans = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { ans += Math.min ( countS [ i ] , countT [ i ] ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_421_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int [ ] listA = new int [ a ] ; int [ ] listB = new int [ b ] ; for ( int i = 0 ; i < a ; i ++ ) { listA [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < b ; i ++ ) { listB [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( listA [ i ] == 1 ) { System.out.print ( 1 + " " ) ; } else { System.out.print ( 2 + " " ) ; } } } }
import java.util.Scanner ; public class codeforces_340_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int lcm = lcm ( x , y ) ; int ans = b / lcm - ( a - 1 ) / lcm ; System.out.println ( ans ) ; } public static int lcm ( int x , int y ) { int gcd = gcd ( x , y ) ; return x * y / gcd ; } public static int gcd ( int x , int y ) { if ( y == 0 ) return x ; return gcd ( y , x % y ) ; } }
import java.util.Scanner ; public class atcoder_ABC140_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] S = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { S [ i ] = sc.nextInt ( ) ; } int [ ] flag = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { flag [ i ] = 1 ; } int [ ] cur = new int [ 1 ] ; cur [ 0 ] = S [ 0 ] ; flag [ 0 ] = 0 ; for ( int i = 1 ; i < N ; i ++ ) { int j = 0 ; int jM = cur.length ; for ( int k = 0 ; k < N ; k ++ ) { if ( flag [ k ] == 1 && S [ k ] < cur [ j ] ) { cur [ j + 1 ] = S [ k ] ; j ++ ; flag [ k ] = 0 ; if ( j == jM ) { break ; } } } if ( j != jM ) { System.out.println ( "No" ) ; return ; } cur [ 0 ] = cur [ j ] ; } System.out.println ( "Yes" ) ; } }
import java.util.Scanner ; public class codeforces_534_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int v1 = sc.nextInt ( ) ; int v2 = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int a = 1 ; int v = v1 ; int distance = 0 ; for ( int i = 0 ; i < t ; i ++ ) { if ( v - v2 > ( t - i - 1 ) * d ) { a *= - 1 ; v = ( t - i - 1 ) * d + v2 ; } distance += v ; v += a * d ; } System.out.println ( distance ) ; } }
import java.util.Scanner ; public class codeforces_672_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ 370 ] ; int [ ] rev = new int [ 370 ] ; int [ ] res = new int [ 370 ] ; int cnt = 0 ; for ( int i = 1 ; i <= 370 ; i ++ ) { int p = i , q = i ; while ( p != 0 ) { p /= 10 ; cnt ++ ; } if ( cnt == 1 ) { arr [ i ] = i ; } else if ( cnt == 2 ) { int j = 0 ; while ( q != 0 ) { rev [ ++ j ] = q % 10 ; q /= 10 ; } for ( int k = 0 ; k < j ; k ++ ) { res [ i ] += rev [ j - k ] ; } } else if ( cnt == 3 ) { int j = 0 ; while ( q != 0 ) { rev [ ++ j ] = q % 10 ; q /= 10 ; } for ( int k = 0 ; k < j ; k ++ ) { res [ i ] += rev [ j - k ] ; } } cnt = 0 ; } res [ 370 ] = res [ 370 ] - 1 ; res [ 370 ] = res [ 370 ] - 1 ; System.out.println ( res [ n ] ) ; } }
import java.util.Scanner ; public class codeforces_148_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int P = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; int T = sc.nextInt ( ) ; int F = sc.nextInt ( ) ; int C = sc.nextInt ( ) ; if ( D <= P ) { System.out.println ( 0 ) ; return ; } int result = 0 ; int position = T * P ; while ( position < C ) { result ++ ; position += P * position / D ; position += P * F ; position += P * position / ( D - P ) ; } System.out.println ( result ) ; } }
import java.util.Scanner ; public class codeforces_59_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int upper = 0 ; int lower = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) >= 'A' && S.charAt ( i ) <= 'Z' ) { upper ++ ; } else { lower ++ ; } } if ( upper > lower ) { System.out.println ( S.toUpperCase ( ) ) ; } else { System.out.println ( S.toLowerCase ( ) ) ; } } }
import java.util.Scanner ; public class codeforces_474_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int q = sc.nextInt ( ) ; int [ ] b = new int [ q ] ; for ( int i = 0 ; i < q ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < q ; i ++ ) { System.out.println ( a [ b [ i ] - 1 ] ) ; } } }
import java.util.Scanner ; public class codeforces_267_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > b [ i ] ) { int total = 0 ; while ( a [ i ] > 0 && b [ i ] > 0 ) { total += a [ i ] / b [ i ] ; a [ i ] %= b [ i ] ; if ( a [ i ] > 0 ) { total += b [ i ] / a [ i ] ; b [ i ] %= a [ i ] ; } } System.out.println ( total ) ; } else if ( a [ i ] < b [ i ] ) { int total = 0 ; while ( a [ i ] > 0 && b [ i ] > 0 ) { total += b [ i ] / a [ i ] ; b [ i ] %= a [ i ] ; if ( b [ i ] > 0 ) { total += a [ i ] / b [ i ] ; a [ i ] %= b [ i ] ; } } System.out.println ( total ) ; } else { System.out.println ( 1 ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC172_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; long ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { ans += i * ( N / i ) * ( N / i + 1 ) / 2 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC112_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int age = sc.nextInt ( ) ; if ( age == 1 ) { System.out.println ( "Hello World" ) ; } else { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; System.out.println ( a + b ) ; } } }
import java.util.Scanner ; public class codeforces_342_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int t = 0 ; int l = 0 ; int r = 0 ; String res = "" ; int i = 1 ; int j = s ; while ( i <= n ) { if ( i == t && ( l <= j && j <= r || l <= j + ( s < f ? 1 : - 1 ) && j + ( s < f ? 1 : - 1 ) <= r ) ) { res += "X" ; } else { res += ( s < f ? "R" : "L" ) ; j += ( s < f ? 1 : - 1 ) ; } i ++ ; if ( i > t && k < m ) { t = sc.nextInt ( ) ; l = sc.nextInt ( ) ; r = sc.nextInt ( ) ; k ++ ; } } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_356_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int [ ] ans = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; for ( int j = l ; j <= r ; j ++ ) { if ( arr [ j - 1 ] == 0 && j != x ) { arr [ j - 1 ] = x ; } else if ( j >= x ) { arr [ j - 1 ] = r + 1 ; } else { arr [ j - 1 ] = x ; } } } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( arr [ i ] + " " ) ; } } }
import java.util.Scanner ; public class atcoder_ABC178_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; if ( a == 0 ) { System.out.println ( 1 ) ; } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class atcoder_ABC158_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int ans = 0 ; int rep = N / ( A + B ) ; ans += rep * A ; int res = N - rep * ( A + B ) ; ans += Math.min ( res , A ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_296_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] m = sc.nextLine ( ).split ( "" ) ; boolean possible = true ; for ( String s : m ) { if ( m.length >= n / 2 + 1 ) { possible = false ; break ; } } if ( possible ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class atcoder_AGC019_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int best1L = Math.min ( q * 4 , Math.min ( h * 2 , s ) ) ; int best2L = Math.min ( d , best1L * 2 ) ; if ( n % 2 == 0 ) { System.out.println ( best2L * n / 2 ) ; } else { System.out.println ( best2L * n / 2 + best1L ) ; } } }
import java.util.Scanner ; public class atcoder_ABC134_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] [ ] ans = new int [ N ] [ ] ; for ( int i = 0 ; i < N ; i ++ ) { int idx = 0 ; for ( int j = 0 ; j < ans.length ; j ++ ) { if ( ans [ j ] [ ans [ j ] . length - 1 ] <= A [ i ] ) { idx = j + 1 ; } else { break ; } } if ( idx == ans.length ) { ans [ idx ] = new int [ 1 ] ; ans [ idx ] [ 0 ] = A [ i ] ; } else { ans [ idx ] [ ans [ idx ] . length ] = A [ i ] ; } } int res = 0 ; for ( int i = 0 ; i < ans.length ; i ++ ) { res += ans [ i ] . length ; } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_387_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int h1 = sc.nextInt ( ) ; int m1 = sc.nextInt ( ) ; int h2 = sc.nextInt ( ) ; int m2 = sc.nextInt ( ) ; int ans = ( ( h1 * 60 + m1 ) - ( h2 * 60 + m2 ) ) % 1440 ; System.out.println ( ( ans / 60 ) + ":" + ( ans % 60 ) ) ; } }
import java.util.Scanner ; public class codeforces_665_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int at = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int bt = sc.nextInt ( ) ; int t1 = sc.nextInt ( ) ; int t2 = sc.nextInt ( ) ; int st = t2 + ( t1 - 5 ) * 60 ; int fin = st + at ; int now = 0 ; int ans = 0 ; while ( now < fin && now < 1140 ) { if ( ( ( now + bt ) > st ) && ( ( now + b ) % 10 == 0 ) && ( ( now + b ) % 60 == 0 ) ) { ans ++ ; } now += b ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_154_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { String x = sc.next ( ) ; int a = 0 ; int b = 0 ; for ( int j = 0 ; j < s.length ( ) ; j ++ ) { if ( s.charAt ( j ) == x.charAt ( 0 ) ) { a ++ ; } else if ( s.charAt ( j ) == x.charAt ( 1 ) ) { b ++ ; } else { ans += Math.min ( a , b ) ; a = 0 ; b = 0 ; } } ans += Math.min ( a , b ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC150_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long num = sc.nextLong ( ) ; Set < Long > numSet = new HashSet < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { numSet.add ( sc.nextLong ( ) ) ; } Set < Integer > twoTimesSet = new HashSet < > ( ) ; for ( Long i : numSet ) { for ( int multiplier = 1 ; multiplier <= 30 ; multiplier ++ ) { i = i / 2 ; if ( i % 2 != 0 ) { twoTimesSet.add ( multiplier ) ; break ; } } } if ( twoTimesSet.size ( ) != 1 ) { System.out.println ( 0 ) ; return ; } List < Long > numList = new ArrayList < > ( numSet ) ; long lcm = numList.get ( 0 ) ; for ( int i = 1 ; i < numList.size ( ) ; i ++ ) { lcm = lcm * numList.get ( i ) / Math.gcd ( lcm , numList.get ( i ) ) ; } System.out.println ( ( num - lcm / 2 ) / lcm + 1 ) ; } } }
import java.util.Scanner ; public class codeforces_216_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; int [ ] b = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = 1 ; } for ( int i = 0 ; i < m ; i ++ ) { a [ b [ i ] ] ++ ; a [ b [ i ] ] += a [ b [ i ] - 1 ] ; } int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( a [ i ] > 1 && a [ i ] % 2 == 1 && 2 * a [ i ] == a [ i ] + a [ i - 1 ] ) { ans ++ ; } } if ( ( n - ans ) % 2 == 1 ) { ans ++ ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_612_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { b [ a [ i - 1 ] ] = i ; } int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { res += Math.abs ( b [ i ] - b [ i - 1 ] ) ; } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_583_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int counter = 0 ; int counterTurns = - 1 ; while ( counter < n ) { int variable319 = 1 ; counterTurns = counterTurns + variable319 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] != - 1 && a [ i ] <= counter ) { counter ++ ; a [ i ] = - 1 ; } } a = reverse ( a ) ; } System.out.println ( counterTurns ) ; } public static int [ ] reverse ( int [ ] a ) { int n = a.length ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = a [ n - i - 1 ] ; } return b ; } }
import java.util.Scanner ; public class codeforces_607_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] l = new int [ 1000010 ] ; int [ ] dp = new int [ 1000010 ] ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; l [ a ] = b ; } if ( l [ 0 ] > 0 ) { dp [ 0 ] = 1 ; } int mx = 0 ; for ( int i = 1 ; i < 1000010 ; i ++ ) { if ( l [ i ] == 0 ) { dp [ i ] = dp [ i - 1 ] ; } else if ( l [ i ] >= i ) { dp [ i ] = 1 ; } else { dp [ i ] = dp [ i - l [ i ] - 1 ] + 1 ; } if ( dp [ i ] > mx ) { mx = dp [ i ] ; } } System.out.println ( n - mx ) ; } }
import java.util.Scanner ; public class atcoder_AGC010_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } if ( sum % ( n * ( n + 1 ) / 2 ) != 0 ) { System.out.println ( "NO" ) ; } else { int k = sum / ( n * ( n + 1 ) / 2 ) ; a [ n ] = a [ 0 ] ; int sum1 = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum1 += ( k - a [ i - 1 ] + a [ i ] ) % n ; } if ( sum1 != 0 || sum1 / n != n ) { System.out.println ( "NO" ) ; } else { System.out.println ( "YES" ) ; } } } }
import java.util.Scanner ; public class codeforces_190_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; if ( a == 0 && b == 0 ) { System.out.println ( a + " " + b ) ; return ; } if ( a == 0 ) { System.out.println ( "Impossible" ) ; return ; } if ( b > a ) { System.out.println ( b + " " + ( a + b ) ) ; } else { System.out.println ( a + " " + ( a + b ) ) ; } } }
import java.util.Scanner ; public class codeforces_387_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= b [ 0 ] ) { ans ++ ; } else { break ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC137_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] x = new int [ n ] ; int [ ] y = new int [ m ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { int d = x [ i ] ; int s = sc.nextInt ( ) ; if ( m - y.length >= d ) { y [ y.length ] = s ; } else { y [ y.length ] = s ; y [ y.length - 1 ] = 0 ; } } int sum = 0 ; for ( int i = 0 ; i < y.length ; i ++ ) { sum += y [ i ] ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC120_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String s = sc.next ( ) ; int ans = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_397_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int t = stdIn.nextInt ( ) ; while ( t -- > 0 ) { int a = stdIn.nextInt ( ) ; int b = stdIn.nextInt ( ) ; int c = stdIn.nextInt ( ) ; if ( a <= b * c ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } } }
[INST:java]
import java.util.Scanner ; public class atcoder_ARC102_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int K = sc.nextInt ( ) ; int N = sc.nextInt ( ) ; long ans = 0 ; for ( int i = 2 ; i <= 2 * K + 1 ; i ++ ) { if ( i <= K + 1 ) { long comb = 1 ; for ( int j = 0 ; j < i - 1 ; j ++ ) { comb = comb * ( i - j ) / ( j + 1 ) ; } long tmp = 0 ; for ( int j = 0 ; j < N ; j ++ ) { tmp += comb * ( ( long ) Math.pow ( 2 , j ) ) ; } ans += tmp ; } else { ans += ans - ( long ) Math.pow ( 10 , 18 ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC148_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ta = sc.nextInt ( ) ; int ao = sc.nextInt ( ) ; ta -- ; ao -- ; int [ ] [ ] g = new int [ n ] [ n ] ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; g [ a - 1 ] [ b - 1 ] = 1 ; g [ b - 1 ] [ a - 1 ] = 1 ; } int [ ] ta_dist = new int [ n ] ; int [ ] ao_dist = new int [ n ] ; ta_dist [ ta ] = 0 ; ao_dist [ ao ] = 0 ; dfs ( g , ta_dist , ta ) ; dfs ( g , ao_dist , ao ) ; int res = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( ta_dist [ i ] > ao_dist [ i ] ) continue ; res = Math.max ( res , ao_dist [ i ] ) ; } System.out.println ( res - 1 ) ; } static void dfs ( int [ ] [ ] g , int [ ] dist , int v ) { for ( int i = 0 ; i < g [ v ].length ; i ++ ) { if ( dist [ g [ v ] [ i ] ] != 0 ) continue ; dist [ g [ v ] [ i ] ] = dist [ v ] + 1 ; dfs ( g , dist , g [ v ] [ i ] ) ; } } }
import java.util.Scanner ; public class atcoder_ABC070_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; if ( b <= c || d <= a ) { System.out.println ( 0 ) ; } else { int [ ] arr = { a , b , c , d } ; Arrays.sort ( arr ) ; System.out.println ( arr [ 2 ] - arr [ 1 ] ) ; } } }
import java.util.Scanner ; public class atcoder_ABC152_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] arr = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = 1 ; int pos = 0 ; for ( int i = 1 ; i < N ; i ++ ) { if ( arr [ pos ] > arr [ i ] ) { ans ++ ; pos = i ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC111_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] x = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc.nextInt ( ) ; } int a = 0 ; int b = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 == 0 ) { a += x [ i ] ; } else { b += x [ i ] ; } } int cnta = 0 ; int cntb = 0 ; int vala = 0 ; int vala1 = 0 ; int maxCnta = 0 ; int maxCnta1 = 0 ; for ( int i = 0 ; i < a ; i ++ ) { cnta += x [ i ] ; if ( maxCnta < cnta ) { vala = i ; maxCnta = cnta ; } if ( maxCnta1 < cnta && vala != i ) { maxCnta1 = cnta ; vala1 = i ; } } int valb = 0 ; int valb1 = 0 ; int maxCntb = 0 ; int maxCntb1 = 0 ; for ( int i = 0 ; i < b ; i ++ ) { cntb += x [ i ] ; if ( maxCntb < cntb ) { valb = i ; maxCntb = cntb ; } if ( maxCntb1 < cntb && valb != i ) { maxCntb1 = cntb ; valb1 = i ; } } if ( valb != vala ) { int res = 0 ; for ( int i = 0 ; i < a ; i ++ ) { if ( x [ i ] != vala ) { res ++ ; } } for ( int i = 0 ; i < b ; i ++ ) { if ( x [ i ] != valb ) { res ++ ; } } System.out.println ( res ) ; } else { int resa = 0 ; int resb = 0 ; int resa1 = 0 ; int resb1 = 0 ; for ( int i = 0 ; i < a ; i ++ ) { if ( x [ i ] != vala ) { resa ++ ; } if ( x [ i ] != vala1 ) { resa1 ++ ; } } for ( int i = 0 ; i < b ; i ++ ) { if ( x [ i ] != valb ) { resb ++ ; } if ( x [ i ] != valb1 ) { resb1 ++ ; } } System.out.println ( Math.min ( resa + resb1 , resa1 + resb ) ) ; } } }
import java.util.Scanner ; public class codeforces_268_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] a = new int [ n ] [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] [ 0 ] = sc.nextInt ( ) ; a [ i ] [ 1 ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) continue ; if ( a [ i ] [ 0 ] == a [ j ] [ 1 ] ) { ans ++ ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_651_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int sum = x + y ; int ans = sum - 3 + ( ( y - x ) % 3 > 0 ? 1 : 0 ) ; System.out.println ( Math.max ( ans , 0 ) ) ; } }
import java.util.Scanner ; public class codeforces_274_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] % k != 0 || ! isInSet ( arr [ i ] / k , count ) ) { count ++ ; } } System.out.println ( count ) ; } private static boolean isInSet ( int num , int count ) { for ( int i = 0 ; i < count ; i ++ ) { if ( num == i ) { return true ; } } return false ; } }
import java.util.Scanner ; public class codeforces_306_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int q = n / m ; int r = n % m ; int [ ] a = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = q ; } for ( int i = 0 ; i < r ; i ++ ) { a [ i ] ++ ; } for ( int i = 0 ; i < m ; i ++ ) { System.out.print ( a [ i ] + " " ) ; } } }
import java.util.Scanner ; public class codeforces_400_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( s.charAt ( i * m + j ) == 'S' ) { count ++ ; break ; } } } System.out.println ( count ) ; } }
[INST:java]
import java.util.Scanner ; public class codeforces_327_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) count ++ ; } if ( s.indexOf ( '0' ) == - 1 ) { System.out.println ( n - 1 ) ; } else { int zeroIndex = s.indexOf ( '0' ) ; int max = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { int index = s.indexOf ( '1' , i + 1 ) ; if ( index != - 1 ) { max = Math.max ( max , 2 + 2 * ( Math.abs ( zeroIndex - index ) ) - ( Math.abs ( zeroIndex - index ) - 1 ) ) ; } } } System.out.println ( count + max ) ; } } }
import java.util.Scanner ; public class codeforces_567_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { if ( i == 0 ) { System.out.print ( a [ i + 1 ] - a [ i ] + " " + a [ n - 1 ] - a [ i ] + "\n" ) ; } else if ( i == n - 1 ) { System.out.print ( a [ n - 1 ] - a [ n - 2 ] + " " + a [ n - 1 ] - a [ 0 ] + "\n" ) ; } else { if ( a [ i ] - a [ i - 1 ] > a [ i + 1 ] - a [ i ] ) { System.out.print ( a [ i + 1 ] - a [ i ] + " " ) ; } else { System.out.print ( a [ i ] - a [ i - 1 ] + " " ) ; } if ( a [ n - 1 ] - a [ i ] > a [ i ] - a [ 0 ] ) { System.out.print ( a [ n - 1 ] - a [ i ] + "\n" ) ; } else { System.out.print ( a [ i ] - a [ 0 ] + "\n" ) ; } } } } }
import java.util.Scanner ; public class atcoder_ABC109_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] str = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { str [ i ] = sc.next ( ) ; } String s = str [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { if ( ! s.endsWith ( str [ i ] ) ) { System.out.println ( "No" ) ; return ; } s += str [ i ] ; } System.out.println ( "Yes" ) ; } }
import java.util.Scanner ; public class codeforces_579_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int x = 1 ; while ( n > 1 ) { int k = ( int ) ( Math.log ( n ) / Math.log ( 2 ) ) ; n -= ( int ) ( Math.pow ( 2 , k ) ) ; x ++ ; } System.out.println ( x ) ; } }
import java.util.Scanner ; public class codeforces_189_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int o = sc.nextInt ( ) ; int p = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int aa = sc.nextInt ( ) ; int bb = sc.nextInt ( ) ; int cc = sc.nextInt ( ) ; int dd = sc.nextInt ( ) ; int ee = sc.nextInt ( ) ; int ff = sc.nextInt ( ) ; int gg = sc.nextInt ( ) ; int hh = sc.nextInt ( ) ; int ii = sc.nextInt ( ) ; int jj = sc.nextInt ( ) ; int kk = sc.nextInt ( ) ; int ll = sc.nextInt ( ) ; int mm = sc.nextInt ( ) ; int nn = sc.nextInt ( ) ; int oo = sc.nextInt ( ) ; int pp = sc.nextInt ( ) ; int qq = sc.nextInt ( ) ; int rr = sc.nextInt ( ) ; int ss = sc.nextInt ( ) ; int tt = sc.nextInt ( ) ; int uu = sc.nextInt ( ) ; int vv = sc.nextInt ( ) ; int ww = sc.nextInt ( ) ; int xx = sc.nextInt ( ) ; int yy = sc.nextInt ( ) ; int zz = sc.nextInt ( ) ; int aa1 = sc.nextInt ( ) ; int bb1 = sc.nextInt ( ) ; int cc1 = sc.nextInt ( ) ; int dd1 = sc.nextInt ( ) ; int ee1 = sc.nextInt ( ) ; int ff1 = sc.nextInt ( ) ; int gg1 = sc.nextInt ( ) ; int hh1 = sc.nextInt ( ) ; int ii1 = sc.nextInt ( ) ; int jj1 = sc.nextInt ( ) ; int kk1 = sc.nextInt ( ) ; int ll1 = sc.nextInt ( ) ; int mm1 = sc.nextInt ( ) ; int nn1 = sc.nextInt ( ) ; int oo1 = sc.nextInt ( ) ; int pp1 = sc.nextInt ( ) ; int qq1 = sc.nextInt ( ) ; int rr1 = sc.nextInt ( ) ; int ss1 = sc.nextInt ( ) ; int tt1 = sc.nextInt ( ) ; int uu1 = sc.nextInt ( ) ; int vv1 = sc.nextInt ( ) ; int ww1 = sc.nextInt ( ) ; int xx1 = sc.nextInt ( ) ; int yy1 = sc.nextInt ( ) ; int zz1 = sc.nextInt ( ) ; int aa2 = sc.nextInt ( ) ; int bb2 = sc.nextInt ( ) ; int cc2 = sc.nextInt ( ) ; int dd2 = sc.nextInt ( ) ; int ee2 = sc.nextInt ( ) ; int ff2 = sc.nextInt ( ) ; int gg2 = sc.nextInt ( ) ; int hh2 = sc.nextInt ( ) ; int ii2 = sc.nextInt ( ) ; int jj2 = sc.nextInt ( ) ; int kk2 = sc.nextInt ( ) ; int ll2 = sc.nextInt ( ) ; int mm2 = sc.nextInt ( ) ; int nn2 = sc.nextInt ( ) ; int oo2 = sc.nextInt ( ) ; int pp2 = sc.nextInt ( ) ; int qq2 = sc.nextInt ( ) ; int rr2 = sc.nextInt ( ) ; int ss2 = sc.nextInt ( ) ; int tt2 = sc.nextInt ( ) ; int uu2 = sc.nextInt ( ) ; int vv2 = sc.nextInt ( ) ; int ww2 = sc.nextInt ( ) ; int xx2 = sc.nextInt ( ) ; int yy2 = sc.nextInt ( ) ; int zz2 = sc.nextInt ( ) ; int aa3 = sc.nextInt ( ) ; int bb3 = sc.nextInt ( ) ; int cc3 = sc.nextInt ( ) ; int dd3 = sc.nextInt ( ) ; int ee3 = sc.nextInt ( ) ; int ff3 = sc.nextInt ( ) ; int gg3 = sc.nextInt ( ) ; int hh3 = sc.nextInt ( ) ; int ii3 = sc.nextInt ( ) ; int jj3 = sc.nextInt ( ) ; int kk3 = sc.nextInt ( ) ; int ll3 = sc.nextInt ( ) ; int mm3 = sc.nextInt ( ) ; int nn3 = sc.nextInt ( ) ; int oo3 = sc.nextInt ( ) ; int pp3 = sc.nextInt ( ) ; int qq3 = sc.nextInt ( ) ; int rr3 = sc.nextInt ( ) ; int ss3 = sc.nextInt ( ) ; int tt3 = sc.nextInt ( ) ; int uu3 = sc.nextInt ( ) ; int vv3 = sc.nextInt ( ) ; int ww3 = sc.nextInt ( ) ; int xx3 = sc.nextInt ( ) ; int yy3 = sc.nextInt ( ) ; int zz3 = sc.nextInt ( ) ; int aa4 = sc.nextInt ( ) ; int bb4 = sc.nextInt ( ) ; int cc4 = sc.nextInt ( ) ; int dd4 = sc.nextInt ( ) ; int ee4 = sc.nextInt ( ) ; int ff4 = sc.nextInt ( ) ; int gg4 = sc.nextInt ( ) ; int hh4 = sc.nextInt ( ) ; int ii4 = sc.nextInt ( ) ; int jj4 = sc.nextInt ( ) ; int kk4 = sc.nextInt ( ) ; int ll4 = sc.nextInt ( ) ; int mm4 = sc.nextInt ( ) ; int nn4 = sc.nextInt ( ) ; int oo4 = sc.nextInt ( ) ; int pp4 = sc.nextInt ( ) ; int qq4 = sc.nextInt ( ) ; int rr4 = sc.nextInt ( ) ; int ss4 = sc.nextInt ( ) ; int tt4 = sc.nextInt ( ) ; int uu4 = sc.nextInt ( ) ; int vv4 = sc.nextInt ( ) ; int ww4 = sc.nextInt ( ) ; int xx4 = sc.nextInt ( ) ; int yy4 = sc.nextInt ( ) ; int zz4 = sc.nextInt ( ) ; int aa5 = sc.nextInt ( ) ; int bb5 = sc.nextInt ( ) ; int cc5 = sc.nextInt ( ) ; int dd5 = sc.nextInt ( ) ; int ee5 = sc.nextInt ( ) ; int ff5 = sc.nextInt ( ) ; int gg5 = sc.nextInt ( ) ; int hh5 = sc.nextInt ( ) ; int ii5 = sc.nextInt ( ) ; int jj5 = sc.nextInt ( ) ; int kk5 = sc.nextInt ( ) ; int ll5 = sc.nextInt ( ) ; int mm5 = sc.nextInt ( ) ; int nn5 = sc.nextInt ( ) ; int oo5 = sc.nextInt ( ) ; int pp5 = sc.nextInt ( ) ; int qq5 = sc.nextInt ( ) ; int rr5 = sc.nextInt ( ) ; int ss5 = sc.nextInt ( ) ; int tt5 = sc.nextInt ( ) ; int uu5 = sc.nextInt ( ) ; int vv5 = sc.nextInt ( ) ; int ww5 = sc.nextInt ( ) ; int xx5 = sc.nextInt ( ) ; int yy5 = sc.nextInt ( ) ; int zz5 = sc.nextInt ( ) ; int aa6 = sc.nextInt ( ) ; int bb6 = sc.nextInt ( ) ; int cc6 = sc.nextInt ( ) ; int dd6 = sc.nextInt ( ) ; int ee6 = sc.nextInt ( ) ; int ff6 = sc.nextInt ( ) ; int gg6 = sc.nextInt ( ) ; int hh6 = sc.nextInt ( ) ; int ii6 = sc.nextInt ( ) ; int jj6 = sc.nextInt ( ) ; int kk6 = sc.nextInt ( ) ; int ll6 = sc.nextInt ( ) ; int mm6 = sc.nextInt ( ) ; int nn6 = sc.nextInt ( ) ; int oo6 = sc.nextInt ( ) ; int pp6 = sc.nextInt ( ) ; int qq6 = sc.nextInt ( ) ; int rr6 = sc.nextInt ( ) ; int ss6 = sc.nextInt ( ) ; int tt6 = sc.nextInt ( ) ; int uu6 = sc.nextInt ( ) ; int vv6 = sc.nextInt ( ) ; int ww6 = sc.nextInt ( ) ; int xx6 = sc.nextInt ( ) ; int yy6 = sc.nextInt ( ) ; int zz6 = sc.nextInt ( ) ; int aa7 = sc.nextInt ( ) ; int bb7 = sc.nextInt ( ) ; int cc7 = sc.nextInt ( ) ; int dd7 = sc.nextInt ( ) ; int ee7 = sc.nextInt ( ) ; int ff7 = sc.nextInt ( ) ; int gg7 = sc.nextInt ( ) ; int hh7 = sc.nextInt ( ) ; int ii7 = sc.nextInt ( ) ; int jj7 = sc.nextInt ( ) ; int kk7 = sc.nextInt ( ) ; int ll7 = sc.nextInt ( ) ; int mm7 = sc.nextInt ( ) ; int nn7 = sc.nextInt ( ) ; int oo7 = sc.nextInt ( ) ; int pp7 = sc.nextInt ( ) ; int qq7 = sc.nextInt ( ) ; int rr7 = sc.nextInt ( ) ; int ss7 = sc.nextInt ( ) ; int tt7 = sc.nextInt ( ) ; int uu7 = sc.nextInt ( ) ; int vv7 = sc.nextInt ( ) ; int ww7 = sc.nextInt ( ) ; int xx7 = sc.nextInt ( ) ; int yy7 = sc.nextInt ( ) ; int zz7 = sc.nextInt ( ) ; int aa8 = sc.nextInt ( ) ; int bb8 = sc.nextInt ( ) ; int cc8 = sc.nextInt ( ) ; int dd8 = sc.nextInt ( ) ; int ee8 = sc.nextInt ( ) ; int ff8 = sc.nextInt ( ) ; int gg8 = sc.nextInt ( ) ; int hh8 = sc.nextInt ( ) ; int ii8 = sc.nextInt ( ) ; int jj8 = sc.nextInt ( ) ; int kk8 = sc.nextInt ( ) ; int ll8 = sc.nextInt (
import java.util.Scanner ; public class atcoder_AGC037_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; if ( K >= 15 ) { System.out.println ( min ( S ) * N ) ; return ; } if ( 2 ** K >= N ) { System.out.println ( min ( S ) * N ) ; return ; } if ( K == 1 ) { System.out.println ( S ) ; return ; } int count = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == S.charAt ( 0 ) ) { count ++ ; } else { break ; } } if ( count * 2 ** ( K - 1 ) >= N ) { System.out.println ( S.charAt ( 0 ) + "" + N ) ; return ; } S = S.charAt ( 0 ) + ( count * ( 2 ** ( K - 1 ) - 1 ) ) + S ; System.out.println ( S.substring ( 0 , N ) ) ; } public static char min ( String S ) { char min = S.charAt ( 0 ) ; for ( int i = 1 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) < min ) { min = S.charAt ( i ) ; } } return min ; } }
import java.util.Scanner ; public class codeforces_222_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } if ( arr [ 0 ] == arr [ n - 1 ] && k == 1 ) { System.out.println ( 0 ) ; return ; } if ( k == 1 ) { System.out.println ( - 1 ) ; return ; } if ( arr [ k - 1 ] != arr [ n - 1 ] ) { System.out.println ( - 1 ) ; return ; } int target = arr [ n - 1 ] ; int count = 0 ; for ( int i = 0 ; i < k - 1 ; i ++ ) { if ( arr [ i ] == target ) { count ++ ; } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC165_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; int Q = sc.nextInt ( ) ; int [ ] a = new int [ Q ] ; int [ ] b = new int [ Q ] ; int [ ] c = new int [ Q ] ; int [ ] d = new int [ Q ] ; for ( int i = 0 ; i < Q ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; c [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } long ans = 0 ; for ( int i = 0 ; i < Q ; i ++ ) { if ( a [ i ] == 1 ) { if ( b [ i ] == 1 ) { if ( c [ i ] == 1 ) { ans += d [ i ] ; } } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_203_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { arr [ i ] [ j ] = 0 ; } } int ans = - 1 ; for ( int k = 0 ; k < m ; k ++ ) { int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; x -- ; y -- ; boolean found = false ; for ( int i = x - 2 ; i <= x + 1 ; i ++ ) { for ( int j = y - 2 ; j <= y + 1 ; j ++ ) { if ( i >= 0 && i < n && j >= 0 && j < n ) { arr [ i ] [ j ] ++ ; if ( arr [ i ] [ j ] == 9 ) { found = true ; } } } } if ( found ) { ans = k + 1 ; break ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_287_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int [ ] [ ] arr = new int [ 4 ] [ 4 ] ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { arr [ i ] [ j ] = sc.nextInt ( ) ; } } int count = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { if ( arr [ i ] [ j ] == 1 ) { count ++ ; } if ( arr [ i ] [ j + 1 ] == 1 ) { count ++ ; } if ( arr [ i + 1 ] [ j ] == 1 ) { count ++ ; } if ( arr [ i + 1 ] [ j + 1 ] == 1 ) { count ++ ; } if ( count == 0 || count == 4 ) { System.out.println ( "NO" ) ; return ; } } count = 0 ; } System.out.println ( "YES" ) ; } }
import java.util.Scanner ; public class codeforces_37_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int high = 1 ; int tower = n ; int maximum = 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == a [ i - 1 ] ) { tower -- ; high ++ ; } else { if ( high > maximum ) { maximum = high ; } high = 1 ; } } if ( high > maximum ) { maximum = high ; } System.out.println ( maximum + " " + tower ) ; } }
import java.util.Scanner ; public class atcoder_AGC006_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int X = sc.nextInt ( ) ; if ( X == 1 || X == N * 2 - 1 ) { System.out.println ( "No" ) ; } else { System.out.println ( "Yes" ) ; if ( X == N * 2 - 2 ) { for ( int i = N - 1 ; i <= X + 2 ; i ++ ) { System.out.println ( i ) ; } for ( int i = 1 ; i < N - 1 ; i ++ ) { System.out.println ( i ) ; } } else { int y = X - 1 ; int z = X + 1 ; int a = X + 2 ; int b = X - 1 ; int c = X ; int d = X + 1 ; int e = X - 1 ; int f = X ; int g = X + 1 ; int h = X - 1 ; int i = X ; int j = X + 1 ; int k = X - 1 ; int l = X ; int m = X + 1 ; int n = X - 1 ; for ( int i = 0 ; i < N - 3 ; i ++ ) { System.out.println ( y ) ; y ++ ; } System.out.println ( a ) ; System.out.println ( b ) ; System.out.println ( c ) ; System.out.println ( d ) ; System.out.println ( e ) ; System.out.println ( f ) ; System.out.println ( g ) ; System.out.println ( h ) ; System.out.println ( i ) ; System.out.println ( j ) ; System.out.println ( k ) ; System.out.println ( l ) ; System.out.println ( m ) ; System.out.println ( n ) ; for ( int i = 0 ; i < N - 3 ; i ++ ) { System.out.println ( y ) ; y ++ ; } } } } }
import java.util.Scanner ; public class codeforces_632_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; s [ i ] = sc.next ( ) ; } int ans = 0 ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ].equals ( "B" ) ) { sum += a [ i ] ; } } ans = sum ; for ( int i = 0 ; i < n ; i ++ ) { if ( s [ i ].equals ( "A" ) ) { sum += a [ i ] ; } else { sum -= a [ i ] ; } if ( sum > ans ) { ans = sum ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_110_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = "" ; for ( int i = 0 ; i < n ; i ++ ) { s += "abcd" [ i % 4 ] ; } System.out.println ( s ) ; } }
import java.util.Scanner ; public class atcoder_AGC034_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int ans = 0 ; int A = 0 ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == 'A' ) { A ++ ; } else if ( S.charAt ( i ) == 'B' ) { if ( i + 1 < S.length ( ) && S.charAt ( i + 1 ) == 'C' ) { ans ++ ; i ++ ; } else { ans ++ ; } } else { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC110_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; if ( S.equals ( T ) ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC123_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; if ( a <= x && b <= y ) { ans += k ; } else if ( a <= x && b > y ) { ans += ( b - y ) * k ; } else if ( a > x && b <= y ) { ans += ( x - a + 1 ) * k ; } else { ans += ( x - a + 1 ) * k + ( b - y ) * k ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC025_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; if ( n == 10 || n == 100 || n == 1000 || n == 10000 || n == 100000 ) { System.out.println ( 10 ) ; } else { System.out.println ( n ) ; } } }
import java.util.Scanner ; public class atcoder_ABC108_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x1 = sc.nextInt ( ) ; int y1 = sc.nextInt ( ) ; int x2 = sc.nextInt ( ) ; int y2 = sc.nextInt ( ) ; int DIF1 = x2 - x1 ; int DIF2 = y2 - y1 ; int x3 = x2 - DIF2 ; int y3 = y2 + DIF1 ; int x4 = x1 - DIF2 ; int y4 = y1 + DIF1 ; System.out.println ( x3 + " " + y3 + " " + x4 + " " + y4 ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_ABC171_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int xor = 0 ; for ( int i = 0 ; i < n ; i ++ ) { xor ^= arr [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { System.out.print ( ( xor ^ arr [ i ] ) + " " ) ; } } }
import java.util.Scanner ; public class codeforces_445_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; char [ ] [ ] s = new char [ n ] [ m ] ; for ( int i = 0 ; i < n ; i ++ ) { String str = sc.next ( ) ; for ( int j = 0 ; j < m ; j ++ ) { s [ i ] [ j ] = str.charAt ( j ) ; } } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( s [ i ] [ j ] == '.' ) { if ( ( i + j ) % 2 == 1 ) { s [ i ] [ j ] = 'W' ; } else { s [ i ] [ j ] = 'B' ; } } } System.out.println ( ( new String ( s [ i ] ) ) ) ; } } }
import java.util.Scanner ; public class atcoder_ABC143_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } Arrays.sort ( a ) ; long ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { int x = a [ i ] , y = a [ j ] ; int left = Math.max ( 0 , x + y - 1000 ) ; int right = Math.min ( 1000 , x + y ) ; int tmp = Math.max ( 0 , right - left ) ; if ( x + y <= 1000 && x + y >= 1000 - 1000 ) { if ( left <= i && i < right ) { tmp -- ; } } if ( left <= j && j < right ) { tmp -- ; } ans += tmp ; } } System.out.println ( ans / 3 ) ; } } }
import java.util.Scanner ; public class codeforces_30_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int x = 0 ; int y = 0 ; for ( int i = 0 ; i <= 1000 ; i ++ ) { x = a * i * i * i + b * i * i + c * i ; if ( x == 0 ) { System.out.println ( i ) ; return ; } } System.out.println ( "No solution" ) ; } }
import java.util.Scanner ; public class atcoder_ABC142_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = a [ i ] ; } Arrays.sort ( b ) ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = b [ i ] ; } int d = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( c [ i ] != a [ i ] ) { d = 1 ; break ; } } if ( d == 1 ) { System.out.println ( "No" ) ; } else { System.out.println ( "Yes" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC171_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } Arrays.sort ( arr ) ; int sum = 0 ; for ( int i = 0 ; i < k ; i ++ ) { sum += arr [ i ] ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC107_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = n * ( n + 1 ) / 4 ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] d = new int [ 100001 ] ; int c = 0 ; for ( int i = 0 ; i < 100001 ; i ++ ) { d [ i ] = - 1 ; } for ( int i = 0 ; i < n ; i ++ ) { if ( d [ a [ i ] ] == - 1 ) { d [ a [ i ] ] = c ; c ++ ; } } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = d [ a [ i ] ] ; } int [ ] bit = new int [ 100001 ] ; for ( int i = 0 ; i < 100001 ; i ++ ) { bit [ i ] = 0 ; } int [ ] t = new int [ 2 ] ; t [ 0 ] = 100000 ; t [ 1 ] = 0 ; while ( t [ 0 ] - t [ 1 ] > 1 ) { int mid = ( t [ 0 ] + t [ 1 ] ) / 2 ; if ( check ( mid , b , m , bit ) ) { t [ 0 ] = mid ; } else { t [ 1 ] = mid ; } } System.out.println ( d [ t [ 1 ] ] ) ; } public static boolean check ( int x , int [ ] b , int m , int [ ] bit ) { int [ ] c = new int [ 100001 ] ; for ( int i = 0 ; i < 100001 ; i ++ ) { c [ i ] = 0 ; } for ( int i = 0 ; i < b.length ; i ++ ) { c [ b [ i ] ] ++ ; } int [ ] d = new int [ 100001 ] ; for ( int i = 0 ; i < 100001 ; i ++ ) { d [ i ] = 0 ; } for ( int i = 1 ; i < 100001 ; i ++ ) { d [ i ] = d [ i - 1 ] + c [ i - 1 ] ; } int ans = 0 ; for ( int i = 0 ; i < b.length ; i ++ ) { ans += bitSum ( d [ b [ i ] ] , bit ) ; bitAdd ( d [ b [ i ] ] , 1 , bit ) ; } return ans >= m ; } public static int bitSum ( int i , int [ ] bit ) { int sum = 0 ; while ( i > 0 ) { sum += bit [ i ] ; i -= i & - i ; } return sum ; } public static void bitAdd ( int i , int val , int [ ] bit ) { while ( i <= 100000 ) { bit [ i ] += val ; i += i & - i ; } } }
import java.util.Scanner ; public class codeforces_106_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] arr = new int [ n ] [ 4 ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] [ 0 ] = sc.nextInt ( ) ; arr [ i ] [ 1 ] = sc.nextInt ( ) ; arr [ i ] [ 2 ] = sc.nextInt ( ) ; arr [ i ] [ 3 ] = sc.nextInt ( ) ; } int [ ] outdated = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ i ] [ 0 ] < arr [ j ] [ 0 ] && arr [ i ] [ 1 ] < arr [ j ] [ 1 ] && arr [ i ] [ 2 ] < arr [ j ] [ 2 ] ) { outdated [ i ] ++ ; } } } int minCost = 100000 ; int inputNumber = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( outdated [ i ] == 0 && arr [ i ] [ 3 ] < minCost ) { minCost = arr [ i ] [ 3 ] ; inputNumber = i + 1 ; } } System.out.println ( inputNumber ) ; } }
import java.util.Scanner ; public class atcoder_AGC002_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; if ( a > 0 ) { System.out.println ( "Positive" ) ; } else if ( a <= 0 && b >= 0 ) { System.out.println ( "Zero" ) ; } else if ( ( a + b ) % 2 == 0 ) { System.out.println ( "Negative" ) ; } else { System.out.println ( "Positive" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC140_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; int seg_cnt = 0 ; for ( int i = 0 ; i < N - 1 ; i ++ ) { if ( S.charAt ( i ) != S.charAt ( i + 1 ) ) { seg_cnt ++ ; } } int ans = N - 1 ; if ( 2 * K >= seg_cnt ) { ans = N - 1 ; } else { ans = N - 1 - seg_cnt + 2 * K ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC167_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int [ ] [ ] c = new int [ n ] [ m + 1 ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m + 1 ; j ++ ) { c [ i ] [ j ] = sc.nextInt ( ) ; } } int [ ] dp = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { dp [ i ] = Integer.MAX_VALUE ; } dp [ 0 ] = 0 ; for ( int i = 1 ; i <= m ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( dp [ j ] != Integer.MAX_VALUE ) { dp [ j ] += c [ j ] [ i ] ; if ( dp [ j ] > x ) { dp [ j ] = Integer.MAX_VALUE ; } } } } int ans = Integer.MAX_VALUE ; for ( int i = 0 ; i < n ; i ++ ) { if ( dp [ i ] != Integer.MAX_VALUE ) { ans = Math.min ( ans , dp [ i ] ) ; } } if ( ans == Integer.MAX_VALUE ) { System.out.println ( - 1 ) ; } else { System.out.println ( ans ) ; } } }
import java.util.Scanner ; public class atcoder_ABC143_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = a - 2 * b ; if ( ans < 0 ) { ans = 0 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC139_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int hole = 1 ; int i = 0 ; boolean check = true ; while ( check ) { if ( hole >= b ) { check = false ; } else { hole = a * ( i + 1 ) - i ; i ++ ; } } System.out.println ( i ) ; } }
import java.util.Scanner ; public class atcoder_ABC124_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < 2 ; i ++ ) { c += Math.max ( a , b ) ; if ( a >= b ) { a -- ; } else { b -- ; } } System.out.println ( c ) ; } }
[java]
import java.util.Scanner ; public class codeforces_25_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] % 2 == 1 ) { count ++ ; } } if ( count == 1 ) { for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] % 2 == 1 ) { System.out.println ( i + 1 ) ; return ; } } } else { for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] % 2 == 0 ) { System.out.println ( i + 1 ) ; return ; } } } } } }
import java.util.Scanner ; public class codeforces_282_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int total = 0 ; String ans = "" ; for ( int i = 0 ; i < N ; i ++ ) { int A = sc.nextInt ( ) ; int G = sc.nextInt ( ) ; if ( total + A <= 500 ) { total += A ; ans += "A" ; } else { total -= G ; ans += "G" ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC169_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; double b = sc.nextDouble ( ) ; int ans = a * ( int ) ( b * 100 + 0.1 ) ; System.out.println ( ans / 100 ) ; } }
import java.util.Scanner ; public class codeforces_350_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; int [ ] cnt = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; cnt [ a [ i ] ] ++ ; } int [ ] t = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { if ( t [ i ] == 1 ) { int x = a [ i ] ; while ( cnt [ x ] == 1 ) { t [ x ] = 1 ; x = a [ x ] ; } if ( t [ x ] == 0 ) { t [ x ] = 1 ; } } } int res = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( t [ i ] == 1 ) { res ++ ; } } System.out.println ( res ) ; for ( int i = 1 ; i <= n ; i ++ ) { if ( t [ i ] == 1 ) { System.out.print ( i + " " ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC142_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int t = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) { t ++ ; } } System.out.println ( t / ( double ) n ) ; } }
import java.util.Scanner ; public class codeforces_333_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1 ; } a [ 0 ] = a [ n - 1 ] = a [ n ] = a [ 2 * n - 1 ] = 0 ; for ( int i = 0 ; i < m ; i ++ ) { int r = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; a [ r - 1 ] = a [ n + c - 1 ] = 0 ; } if ( n % 2 == 1 && a [ n / 2 ] == 1 && a [ n + n / 2 ] == 1 ) { a [ n / 2 ] = 0 ; } System.out.println ( a [ 0 ] + a [ 1 ] + a [ 2 ] + a [ 3 ] + a [ 4 ] + a [ 5 ] + a [ 6 ] + a [ 7 ] + a [ 8 ] + a [ 9 ] + a [ 10 ] + a [ 11 ] + a [ 12 ] + a [ 13 ] + a [ 14 ] + a [ 15 ] + a [ 16 ] + a [ 17 ] + a [ 18 ] + a [ 19 ] + a [ 20 ] + a [ 21 ] + a [ 22 ] + a [ 23 ] + a [ 24 ] + a [ 25 ] + a [ 26 ] + a [ 27 ] + a [ 28 ] + a [ 29 ] + a [ 30 ] + a [ 31 ] + a [ 32 ] + a [ 33 ] + a [ 34 ] + a [ 35 ] + a [ 36 ] + a [ 37 ] + a [ 38 ] + a [ 39 ] + a [ 40 ] + a [ 41 ] + a [ 42 ] + a [ 43 ] + a [ 44 ] + a [ 45 ] + a [ 46 ] + a [ 47 ] + a [ 48 ] + a [ 49 ] + a [ 50 ] + a [ 51 ] + a [ 52 ] + a [ 53 ] + a [ 54 ] + a [ 55 ] + a [ 56 ] + a [ 57 ] + a [ 58 ] + a [ 59 ] + a [ 60 ] + a [ 61 ] + a [ 62 ] + a [ 63 ] + a [ 64 ] + a [ 65 ] + a [ 66 ] + a [ 67 ] + a [ 68 ] + a [ 69 ] + a [ 70 ] + a [ 71 ] + a [ 72 ] + a [ 73 ] + a [ 74 ] + a [ 75 ] + a [ 76 ] + a [ 77 ] + a [ 78 ] + a [ 79 ] + a [ 80 ] + a [ 81 ] + a [ 82 ] + a [ 83 ] + a [ 84 ] + a [ 85 ] + a [ 86 ] + a [ 87 ] + a [ 88 ] + a [ 89 ] + a [ 90 ] + a [ 91 ] + a [ 92 ] + a [ 93 ] + a [ 94 ] + a [ 95 ] + a [ 96 ] + a [ 97 ] + a [ 98 ] + a [ 99 ] + a [ 100 ] + a [ 101 ] + a [ 102 ] + a [ 103 ] + a [ 104 ] + a [ 105 ] + a [ 106 ] + a [ 107 ] + a [ 108 ] + a [ 109 ] + a [ 110 ] + a [ 111 ] + a [ 112 ] + a [ 113 ] + a [ 114 ] + a [ 115 ] + a [ 116 ] + a [ 117 ] + a [ 118 ] + a [ 119 ] + a [ 120 ] + a [ 121 ] + a [ 122 ] + a [ 123 ] + a [ 124 ] + a [ 125 ] + a [ 126 ] + a [ 127 ] + a [ 128 ] + a [ 129 ] + a [ 130 ] + a [ 131 ] + a [ 132 ] + a [ 133 ] + a [ 134 ] + a [ 135 ] + a [ 136 ] + a [ 137 ] + a [ 138 ] + a [ 139 ] + a [ 140 ] + a [ 141 ] + a [ 142 ] + a [ 143 ] + a [ 144 ] + a [ 145 ] + a [ 146 ] + a [ 147 ] + a [ 148 ] + a [ 149 ] + a [ 150 ] + a [ 151 ] + a [ 152 ] + a [ 153 ] + a [ 154 ] + a [ 155 ] + a [ 156 ] + a [ 157 ] + a [ 158 ] + a [ 159 ] + a [ 160 ] + a [ 161 ] + a [ 162 ] + a [ 163 ] + a [ 164 ] + a [ 165 ] + a [ 166 ] + a [ 167 ] + a [ 168 ] + a [ 169 ] + a [ 170 ] + a [ 171 ] + a [ 172 ] + a [ 173 ] + a [ 174 ] + a [ 175 ] + a [ 176 ] + a [ 177 ] + a [ 178 ] + a [ 179 ] + a [ 180 ] + a [ 181 ] + a [ 182 ] + a [ 183 ] + a [ 184 ] + a [ 185 ] + a [ 186 ] + a [ 187 ] + a [ 188 ] + a [ 189 ] + a [ 190 ] + a [ 191 ] + a [ 192 ] + a [ 193 ] + a [ 194 ] + a [ 195 ] + a [ 196 ] + a [ 197 ] + a [ 198 ] + a [ 199 ] + a [ 200 ] + a [ 201 ] + a [ 202 ] + a [ 203 ] + a [ 204 ] + a [ 205 ] + a [ 206 ] + a [ 207 ] + a [ 208 ] + a [ 209 ] + a [ 210 ] + a [ 211 ] + a [ 212 ] + a [ 213 ] + a [ 214 ] + a [ 215 ] + a [ 216 ] + a [ 217 ] + a [ 218 ] + a [ 219 ] + a [ 220 ] + a [ 221 ] + a [ 222 ] + a [ 223 ] + a [ 224 ] + a [ 225 ] + a [ 226 ] + a [ 227 ] + a [ 228 ] + a [ 229 ] + a [ 230 ] + a [ 231 ] + a [ 232 ] + a [ 233 ] + a [ 234 ] + a [ 235 ] + a [ 236 ] + a [ 237 ] + a [ 238 ] + a [ 239 ] + a [ 240 ] + a [ 241 ] + a [ 242 ] + a [ 243 ] + a [ 244 ] + a [ 245 ] + a [ 246 ] + a [ 247 ] + a [ 248 ] + a [ 249 ] + a [ 250 ] + a [ 251 ] + a [ 252 ] + a [ 253 ] + a [ 254 ] + a [ 255 ] + a [ 256 ] + a [ 257 ] + a [ 258 ] + a [ 259 ] + a [ 260 ] + a [ 261 ] + a [ 262 ] + a [ 263 ] + a [ 264 ] + a [ 265 ] + a [ 266 ] + a [ 267 ] + a [ 268 ] + a [ 269 ] + a [ 270 ] + a [ 271 ] + a [ 272 ] + a [ 273 ] + a [ 274 ] + a [ 275 ] + a [ 276 ] + a [ 277 ] + a [ 278 ] + a [ 279 ] + a [ 280 ] + a [ 281 ] + a [ 282 ] + a [ 283 ] + a [ 284 ] + a [ 285 ] + a [ 286 ] + a [ 287 ] + a [ 288 ] + a [ 289 ] + a [ 290 ] + a [ 291 ] + a [ 292 ] + a [ 293 ] + a [ 294 ] + a [ 295 ] + a [ 296 ] + a [ 297 ] + a [ 298 ] + a [ 299 ] + a [ 300 ] + a [ 301 ] + a [ 302 ] + a [ 303 ] + a [ 304 ] + a [ 305 ] + a [ 306 ] + a [ 307 ] + a [ 308 ] + a [ 309 ] + a [ 310 ] + a [ 311 ] + a [ 312 ] + a [ 313 ] + a [ 314 ] + a [ 315 ] + a [ 316 ] + a [ 317 ] + a [ 318 ] + a [ 319 ] + a [ 320 ] + a [ 321 ] + a [ 322 ] + a [ 323 ] + a [ 324 ] + a [ 325 ] + a [ 326 ] + a [ 327 ] + a [ 328 ] + a [ 329 ] + a [ 330 ] + a [ 331 ] + a [ 332 ] + a [ 333 ] + a [ 334 ] + a [ 335 ] + a [ 336 ] + a [ 337 ] + a [ 338 ] + a [ 339 ] + a [ 340 ] + a [ 341 ] + a [ 342 ] + a [ 343 ] + a [ 344 ] + a [ 345 ] + a [ 346 ] + a [ 347 ] + a [ 348 ] + a [ 349 ] + a [ 350 ] + a [ 351 ] + a [ 352 ] + a [ 353 ] + a [ 354 ] + a [ 355 ] +
import java.util.Scanner ; public class atcoder_ABC166_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] h = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { h [ i ] = sc.nextInt ( ) ; } int [ ] [ ] path = new int [ n + 1 ] [ m + 1 ] ; for ( int i = 1 ; i <= m ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; path [ a ] [ i ] = b ; path [ b ] [ i ] = a ; } int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int flag = 0 ; for ( int j = 1 ; j <= m ; j ++ ) { if ( h [ i ] <= h [ path [ i ] [ j ] ] ) { flag = 1 ; break ; } } if ( flag == 0 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_79_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = 0 ; int number = 744 ; int divisor = 743 ; while ( number % divisor == 1 ) { int variable_3_8 = 1 ; number = number + variable_3_8 ; while ( x >= 0 && y >= 22 || ( x >= 1 && y >= 12 ) || ( x >= 2 && y >= 2 ) ) { int condition1 = 793 ; int condition2 = 669 ; if ( condition1 & condition2 ) { if ( a == 1 ) { if ( y >= 22 ) { y = y - 22 ; } else if ( x >= 1 && y >= 12 ) { x = x - 1 ; y = y - 12 ; } else { x = x - 2 ; y = y - 2 ; } } else if ( x >= 2 && y >= 2 ) { x = x - 2 ; y = y - 2 ; } else if ( x >= 1 && y >= 12 ) { x = x - 1 ; y = y - 12 ; } else { y = y - 22 ; } } a = 1 - a ; } } System.out.println ( a == 1 ? "Ciel" : "Hanako" ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_AGC004_D { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int n = stdIn.nextInt ( ) ; int k = stdIn.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = stdIn.nextInt ( ) ; } int [ ] link = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { link [ i ] = 0 ; } for ( int i = 0 ; i < n ; i ++ ) { link [ a [ i ] - 1 ] ++ ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( link [ i ] == 0 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC174_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int t = 0 ; for ( int i = 1 ; i <= k ; i ++ ) { t = t % k * 10 + 7 ; if ( t % k == 0 ) { System.out.println ( i ) ; break ; } } if ( i > k ) { System.out.println ( - 1 ) ; } } }
import java.util.Scanner ; public class codeforces_67_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int m = 0 ; for ( int j = 0 ; j < n ; j ++ ) { for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 0 ) { m ++ ; System.out.print ( ( i + 1 ) + " " ) ; break ; } } for ( int i = 0 ; i < i + 1 - k ; i ++ ) { a [ i ] -- ; } a [ i ] -- ; } } } }
[INST:java]
import java.util.Scanner ; public class atcoder_ABC168_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int C = 360 / 60 * m - 360 / 12 * h - 360 / 12 / 60 * m ; if ( C > 180 ) { C = 360 - C ; } double cosC = Math.cos ( Math.toRadians ( C ) ) ; double ans = Math.sqrt ( a * a + b * b - 2 * a * b * cosC ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_354_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int L = sc.nextInt ( ) ; int R = sc.nextInt ( ) ; int QL = sc.nextInt ( ) ; int QR = sc.nextInt ( ) ; int [ ] W = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { W [ i ] = sc.nextInt ( ) ; } int [ ] sum_el = new int [ n + 1 ] ; sum_el [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { sum_el [ i ] = W [ i - 1 ] + sum_el [ i - 1 ] ; } int answer = QR * ( n - 1 ) + sum_el [ n ] * R ; for ( int i = 1 ; i <= n ; i ++ ) { int energy = L * sum_el [ i ] + R * ( sum_el [ n ] - sum_el [ i ] ) ; if ( i > n - i ) { energy += ( i - ( n - i ) - 1 ) * QL ; } else if ( n - i > i ) { energy += ( n - i - i - 1 ) * QR ; } if ( energy < answer ) { answer = energy ; } } System.out.println ( answer ) ; } }
import java.util.Scanner ; public class codeforces_49_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; boolean flag = false ; for ( int i = S.length ( ) - 1 ; i >= 0 ; i -- ) { if ( S.charAt ( i ) == ' ' || S.charAt ( i ) == '?' ) continue ; if ( S.charAt ( i ) == 'a' || S.charAt ( i ) == 'e' || S.charAt ( i ) == 'i' || S.charAt ( i ) == 'o' || S.charAt ( i ) == 'u' || S.charAt ( i ) == 'y' || S.charAt ( i ) == 'A' || S.charAt ( i ) == 'E' || S.charAt ( i ) == 'I' || S.charAt ( i ) == 'O' || S.charAt ( i ) == 'U' || S.charAt ( i ) == 'Y' ) { flag = true ; break ; } } if ( flag ) System.out.println ( "YES" ) ; else System.out.println ( "NO" ) ; } }
import java.util.Scanner ; public class atcoder_ABC168_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int K = sc.nextInt ( ) ; String S = sc.next ( ) ; if ( S.length ( ) <= K ) { System.out.println ( S ) ; } else { System.out.println ( S.substring ( 0 , K ) + "..." ) ; } } }
import java.util.Scanner ; public class atcoder_ABC149_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; boolean [ ] prime = new boolean [ 100010 ] ; prime [ 0 ] = false ; prime [ 1 ] = false ; for ( int i = 4 ; i < 100010 ; i += 2 ) { prime [ i ] = false ; } int i = 3 ; while ( i * i <= 100008 ) { if ( prime [ i ] ) { for ( int j = i + i ; j <= 100008 ; j += i ) { prime [ j ] = false ; } } i += 2 ; } for ( int i = x ; i < 100008 ; i ++ ) { if ( prime [ i ] ) { System.out.println ( i ) ; break ; } } } }
import java.util.Scanner ; public class codeforces_302_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int s = 0 ; for ( int x = 0 ; x < n ; x ++ ) { if ( a > x ) s ++ ; } for ( int x = 0 ; x < m ; x ++ ) { int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; if ( y > a ) s ++ ; if ( z > b ) s ++ ; } if ( c > a ) s ++ ; if ( d > b ) s ++ ; if ( e > a ) s ++ ; if ( f > b ) s ++ ; if ( g > a ) s ++ ; if ( h > b ) s ++ ; if ( i > a ) s ++ ; if ( j > b ) s ++ ; if ( k > a ) s ++ ; if ( l > b ) s ++ ; System.out.println ( s ) ; } }
import java.util.Scanner ; public class codeforces_58_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int res = n ; while ( res > 1 ) { for ( int i = res ; i > 0 ; i -- ) { if ( n % i == 0 ) { res = i ; break ; } } } System.out.println ( res + " " + ( n / res ) ) ; } }
import java.util.Scanner ; public class atcoder_AGC028_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int [ ] Number_iMN = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { Number_iMN [ i ] = i * M / N ; } int [ ] Number_j = new int [ M ] ; for ( int j = 0 ; j < M ; j ++ ) { Number_j [ j ] = j ; } int [ ] Kaburi_i = new int [ M ] ; int [ ] Kaburi_j = new int [ M ] ; int counter = 0 ; int Flag = 0 ; for ( int j = 0 ; j < M ; j ++ ) { for ( int i = 0 ; i < N ; i ++ ) { if ( Number_iMN [ i ] == Number_j [ j ] ) { Kaburi_i [ counter ] = i ; Kaburi_j [ counter ] = j ; counter ++ ; } } } int Kaburi_Size = counter ; while ( counter <= Kaburi_Size - 1 ) { if ( S.charAt ( Kaburi_i [ counter ] ) != T.charAt ( Kaburi_j [ counter ] ) ) { Flag = 1 ; break ; } counter ++ ; } if ( Flag == 1 ) { System.out.println ( - 1 ) ; } else { System.out.println ( N * M / gcd ( N , M ) ) ; } } public static int gcd ( int a , int b ) { while ( b > 0 ) { int temp = b ; b = a % b ; a = temp ; } return a ; } }
import java.util.Scanner ; public class codeforces_56_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int min = n + 1 ; int max = - 1 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] != i + 1 ) { min = Math.min ( min , i ) ; max = Math.max ( max , i ) ; } } if ( max == - 1 ) { System.out.println ( "0 0" ) ; } else { String s = "" ; for ( int i = 0 ; i < min ; i ++ ) { s += a [ i ] + "" ; } for ( int i = min ; i <= max ; i ++ ) { s += a [ i ] + "" ; } for ( int i = max + 1 ; i < n ; i ++ ) { s += a [ i ] + "" ; } if ( s.equals ( s.replaceAll ( "(.)(?=.*\\1)" , "" ) ) ) { System.out.println ( min + 1 + " " + max + 1 ) ; } else { System.out.println ( "0 0" ) ; } } } }
import java.util.Scanner ; public class codeforces_99_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int e = sc.nextInt ( ) ; int f = sc.nextInt ( ) ; int g = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int i = sc.nextInt ( ) ; int j = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int o = sc.nextInt ( ) ; int p = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int A = sc.nextInt ( ) ; int B = sc.nextInt ( ) ; int C = sc.nextInt ( ) ; int D = sc.nextInt ( ) ; int E = sc.nextInt ( ) ; int F = sc.nextInt ( ) ; int G = sc.nextInt ( ) ; int H = sc.nextInt ( ) ; int I = sc.nextInt ( ) ; int J = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int L = sc.nextInt ( ) ; int M = sc.nextInt ( ) ; int N = sc.nextInt ( ) ; int O = sc.nextInt ( ) ; int P = sc.nextInt ( ) ; int Q = sc.nextInt ( ) ; int R = sc.nextInt ( ) ; int S = sc.nextInt ( ) ; int T = sc.nextInt ( ) ; int U = sc.nextInt ( ) ; int V = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; int X = sc.nextInt ( ) ; int Y = sc.nextInt ( ) ; int Z = sc.nextInt ( ) ; int AA = sc.nextInt ( ) ; int BB = sc.nextInt ( ) ; int CC = sc.nextInt ( ) ; int DD = sc.nextInt ( ) ; int EE = sc.nextInt ( ) ; int FF = sc.nextInt ( ) ; int GG = sc.nextInt ( ) ; int HH = sc.nextInt ( ) ; int II = sc.nextInt ( ) ; int JJ = sc.nextInt ( ) ; int KK = sc.nextInt ( ) ; int LL = sc.nextInt ( ) ; int MM = sc.nextInt ( ) ; int NN = sc.nextInt ( ) ; int OO = sc.nextInt ( ) ; int PP = sc.nextInt ( ) ; int QQ = sc.nextInt ( ) ; int RR = sc.nextInt ( ) ; int SS = sc.nextInt ( ) ; int TT = sc.nextInt ( ) ; int UU = sc.nextInt ( ) ; int VV = sc.nextInt ( ) ; int WW = sc.nextInt ( ) ; int XX = sc.nextInt ( ) ; int YY = sc.nextInt ( ) ; int ZZ = sc.nextInt ( ) ; int AA1 = sc.nextInt ( ) ; int BB1 = sc.nextInt ( ) ; int CC1 = sc.nextInt ( ) ; int DD1 = sc.nextInt ( ) ; int EE1 = sc.nextInt ( ) ; int FF1 = sc.nextInt ( ) ; int GG1 = sc.nextInt ( ) ; int HH1 = sc.nextInt ( ) ; int II1 = sc.nextInt ( ) ; int JJ1 = sc.nextInt ( ) ; int KK1 = sc.nextInt ( ) ; int LL1 = sc.nextInt ( ) ; int MM1 = sc.nextInt ( ) ; int NN1 = sc.nextInt ( ) ; int OO1 = sc.nextInt ( ) ; int PP1 = sc.nextInt ( ) ; int QQ1 = sc.nextInt ( ) ; int RR1 = sc.nextInt ( ) ; int SS1 = sc.nextInt ( ) ; int TT1 = sc.nextInt ( ) ; int UU1 = sc.nextInt ( ) ; int VV1 = sc.nextInt ( ) ; int WW1 = sc.nextInt ( ) ; int XX1 = sc.nextInt ( ) ; int YY1 = sc.nextInt ( ) ; int ZZ1 = sc.nextInt ( ) ; int AA2 = sc.nextInt ( ) ; int BB2 = sc.nextInt ( ) ; int CC2 = sc.nextInt ( ) ; int DD2 = sc.nextInt ( ) ; int EE2 = sc.nextInt ( ) ; int FF2 = sc.nextInt ( ) ; int GG2 = sc.nextInt ( ) ; int HH2 = sc.nextInt ( ) ; int II2 = sc.nextInt ( ) ; int JJ2 = sc.nextInt ( ) ; int KK2 = sc.nextInt ( ) ; int LL2 = sc.nextInt ( ) ; int MM2 = sc.nextInt ( ) ; int NN2 = sc.nextInt ( ) ; int OO2 = sc.nextInt ( ) ; int PP2 = sc.nextInt ( ) ; int QQ2 = sc.nextInt ( ) ; int RR2 = sc.nextInt ( ) ; int SS2 = sc.nextInt ( ) ; int TT2 = sc.nextInt ( ) ; int UU2 = sc.nextInt ( ) ; int VV2 = sc.nextInt ( ) ; int WW2 = sc.nextInt ( ) ; int XX2 = sc.nextInt ( ) ; int YY2 = sc.nextInt ( ) ; int ZZ2 = sc.nextInt ( ) ; int AA3 = sc.nextInt ( ) ; int BB3 = sc.nextInt ( ) ; int CC3 = sc.nextInt ( ) ; int DD3 = sc.nextInt ( ) ; int EE3 = sc.nextInt ( ) ; int FF3 = sc.nextInt ( ) ; int GG3 = sc.nextInt ( ) ; int HH3 = sc.nextInt ( ) ; int II3 = sc.nextInt ( ) ; int JJ3 = sc.nextInt ( ) ; int KK3 = sc.nextInt ( ) ; int LL3 = sc.nextInt ( ) ; int MM3 = sc.nextInt ( ) ; int NN3 = sc.nextInt ( ) ; int OO3 = sc.nextInt ( ) ; int PP3 = sc.nextInt ( ) ; int QQ3 = sc.nextInt ( ) ; int RR3 = sc.nextInt ( ) ; int SS3 = sc.nextInt ( ) ; int TT3 = sc.nextInt ( ) ; int UU3 = sc.nextInt ( ) ; int VV3 = sc.nextInt ( ) ; int WW3 = sc.nextInt ( ) ; int XX3 = sc.nextInt ( ) ; int YY3 = sc.nextInt ( ) ; int ZZ3 = sc.nextInt ( ) ; int AA4 = sc.nextInt ( ) ; int BB4 = sc.nextInt ( ) ; int CC4 = sc.nextInt ( ) ; int DD4 = sc.nextInt ( ) ; int EE4 = sc.nextInt ( ) ; int FF4 = sc.nextInt ( ) ; int GG4 = sc.nextInt ( ) ; int HH4 = sc.nextInt ( ) ; int II4 = sc.nextInt ( ) ; int JJ4 = sc.nextInt ( ) ; int KK4 = sc.nextInt ( ) ; int LL4 = sc.nextInt ( ) ; int MM4 = sc.nextInt ( ) ; int NN4 = sc.nextInt ( ) ; int OO4 = sc.nextInt ( ) ; int PP4 = sc.nextInt ( ) ; int QQ4 = sc.nextInt ( ) ; int RR4 = sc.nextInt ( ) ; int SS4 = sc.nextInt ( ) ; int TT4 = sc.nextInt ( ) ; int UU4 = sc.nextInt ( ) ; int VV4 = sc.nextInt ( ) ; int WW4 = sc.nextInt ( ) ; int XX4 = sc.nextInt ( ) ; int YY4 = sc.nextInt ( ) ; int ZZ4 = sc.nextInt ( ) ; int AA5 = sc.nextInt ( ) ; int BB5 = sc.nextInt ( ) ; int CC5 = sc.nextInt ( ) ; int DD5 = sc.nextInt ( ) ; int EE5 = sc.nextInt ( ) ; int FF5 = sc.nextInt ( ) ; int GG5 = sc.nextInt ( ) ; int HH5 = sc.nextInt ( ) ; int II5 = sc.nextInt ( ) ; int JJ5 = sc.nextInt ( ) ; int KK5 = sc.nextInt ( ) ; int LL5 = sc.nextInt ( ) ; int MM5 = sc.nextInt ( ) ; int NN5 = sc.nextInt ( ) ; int OO5 = sc.nextInt ( ) ; int PP5 = sc.nextInt ( ) ; int QQ5 = sc.nextInt ( ) ; int RR5 = sc.nextInt ( ) ; int SS5 = sc.nextInt ( ) ; int TT5 = sc.nextInt ( ) ; int UU5 = sc.nextInt ( ) ; int VV5 = sc.nextInt ( ) ; int WW5 = sc.nextInt ( ) ; int XX5 = sc.nextInt ( ) ; int YY5 = sc.nextInt ( ) ; int ZZ5 = sc.nextInt ( ) ; int AA6 = sc.nextInt ( ) ; int BB6 = sc.nextInt ( ) ; int CC6 = sc.nextInt ( ) ; int DD6 = sc.nextInt ( ) ; int EE6 = sc.nextInt ( ) ; int FF6 = sc.nextInt ( ) ; int GG6 = sc.nextInt ( ) ; int HH6 = sc.nextInt ( ) ; int II6 = sc.nextInt ( ) ; int JJ6 = sc.nextInt ( ) ; int KK6 = sc.nextInt ( ) ; int LL6 = sc.nextInt ( ) ; int MM6 = sc.nextInt ( ) ; int NN6 = sc.nextInt ( ) ; int OO6 = sc.nextInt ( ) ; int PP6 = sc.nextInt ( ) ; int QQ6 = sc.nextInt ( ) ; int RR6 = sc.nextInt ( ) ; int SS6 = sc.nextInt ( ) ; int TT6 = sc.nextInt ( ) ; int UU6 = sc.nextInt ( ) ; int VV6 = sc.nextInt ( ) ; int WW6 = sc.nextInt ( ) ; int XX6 = sc.nextInt ( ) ; int YY6 = sc.nextInt ( ) ; int ZZ6 = sc.nextInt ( ) ; int AA7 = sc.nextInt ( ) ; int BB7 = sc.nextInt ( ) ; int CC7 = sc.nextInt ( ) ; int DD7 = sc.nextInt ( ) ; int EE7 = sc.nextInt ( ) ; int FF7 = sc.nextInt ( ) ; int GG7 = sc.nextInt ( ) ; int HH7 = sc.nextInt ( ) ; int II7 = sc.nextInt ( ) ; int JJ7 = sc.nextInt ( ) ; int KK7 = sc.nextInt ( ) ; int LL7 = sc.nextInt ( ) ; int MM7 = sc.nextInt ( ) ; int NN7 = sc.nextInt ( ) ; int OO7 = sc.nextInt ( ) ; int PP7 = sc.nextInt ( ) ; int QQ7 = sc.nextInt ( ) ; int RR7 = sc.nextInt ( ) ; int SS7 = sc.nextInt ( ) ; int TT7 = sc.nextInt ( ) ; int UU7 = sc.nextInt ( ) ; int VV7 = sc.nextInt ( ) ; int WW7 = sc.nextInt ( ) ; int XX7 = sc.nextInt ( ) ; int YY7 = sc.nextInt ( ) ; int ZZ7 = sc.nextInt ( ) ; int AA8 = sc.nextInt ( ) ; int BB8 = sc.nextInt ( ) ; int CC8 = sc.nextInt ( ) ; int DD8 = sc.nextInt ( ) ; int EE8 = sc.nextInt ( ) ; int FF8 = sc.nextInt ( ) ; int GG8 = sc.nextInt ( ) ; int HH8 = sc.nextInt ( ) ; int II8 = sc.nextInt ( ) ; int JJ8 = sc.nextInt ( ) ; int KK8 = sc.nextInt ( ) ; int LL8 = sc.nextInt ( ) ; int MM8 = sc.nextInt ( ) ; int NN8 = sc.nextInt ( ) ; int OO8 = sc.nextInt ( ) ; int PP8 = sc.nextInt ( ) ; int QQ8 = sc.nextInt ( ) ; int RR8 = sc.nextInt ( ) ; int SS8 = sc.nextInt ( ) ; int TT8 = sc.nextInt ( ) ; int UU8 = sc.nextInt ( ) ; int VV8 = sc.nextInt ( ) ; int WW8 = sc.nextInt ( ) ; int XX8 = sc.nextInt ( ) ; int YY8 = sc.nextInt
import java.util.Scanner ; public class codeforces_412_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; String s = sc.next ( ) ; int f = k - 1 < n - k ? 1 : 0 ; int m = Math.min ( k - 1 , n - k ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < m ; i ++ ) { sb.append ( f == 1 ? "RIGHT" : "LEFT" ) ; sb.append ( "\n" ) ; } for ( int i = 0 ; i < s.length ( ) ; i ++ ) { sb.append ( "PRINT " ) ; sb.append ( s.charAt ( s.length ( ) - 1 - i * f ) ) ; sb.append ( "\n" ) ; sb.append ( f == 1 ? "LEFT" : "RIGHT" ) ; sb.append ( "\n" ) ; } System.out.println ( sb.toString ( ) ) ; } }
import java.util.Scanner ; public class codeforces_86_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int ans = 0 ; for ( int i = a ; i <= b ; i ++ ) { int rev = 0 ; for ( int j = i ; j > 0 ; j /= 10 ) { rev = rev * 10 + 9 - j % 10 ; } ans = Math.max ( ans , rev * i ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC128_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] a = new int [ m ] ; int [ ] b = new int [ m ] ; for ( int i = 0 ; i < m ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } int [ ] c = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { for ( int j = 0 ; j < a [ i ] ; j ++ ) { c [ sc.nextInt ( ) - 1 ] ++ ; } } int ans = 0 ; for ( int i = 0 ; i < ( 1 << c.length ) ; i ++ ) { int sum = 0 ; for ( int j = 0 ; j < c.length ; j ++ ) { if ( ( i & ( 1 << j ) ) != 0 ) { sum ++ ; } } if ( sum % 2 == b [ sum % 2 ] ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC004_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long x = sc.nextLong ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextLong ( ) ; } long [ ] [ ] b = new long [ n ] [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { int k = i - j ; if ( ( 527 & 344 ) != 0 && k < 0 ) { k += n ; } b [ j ] [ i ] = Math.min ( a [ i ] , a [ k ] ) ; } } long m = ( long ) 1e15 ; for ( int i = 0 ; i < n ; i ++ ) { m = Math.min ( m , sum ( b [ i ] ) + x * i ) ; } System.out.println ( m ) ; } private static long sum ( long [ ] a ) { long s = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { s += a [ i ] ; } return s ; } }
import java.util.Scanner ; public class atcoder_ABC150_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] c = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } int mod = ( int ) ( Math.pow ( 2 , 2 * n - 2 ) + 7 ) ; int a = ( int ) ( 2 * Math.pow ( 2 , 2 * n - 2 ) % mod ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += c [ i ] * ( a + i * ( int ) ( Math.pow ( 2 , 2 * n - 2 ) ) ) ; ans = ans % mod ; } System.out.println ( ans ) ; } }
[INST:java]
import java.util.Scanner ; public class codeforces_456_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] a = new int [ n ] [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] [ 0 ] = sc.nextInt ( ) ; a [ i ] [ 1 ] = sc.nextInt ( ) ; } int max = a [ 0 ] [ 1 ] ; int index = 0 ; for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i ] [ 1 ] > max ) { max = a [ i ] [ 1 ] ; index = i ; } } if ( a [ index ] [ 0 ] <= a [ 0 ] [ 0 ] ) { System.out.println ( "Happy Alex" ) ; } else { System.out.println ( "Poor Alex" ) ; } } }
import java.util.Scanner ; public class codeforces_598_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; while ( q -- > 0 ) { int n = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { ans += i ; } System.out.println ( ans ) ; } } }
import java.util.Scanner ; public class atcoder_AGC027_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int X = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < N ; i ++ ) { sum += A [ i ] ; } int ans = ( int ) 1e9 + 1 ; for ( int k = 1 ; k <= N ; k ++ ) { int tmp = k * X + 2 * sum ; ans = Math.min ( ans , tmp ) ; } System.out.println ( ans + N * X + 5 * A [ N - 1 ] ) ; } }
import java.util.Scanner ; public class codeforces_408_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String T = sc.next ( ) ; int ans = 0 ; for ( int i = 0 ; i < T.length ( ) ; i ++ ) { char c = T.charAt ( i ) ; if ( S.indexOf ( c ) == - 1 ) { System.out.println ( - 1 ) ; return ; } int cnt = Math.min ( S.lastIndexOf ( c ) - S.indexOf ( c ) + 1 , T.length ( ) - i ) ; ans += cnt ; S = S.substring ( 0 , S.indexOf ( c ) ) + S.substring ( S.indexOf ( c ) + cnt ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC006_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; String t = sc.next ( ) ; if ( s.equals ( t ) ) { System.out.println ( n ) ; } else { int cnt = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n - i ; j ++ ) { if ( s.charAt ( i + j ) != t.charAt ( j ) ) { break ; } if ( j == n - i - 1 ) { cnt = i ; } } } System.out.println ( 2 * n - cnt ) ; } } }
import java.util.Scanner ; public class atcoder_AGC043_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == 1 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_31_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i == j ) continue ; for ( int k = 0 ; k < n ; k ++ ) { if ( k == i || k == j ) continue ; if ( arr [ k ] == arr [ i ] + arr [ j ] ) { System.out.println ( k + 1 + " " + j + 1 + " " + i + 1 ) ; return ; } } } } System.out.println ( - 1 ) ; } } }
import java.util.Scanner ; public class atcoder_AGC011_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] vis = new int [ n + 1 ] ; int ci = 0 ; int cb = 0 ; int cc = 0 ; int [ ] g = new int [ n + 1 ] ; for ( int i = 0 ; i < m ; i ++ ) { int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; g [ u ] += v ; g [ v ] += u ; } for ( int i = 1 ; i <= n ; i ++ ) { if ( vis [ i ] == 0 ) { if ( g [ i ].length == 0 ) { ci ++ ; } else if ( dfs ( i ) ) { cb ++ ; } else { cc ++ ; } } } long ans = ci * ci + 2 * ci * ( n - ci ) + cc * cc + 2 * cb * cc + 2 * cb * cb ; System.out.println ( ans ) ; } static boolean dfs ( int x ) { Queue < Integer > stk = new LinkedList < > ( ) ; stk.add ( x ) ; stk.add ( 1 ) ; while ( ! stk.isEmpty ( ) ) { int u = stk.poll ( ) ; int col = stk.poll ( ) ; if ( vis [ u ] != 0 ) { if ( vis [ u ] != col ) { return false ; } continue ; } vis [ u ] = col ; for ( int i : g [ u ] ) { stk.add ( i ) ; stk.add ( 3 - col ) ; } } return true ; } }
import java.util.Scanner ; public class atcoder_ABC125_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] left = new int [ n + 1 ] ; int [ ] right = new int [ n + 1 ] ; left [ 0 ] = 0 ; right [ n ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { left [ i + 1 ] = Math.max ( left [ i ] , a [ i ] ) ; } for ( int i = n - 1 ; i >= 0 ; i -- ) { right [ i ] = Math.max ( right [ i + 1 ] , a [ i ] ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans = Math.max ( ans , Math.max ( left [ i ] , right [ i + 1 ] ) ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC007_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int sum = a + b + c ; System.out.println ( sum ) ; } }
import java.util.Scanner ; public class codeforces_459_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int max = a [ 0 ] ; int min = a [ 0 ] ; for ( int i = 1 ; i < n ; i ++ ) { if ( a [ i ] > max ) { max = a [ i ] ; } if ( a [ i ] < min ) { min = a [ i ] ; } } if ( max == min ) { System.out.println ( max - min + " " + n * ( n - 1 ) / 2 ) ; } else { int ac = 0 ; int bc = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == max ) { ac ++ ; } if ( a [ i ] == min ) { bc ++ ; } } System.out.println ( max - min + " " + ac * bc ) ; } } }
import java.util.Scanner ; public class atcoder_ABC125_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] V = new int [ N ] ; int [ ] C = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { V [ i ] = sc.nextInt ( ) ; C [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( V [ i ] - C [ i ] > 0 ) { ans += V [ i ] - C [ i ] ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC043_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String ans = "" ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char c = S.charAt ( i ) ; if ( c == '0' || c == '1' ) { ans += c ; } else if ( c == 'B' && ans.length ( ) != 0 ) { ans = ans.substring ( 0 , ans.length ( ) - 1 ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_546_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int k = sc.nextInt ( ) ; int n = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int total = 0 ; for ( int i = 1 ; i <= w ; i ++ ) { total += i * k ; } if ( total > n ) { System.out.println ( total - n ) ; } else { System.out.println ( 0 ) ; } } }
import java.util.Scanner ; public class codeforces_231_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int cnt = 0 ; if ( a == 1 || b == 1 ) cnt ++ ; if ( cnt > 0 ) c ++ ; } System.out.println ( c ) ; } }
import java.util.Scanner ; public class atcoder_AGC033_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int h = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; int [ ] [ ] map = new int [ h ] [ w ] ; for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { if ( sc.next ( ).equals ( "#" ) ) { map [ i ] [ j ] = 0 ; } else { map [ i ] [ j ] = Integer.MAX_VALUE ; } } } for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 1 ; j < w ; j ++ ) { map [ i ] [ j ] = Math.min ( map [ i ] [ j ] , map [ i ] [ j - 1 ] + 1 ) ; } } for ( int i = 0 ; i < h ; i ++ ) { for ( int j = w - 2 ; j >= 0 ; j -- ) { map [ i ] [ j ] = Math.min ( map [ i ] [ j ] , map [ i ] [ j + 1 ] + 1 ) ; } } for ( int i = 1 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { map [ i ] [ j ] = Math.min ( map [ i ] [ j ] , map [ i - 1 ] [ j ] + 1 ) ; } } for ( int i = h - 2 ; i >= 0 ; i -- ) { for ( int j = 0 ; j < w ; j ++ ) { map [ i ] [ j ] = Math.min ( map [ i ] [ j ] , map [ i + 1 ] [ j ] + 1 ) ; } } int ans = 0 ; for ( int i = 0 ; i < h ; i ++ ) { for ( int j = 0 ; j < w ; j ++ ) { ans = Math.max ( ans , map [ i ] [ j ] ) ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_500_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int target = sc.nextInt ( ) ; int [ ] s = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.nextInt ( ) ; } int current = 0 ; while ( current <= target ) { current += s [ current - 1 ] ; if ( current == target ) { System.out.println ( "YES" ) ; return ; } } System.out.println ( "NO" ) ; } }
import java.util.Scanner ; public class atcoder_ABC155_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int ll = - 1000000000 ; int rr = 1000000000 ; while ( ll + 1 < rr ) { int x = ( ll + rr ) / 2 ; int tot = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( A [ i ] < 0 ) { int l = - 1 ; int r = N ; while ( l + 1 < r ) { int c = ( l + r ) / 2 ; if ( A [ i ] * A [ c ] < x ) { r = c ; } else { l = c ; } } tot += N - r ; } else { int l = - 1 ; int r = N ; while ( l + 1 < r ) { int c = ( l + r ) / 2 ; if ( A [ i ] * A [ c ] < x ) { l = c ; } else { r = c ; } } tot += r ; } if ( A [ i ] * A [ i ] < x ) { tot -- ; } } tot /= 2 ; if ( 211 & 437 & 224 & 626 ) { if ( tot < K ) { ll = x ; } else { rr = x ; } } } System.out.println ( ll ) ; } } }
import java.util.Scanner ; public class atcoder_ABC147_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long [ ] a = new long [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextLong ( ) ; } long ans = 0 ; for ( int i = 0 ; i < 60 ; i ++ ) { long cnt = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( a [ j ] >> i & 1 ) == 1 ) { cnt ++ ; } } ans = ( ans + cnt * ( n - cnt ) * ( 1 << i ) ) % 1000000007 ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC046_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int gcd = gcd ( 360 , a ) ; System.out.println ( 360 / gcd ) ; } public static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } }
import java.util.Scanner ; public class codeforces_596_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] r = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { r [ i ] = sc.nextInt ( ) ; } int ans = Math.abs ( r [ 0 ] ) ; for ( int i = 1 ; i < n ; i ++ ) { ans += Math.abs ( r [ i ] - r [ i - 1 ] ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_171_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int x = Math.max ( String.valueOf ( a ).length ( ) , String.valueOf ( b ).length ( ) ) ; a = String.format ( "%0" + x + "d" , a ) ; b = String.format ( "%0" + x + "d" , b ) ; String s = "" ; int c = 0 ; for ( int i = 0 ; i < x ; i ++ ) { int d = Integer.parseInt ( b.substring ( i , i + 1 ) ) + Integer.parseInt ( a.substring ( x - i - 1 , x - i ) ) + c ; if ( d > 9 ) { s += d - 10 + "" ; c = 1 ; } else { s += d + "" ; c = 0 ; } } if ( c == 1 ) { s += "1" ; } System.out.println ( Integer.parseInt ( new StringBuilder ( s ).reverse ( ).toString ( ) ) ) ; } }
import java.util.Scanner ; public class codeforces_276_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; int cnt = 0 ; boolean x = true ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { char c = S.charAt ( i ) ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a' && c <= 'z' ) ) continue ; if ( ! ( c >= '0' && c <= '9' ) ) continue ; if ( ! ( c >= 'A' && c <= 'Z' ) ) continue ; if ( ! ( c >= 'a
import java.util.Scanner ; public class codeforces_617_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; int count = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '1' ) { count ++ ; } } if ( count == 0 ) { System.out.println ( 0 ) ; } else { int sum = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '0' ) { sum ++ ; } else if ( s.charAt ( i ) == '1' ) { sum = sum * 2 + 1 ; } } System.out.println ( sum ) ; } } }
import java.util.Scanner ; public class codeforces_55_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; String s = sc.next ( ) ; int ans = 0 ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { if ( s.charAt ( i ) == '+' ) { ans += b ; } else { ans *= b ; } } ans += a + c ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC178_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int ans = Math.max ( a * c , b * d ) ; ans = Math.max ( ans , a * d ) ; ans = Math.max ( ans , b * c ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC164_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += sc.nextInt ( ) ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class codeforces_242_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int l = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int id = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { int li = sc.nextInt ( ) ; int ri = sc.nextInt ( ) ; if ( li <= l && r <= ri ) { id = i ; } else if ( li < l || r < ri ) { id = n ; } l = Math.min ( l , li ) ; r = Math.max ( r , ri ) ; } System.out.println ( id == n ? - 1 : id + 1 ) ; } }
import java.util.Scanner ; public class atcoder_ABC132_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; if ( S.length ( ) != 2 ) { System.out.println ( "No" ) ; return ; } char [ ] chars = S.toCharArray ( ) ; boolean [ ] isExist = new boolean [ 26 ] ; for ( char c : chars ) { isExist [ c - 'a' ] = true ; } for ( int i = 0 ; i < 26 ; i ++ ) { if ( ! isExist [ i ] ) { System.out.println ( "No" ) ; return ; } } System.out.println ( "Yes" ) ; } }
import java.util.Scanner ; public class atcoder_ABC169_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; if ( n == 1 ) { System.out.println ( 0 ) ; return ; } int [ ] arr = new int [ 100 ] ; int cnt = 0 ; while ( n > 1 ) { if ( n % 2 == 0 ) { arr [ cnt ++ ] = 2 ; n = n / 2 ; } else { int f = 3 ; while ( f * f <= n ) { if ( n % f == 0 ) { arr [ cnt ++ ] = f ; n = n / f ; } else { f += 2 ; } } if ( n != 1 ) { arr [ cnt ++ ] = n ; n = 1 ; } } } int ans = 0 ; for ( int i = 0 ; i < cnt ; i ++ ) { int x = 0 ; for ( int j = 1 ; j <= 99999999 ; j ++ ) { if ( x + j <= arr [ i ] ) { x += j ; ans ++ ; } else { break ; } } } System.out.println ( ans ) ; } } }
[INST:java]
import java.util.Scanner ; public class atcoder_ABC126_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; b [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] == b [ i ] ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC129_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; dp [ 0 ] = 1 ; for ( int i = 0 ; i < n ; i ++ ) { dp [ i + 1 ] = ( dp [ i ] + dp [ i ] * a [ i ] ) % 1000000007 ; } System.out.println ( ( dp [ n ] + dp [ n - 1 ] ) % 1000000007 ) ; } }
import java.util.Scanner ; public class codeforces_678_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int year = sc.nextInt ( ) ; int d = 0 ; if ( year % 400 == 0 || ( year % 4 == 0 && year % 100 != 0 ) ) { d = 1 ; } while ( true ) { if ( year % 400 == 0 || ( year % 4 == 0 && year % 100 != 0 ) ) { if ( d == 0 ) { d = 1 ; year ++ ; } else if ( d == 1 ) { d = 2 ; year ++ ; } else if ( d == 2 ) { d = 3 ; year ++ ; } else if ( d == 3 ) { d = 4 ; year ++ ; } else if ( d == 4 ) { d = 5 ; year ++ ; } else if ( d == 5 ) { d = 6 ; year ++ ; } else if ( d == 6 ) { d = 7 ; year ++ ; } else if ( d == 7 ) { d = 8 ; year ++ ; } else if ( d == 8 ) { d = 9 ; year ++ ; } else if ( d == 9 ) { d = 10 ; year ++ ; } else if ( d == 10 ) { d = 11 ; year ++ ; } else if ( d == 11 ) { d = 12 ; year ++ ; } else if ( d == 12 ) { d = 13 ; year ++ ; } else if ( d == 13 ) { d = 14 ; year ++ ; } else if ( d == 14 ) { d = 15 ; year ++ ; } else if ( d == 15 ) { d = 16 ; year ++ ; } else if ( d == 16 ) { d = 17 ; year ++ ; } else if ( d == 17 ) { d = 18 ; year ++ ; } else if ( d == 18 ) { d = 19 ; year ++ ; } else if ( d == 19 ) { d = 20 ; year ++ ; } else if ( d == 20 ) { d = 21 ; year ++ ; } else if ( d == 21 ) { d = 22 ; year ++ ; } else if ( d == 22 ) { d = 23 ; year ++ ; } else if ( d == 23 ) { d = 24 ; year ++ ; } else if ( d == 24 ) { d = 25 ; year ++ ; } else if ( d == 25 ) { d = 26 ; year ++ ; } else if ( d == 26 ) { d = 27 ; year ++ ; } else if ( d == 27 ) { d = 28 ; year ++ ; } else if ( d == 28 ) { d = 29 ; year ++ ; } else if ( d == 29 ) { d = 30 ; year ++ ; } else if ( d == 30 ) { d = 31 ; year ++ ; } else if ( d == 31 ) { d = 32 ; year ++ ; } else if ( d == 32 ) { d = 33 ; year ++ ; } else if ( d == 33 ) { d = 34 ; year ++ ; } else if ( d == 34 ) { d = 35 ; year ++ ; } else if ( d == 35 ) { d = 36 ; year ++ ; } else if ( d == 36 ) { d = 37 ; year ++ ; } else if ( d == 37 ) { d = 38 ; year ++ ; } else if ( d == 38 ) { d = 39 ; year ++ ; } else if ( d == 39 ) { d = 40 ; year ++ ; } else if ( d == 40 ) { d = 41 ; year ++ ; } else if ( d == 41 ) { d = 42 ; year ++ ; } else if ( d == 42 ) { d = 43 ; year ++ ; } else if ( d == 43 ) { d = 44 ; year ++ ; } else if ( d == 44 ) { d = 45 ; year ++ ; } else if ( d == 45 ) { d = 46 ; year ++ ; } else if ( d == 46 ) { d = 47 ; year ++ ; } else if ( d == 47 ) { d = 48 ; year ++ ; } else if ( d == 48 ) { d = 49 ; year ++ ; } else if ( d == 49 ) { d = 50 ; year ++ ; } else if ( d == 50 ) { d = 51 ; year ++ ; } else if ( d == 51 ) { d = 52 ; year ++ ; } else if ( d == 52 ) { d = 53 ; year ++ ; } else if ( d == 53 ) { d = 54 ; year ++ ; } else if ( d == 54 ) { d = 55 ; year ++ ; } else if ( d == 55 ) { d = 56 ; year ++ ; } else if ( d == 56 ) { d = 57 ; year ++ ; } else if ( d == 57 ) { d = 58 ; year ++ ; } else if ( d == 58 ) { d = 59 ; year ++ ; } else if ( d == 59 ) { d = 60 ; year ++ ; } else if ( d == 60 ) { d = 61 ; year ++ ; } else if ( d == 61 ) { d = 62 ; year ++ ; } else if ( d == 62 ) { d = 63 ; year ++ ; } else if ( d == 63 ) { d = 64 ; year ++ ; } else if ( d == 64 ) { d = 65 ; year ++ ; } else if ( d == 65 ) { d = 66 ; year ++ ; } else if ( d == 66 ) { d = 67 ; year ++ ; } else if ( d == 67 ) { d = 68 ; year ++ ; } else if ( d == 68 ) { d = 69 ; year ++ ; } else if ( d == 69 ) { d = 70 ; year ++ ; } else if ( d == 70 ) { d = 71 ; year ++ ; } else if ( d == 71 ) { d = 72 ; year ++ ; } else if ( d == 72 ) { d = 73 ; year ++ ; } else if ( d == 73 ) { d = 74 ; year ++ ; } else if ( d == 74 ) { d = 75 ; year ++ ; } else if ( d == 75 ) { d = 76 ; year ++ ; } else if ( d == 76 ) { d = 77 ; year ++ ; } else if ( d == 77 ) { d = 78 ; year ++ ; } else if ( d == 78 ) { d = 79 ; year ++ ; } else if ( d == 79 ) { d = 80 ; year ++ ; } else if ( d == 80 ) { d = 81 ; year ++ ; } else if ( d == 81 ) { d = 82 ; year ++ ; } else if ( d == 82 ) { d = 83 ; year ++ ; } else if ( d == 83 ) { d = 84 ; year ++ ; } else if ( d == 84 ) { d = 85 ; year ++ ; } else if ( d == 85 ) { d = 86 ; year ++ ; } else if ( d == 86 ) { d = 87 ; year ++ ; } else if ( d == 87 ) { d = 88 ; year ++ ; } else if ( d == 88 ) { d = 89 ; year ++ ; } else if ( d == 89 ) { d = 90 ; year ++ ; } else if ( d == 90 ) { d = 91 ; year ++ ; } else if ( d == 91 ) { d = 92 ; year ++ ;
import java.util.Scanner ; public class codeforces_462_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; String s = sc.next ( ) ; int [ ] count = new int [ 26 ] ; for ( int i = 0 ; i < s.length ( ) ; i ++ ) { count [ s.charAt ( i ) - 'A' ] ++ ; } for ( int i = 0 ; i < 26 ; i ++ ) { if ( count [ i ] >= k ) { System.out.println ( k * k ) ; return ; } k -= count [ i ] ; } int res = 0 ; for ( int i = 0 ; i < 26 ; i ++ ) { res += count [ i ] * count [ i ] ; } System.out.println ( res ) ; } }
import java.util.Scanner ; public class codeforces_334_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int i = 1 ; int j = n * n ; while ( i <= j ) { System.out.println ( i + " " + j ) ; int k = 1 ; j -- ; i ++ ; } } }
import java.util.Scanner ; public class atcoder_AGC029_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; dp [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] <= dp [ i ] ) { dp [ i + 1 ] = dp [ i ] ; } else { dp [ i + 1 ] = a [ i ] ; } } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( dp [ i ] <= a [ i ] ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_313_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n + 1 ] ; for ( int i = 1 ; i <= n ; i ++ ) { a [ i ] = a [ i - 1 ] ; if ( sc.next ( ).charAt ( 0 ) == sc.next ( ).charAt ( 0 ) ) { a [ i ] ++ ; } } int q = sc.nextInt ( ) ; int [ ] b = new int [ q ] ; for ( int i = 0 ; i < q ; i ++ ) { b [ i ] = a [ sc.nextInt ( ) ] - a [ sc.nextInt ( ) - 1 ] ; } for ( int i = 0 ; i < q ; i ++ ) { System.out.println ( b [ i ] ) ; } } }
import java.util.Scanner ; public class codeforces_705_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int c = 2 ; for ( int i = 0 ; i < n ; i ++ ) { if ( arr [ i ] == 1 ) { System.out.println ( c ) ; } else if ( arr [ i ] % 2 == 0 ) { c = 3 - c ; System.out.println ( c ) ; } else { System.out.println ( c ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC127_F { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int q = sc.nextInt ( ) ; int [ ] ans = new int [ 2 ] ; int [ ] p1 = new int [ 100000 ] ; int [ ] p2 = new int [ 100000 ] ; int sum_p1 = 0 ; int sum_p2 = 0 ; int sum_b = 0 ; for ( int i = 0 ; i < q ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( a == 1 ) { if ( p1 [ 0 ] == 0 ) { p1 [ 0 ] = b ; sum_p1 += b ; } else if ( p1 [ 0 ] <= b ) { p1 [ 0 ] = b ; sum_p1 += b ; } else { p2 [ 0 ] = - b ; sum_p2 += b ; } } else { sum_b += c ; if ( p1 [ 0 ] == 0 ) { p1 [ 0 ] = b ; sum_p1 += b ; } else if ( p1 [ 0 ] <= b ) { p1 [ 0 ] = b ; sum_p1 += b ; } else { p2 [ 0 ] = - b ; sum_p2 += b ; } if ( len ( p1 ) < len ( p2 ) ) { int k = p2 [ 0 ] ; p2 [ 0 ] = - p1 [ 0 ] ; p1 [ 0 ] = - k ; sum_p2 += k ; sum_p1 -= k ; } if ( len ( p1 ) - 1 > len ( p2 ) ) { int k = p1 [ 0 ] ; p1 [ 0 ] = - p2 [ 0 ] ; p2 [ 0 ] = - k ; sum_p1 -= k ; sum_p2 += k ; } } } if ( len ( p1 ) == len ( p2 ) ) { System.out.println ( - p2 [ 0 ] + " " + ( sum_p1 - len ( p1 ) * - p2 [ 0 ] + len ( p2 ) * - p2 [ 0 ] - sum_p2 + sum_b ) ) ; } else { System.out.println ( p1 [ 0 ] + " " + ( sum_p1 - len ( p1 ) * p1 [ 0 ] + len ( p2 ) * p1 [ 0 ] - sum_p2 + sum_b ) ) ; } } } }
import java.util.Scanner ; public class atcoder_ABC153_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int h = sc.nextInt ( ) ; int sho = h / a ; int am = h % a ; if ( am != 0 ) { sho ++ ; } System.out.println ( sho ) ; } }
import java.util.Scanner ; public class atcoder_ABC158_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String result = "No" ; if ( S.contains ( "A" ) && S.contains ( "B" ) ) { result = "Yes" ; } System.out.println ( result ) ; } }
import java.util.Scanner ; public class atcoder_AGC005_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ a [ i ] - 1 ] = i ; } long ans = 0 ; for ( int k = n - 1 ; k >= 0 ; k -- ) { long l = 1 , r = 1 ; if ( k > 0 && a [ k - 1 ] > a [ k ] ) { l += b [ k - 1 ] ; } if ( k + 1 < n && a [ k + 1 ] > a [ k ] ) { r += b [ k + 1 ] ; } ans += l * r * a [ k ] ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC125_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int time = a ; int cookie = 0 ; while ( time <= t + 0.5 ) { cookie += b ; time += a ; } System.out.println ( cookie ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_ABC145_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] x = new int [ N ] ; int [ ] y = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { x [ i ] = sc.nextInt ( ) ; y [ i ] = sc.nextInt ( ) ; } double ans = 0.0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i != j ) { ans += Math.sqrt ( ( x [ i ] - x [ j ] ) * ( x [ i ] - x [ j ] ) + ( y [ i ] - y [ j ] ) * ( y [ i ] - y [ j ] ) ) ; } } } System.out.println ( ans / ( N * ( N - 1 ) ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC164_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int S = sc.nextInt ( ) ; int W = sc.nextInt ( ) ; if ( S <= W ) { System.out.println ( "unsafe" ) ; } else { System.out.println ( "safe" ) ; } } }
import java.util.Scanner ; public class codeforces_514_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int x = sc.nextInt ( ) ; if ( x <= k ) { ans += x ; } else { ans += k ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_272_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { if ( a [ i ] == a [ j ] ) { ans ++ ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_96_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { if ( i % 2 == 1 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC169_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] low = new int [ n ] ; int [ ] high = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { low [ i ] = sc.nextInt ( ) ; high [ i ] = sc.nextInt ( ) ; } Arrays.sort ( low ) ; Arrays.sort ( high ) ; if ( n % 2 == 1 ) { System.out.println ( high [ n / 2 ] - low [ n / 2 ] + 1 ) ; } else { System.out.println ( ( high [ n / 2 - 1 ] + high [ n / 2 ] ) / 2 - ( low [ n / 2 - 1 ] + low [ n / 2 ] ) / 2 * 2 + 1 ) ; } } }
import java.util.Scanner ; public class atcoder_AGC035_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] deg = new int [ n ] ; int [ ] parity = new int [ n ] ; for ( int i = 0 ; i < m ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; deg [ a - 1 ] ++ ; deg [ b - 1 ] ++ ; } if ( m % 2 != 0 ) { System.out.println ( - 1 ) ; return ; } Queue < Integer > q = new LinkedList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { q.add ( deg [ i ] ) ; } while ( ! q.isEmpty ( ) ) { int d = q.poll ( ) ; int u = d - 1 ; if ( parity [ u ] != 0 ) { int v = q.poll ( ) ; q.add ( deg [ v ] ) ; if ( parity [ u ] == 1 ) { System.out.println ( u + 1 + " " + v + 1 ) ; parity [ u ] = 0 ; } else { System.out.println ( v + 1 + " " + u + 1 ) ; parity [ u ] = 1 ; } deg [ v ] -- ; } else { int v = q.poll ( ) ; q.add ( deg [ v ] ) ; parity [ v ] = 1 - parity [ v ] ; deg [ v ] -- ; } } } }
[INST:java]
import java.util.Scanner ; public class codeforces_147_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( i > 0 && S.charAt ( i ) == ' ' && S.charAt ( i - 1 ) == ' ' ) continue ; sb.append ( S.charAt ( i ) ) ; } System.out.println ( sb.toString ( ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC152_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int MOD = 1000000007 ; long lcm = 1 ; for ( int i = 0 ; i < n ; i ++ ) { lcm = lcm * a [ i ] / gcd ( lcm , a [ i ] ) ; } long ans = lcm * sum ( a , MOD ) % MOD ; System.out.println ( ans ) ; } public static long sum ( int [ ] a , int MOD ) { long res = 0 ; for ( int i = 0 ; i < a.length ; i ++ ) { res += pow ( a [ i ] , MOD - 2 , MOD ) ; } return res ; } public static long pow ( long a , long b , long MOD ) { long res = 1 ; while ( b > 0 ) { if ( b % 2 == 1 ) { res = res * a % MOD ; } a = a * a % MOD ; b = b / 2 ; } return res ; } public static long gcd ( long a , long b ) { if ( b == 0 ) { return a ; } else { return gcd ( b , a % b ) ; } } }
import java.util.Scanner ; public class atcoder_ABC123_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int z = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ x ] ; int [ ] b = new int [ y ] ; int [ ] c = new int [ z ] ; for ( int i = 0 ; i < x ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < y ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < z ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } int [ ] ab = new int [ x * y ] ; int index = 0 ; for ( int i = 0 ; i < x ; i ++ ) { for ( int j = 0 ; j < y ; j ++ ) { ab [ index ++ ] = a [ i ] + b [ j ] ; } } java.util.Arrays.sort ( ab ) ; java.util.Arrays.sort ( c ) ; int [ ] abc = new int [ k ] ; index = 0 ; for ( int i = 0 ; i < k ; i ++ ) { for ( int j = 0 ; j < z ; j ++ ) { abc [ index ++ ] = ab [ i ] + c [ j ] ; } } java.util.Arrays.sort ( abc ) ; for ( int i = 0 ; i < k ; i ++ ) { System.out.println ( abc [ i ] ) ; } } }
import java.util.Scanner ; public class codeforces_369_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int r = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int [ ] ans = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { ans [ i ] = t / ( n - i ) + ( t % ( n - i ) <= i ? 1 : 0 ) ; } System.out.println ( ans [ 0 ] + " " + ans [ 1 ] + " " + ans [ 2 ] + " " + ans [ 3 ] + " " + ans [ 4 ] + " " + ans [ 5 ] + " " + ans [ 6 ] + " " + ans [ 7 ] + " " + ans [ 8 ] + " " + ans [ 9 ] + " " + ans [ 10 ] + " " + ans [ 11 ] + " " + ans [ 12 ] + " " + ans [ 13 ] + " " + ans [ 14 ] + " " + ans [ 15 ] + " " + ans [ 16 ] + " " + ans [ 17 ] + " " + ans [ 18 ] + " " + ans [ 19 ] + " " + ans [ 20 ] + " " + ans [ 21 ] + " " + ans [ 22 ] + " " + ans [ 23 ] + " " + ans [ 24 ] + " " + ans [ 25 ] + " " + ans [ 26 ] + " " + ans [ 27 ] + " " + ans [ 28 ] + " " + ans [ 29 ] + " " + ans [ 30 ] + " " + ans [ 31 ] + " " + ans [ 32 ] + " " + ans [ 33 ] + " " + ans [ 34 ] + " " + ans [ 35 ] + " " + ans [ 36 ] + " " + ans [ 37 ] + " " + ans [ 38 ] + " " + ans [ 39 ] + " " + ans [ 40 ] + " " + ans [ 41 ] + " " + ans [ 42 ] + " " + ans [ 43 ] + " " + ans [ 44 ] + " " + ans [ 45 ] + " " + ans [ 46 ] + " " + ans [ 47 ] + " " + ans [ 48 ] + " " + ans [ 49 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC133_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] [ ] graph = new int [ N ] [ N ] ; for ( int i = 0 ; i < N - 1 ; i ++ ) { int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; graph [ a - 1 ] [ b - 1 ] = 1 ; graph [ b - 1 ] [ a - 1 ] = 1 ; } int mod = 1000000007 ; long ans = 1 ; for ( int i = 1 ; i <= K ; i ++ ) { long sum = 0 ; for ( int j = 0 ; j < N ; j ++ ) { if ( graph [ 0 ] [ j ] == 1 ) { sum += dfs ( j , 0 , i , K ) ; } } ans = ( ans * sum ) % mod ; } System.out.println ( ans ) ; } static long dfs ( int now , int prev , int color , int K ) { if ( color == K ) { return 1 ; } long sum = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( graph [ now ] [ i ] == 1 && i != prev ) { sum += dfs ( i , now , color + 1 , K ) ; } } return sum ; } }
import java.util.Scanner ; public class codeforces_373_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int w = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int lo = 0 ; int hi = ( int ) 1e18 ; while ( hi - lo > 1 ) { int md = ( lo + hi ) / 2 ; int c = sum ( m , md ) - sum ( m , md - 1 ) ; if ( c * k <= w ) { lo = md ; } else { hi = md ; } } System.out.println ( lo ) ; } public static int sum ( int m , int x ) { int ret = 0 ; int pw = 10 ; int len = 1 ; while ( true ) { int cur = Math.min ( pw - 1 , x ) ; int prev = pw / 10 ; ret += ( cur - prev + 1 ) * len ; if ( pw - 1 < x ) { break ; } len ++ ; pw *= 10 ; } return ret ; } }
import java.util.Scanner ; public class codeforces_242_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x = sc.nextInt ( ) ; int y = sc.nextInt ( ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int count = 0 ; for ( int i = a ; i <= x ; i ++ ) { if ( i > b ) continue ; for ( int j = b ; j <= y ; j ++ ) { if ( i > j ) { count ++ ; System.out.println ( i + " " + j ) ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_608_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int s = sc.nextInt ( ) ; int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int f = sc.nextInt ( ) ; int t = sc.nextInt ( ) ; int x = t - ( s - f ) ; if ( x > c ) c = x ; } System.out.println ( s + c ) ; } }
import java.util.Scanner ; public class codeforces_469_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += a [ i ] ; } for ( int i = 0 ; i < n ; i ++ ) { sum += b [ i ] ; } if ( sum == 100 ) { System.out.println ( "I become the guy." ) ; } else { System.out.println ( "Oh, my keyboard!" ) ; } } }
import java.util.Scanner ; public class codeforces_351_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; double [ ] arr = new double [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextDouble ( ) ; } double sum = 0 ; for ( int i = 0 ; i < n ; i ++ ) { sum += arr [ i ] - ( int ) arr [ i ] ; } double ans = 2000000000.0 ; for ( int i = 0 ; i <= n ; i ++ ) { if ( i + sum >= n ) { ans = Math.min ( ans , Math.abs ( i - sum ) ) ; } } System.out.println ( String.format ( "%.3f" , ans ) ) ; } }
import java.util.Scanner ; public class atcoder_AGC003_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } Arrays.sort ( A ) ; int cnt = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( ( A [ i ] % N ) % 2 != i % 2 ) { cnt ++ ; } } System.out.println ( cnt / 2 ) ; } }
import java.util.Scanner ; public class codeforces_629_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] [ ] cake = new int [ n ] [ n ] ; int happiness = 0 ; int chocCount = 0 ; int nfat = 1 ; for ( int i = 0 ; i < n ; i ++ ) { String line = sc.next ( ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( line.charAt ( j ) == 'C' ) { chocCount ++ ; } } if ( chocCount > 1 ) { for ( int j = chocCount ; j > chocCount - 2 ; j -- ) { nfat *= j ; } happiness += nfat / 2 ; } nfat = 1 ; chocCount = 0 ; } int posCount = 0 ; for ( int j = 0 ; j < n ; j ++ ) { for ( int i = 0 ; i < n ; i ++ ) { if ( cake [ i ] [ j ] == 'C' ) { chocCount ++ ; } } if ( chocCount > 1 ) { for ( int i = chocCount ; i > chocCount - 2 ; i -- ) { nfat *= i ; } happiness += nfat / 2 ; } nfat = 1 ; chocCount = 0 ; } System.out.println ( happiness ) ; } }
[INST:java]
import java.util.Scanner ; public class codeforces_459_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int x1 = sc.nextInt ( ) ; int y1 = sc.nextInt ( ) ; int x2 = sc.nextInt ( ) ; int y2 = sc.nextInt ( ) ; if ( x1 == x2 ) { if ( y1 == y2 ) { System.out.println ( x1 + " " + y1 + " " + x2 + " " + y2 ) ; } else { int d = ( int ) Math.sqrt ( ( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 ) ) ; System.out.println ( x1 + " " + ( y1 + d ) + " " + x2 + " " + ( y2 - d ) ) ; } } else if ( y1 == y2 ) { int d = ( int ) Math.sqrt ( ( x2 - x1 ) * ( x2 - x1 ) + ( y2 - y1 ) * ( y2 - y1 ) ) ; System.out.println ( x1 + " " + ( y1 + d ) + " " + x2 + " " + ( y2 - d ) ) ; } else { int dx = x2 - x1 ; int dy = y2 - y1 ; if ( dx == 0 ) { if ( dy == 0 ) { System.out.println ( x1 + " " + y1 + " " + x2 + " " + y2 ) ; } else { int d = ( int ) Math.sqrt ( dx * dx + dy * dy ) ; System.out.println ( x1 + " " + ( y1 + d ) + " " + x2 + " " + ( y2 - d ) ) ; } } else if ( dy == 0 ) { int d = ( int ) Math.sqrt ( dx * dx + dy * dy ) ; System.out.println ( x1 + " " + ( y1 + d ) + " " + x2 + " " + ( y2 - d ) ) ; } else { int q = dy / dx ; if ( q == 1 ) { System.out.println ( x1 + " " + y1 + " " + x2 + " " + y2 ) ; } else if ( q == - 1 ) { System.out.println ( x2 + " " + y2 + " " + x1 + " " + y1 ) ; } else { System.out.println ( "-1" ) ; } } } } } }
import java.util.Scanner ; public class codeforces_32_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; String ans = "" ; for ( int i = 0 ; i < S.length ( ) ; i ++ ) { if ( S.charAt ( i ) == '.' ) { ans += "0" ; } else { ans += "2" ; i ++ ; if ( S.charAt ( i ) == '.' ) { ans += "1" ; } else { ans += "2" ; } } } System.out.println ( ans ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_AGC012_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int sum = 0 ; for ( int i = n - 2 ; i >= n - 2 * n ; i -= 2 ) { sum += a [ i ] ; } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC122_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; long mod = 1000000007 ; long [ ] [ ] dp = new long [ n + 1 ] [ 4 ] ; dp [ 0 ] [ 0 ] = 1 ; for ( int i = 1 ; i <= n ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { dp [ i ] [ j ] = ( dp [ i - 1 ] [ j ] + dp [ i - 1 ] [ ( j + 1 ) % 4 ] ) % mod ; } } long ans = 0 ; for ( int j = 0 ; j < 4 ; j ++ ) { ans = ( ans + dp [ n ] [ j ] ) % mod ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC042_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int c = sc.nextInt ( ) ; if ( a == 5 || b == 5 || c == 5 ) { if ( a + b + c == 17 ) { System.out.println ( "YES" ) ; } else { System.out.println ( "NO" ) ; } } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC123_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ 5 ] ; for ( int i = 0 ; i < 5 ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int min = A [ 0 ] ; for ( int i = 1 ; i < 5 ; i ++ ) { if ( min > A [ i ] ) { min = A [ i ] ; } } System.out.println ( ( int ) Math.ceil ( ( double ) N / min ) + 4 ) ; } }
import java.util.Scanner ; public class atcoder_ABC167_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; a [ 0 ] = - 1 ; for ( int i = 1 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ n + 1 ] ; dp [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { dp [ i ] = dp [ i - 1 ] + 1 ; if ( a [ i - 1 ] != a [ i ] ) { dp [ i ] = Math.min ( dp [ i ] , dp [ i - 1 ] ) ; } } int ans = 0 ; for ( int i = 0 ; i <= n ; i ++ ) { if ( dp [ i ] <= k ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC051_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; String S = sc.next ( ) ; System.out.println ( S.replace ( ",", " " ) ) ; } }
import java.util.Scanner ; public class atcoder_ABC122_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int q = sc.nextInt ( ) ; String s = sc.next ( ) ; int [ ] [ ] queries = new int [ q ] [ 2 ] ; for ( int i = 0 ; i < q ; i ++ ) { queries [ i ] [ 0 ] = sc.nextInt ( ) ; queries [ i ] [ 1 ] = sc.nextInt ( ) ; } int [ ] cumsum = new int [ n + 1 ] ; cumsum [ 0 ] = 0 ; for ( int i = 1 ; i <= n ; i ++ ) { cumsum [ i ] = cumsum [ i - 1 ] + ( s.substring ( i - 1 , i + 1 ).equals ( "AC" ) ? 1 : 0 ) ; } for ( int i = 0 ; i < q ; i ++ ) { System.out.println ( cumsum [ queries [ i ] [ 1 ] - 1 ] - cumsum [ queries [ i ] [ 0 ] - 1 ] ) ; } } }
import java.util.Scanner ; public class codeforces_673_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int ans = 0 ; if ( arr [ 0 ] > 15 ) { ans = 15 ; } else { for ( int i = 1 ; i < n ; i ++ ) { if ( arr [ i ] - arr [ i - 1 ] > 15 ) { ans = arr [ i - 1 ] + 15 ; break ; } } if ( ans == 0 ) { if ( arr [ n - 1 ] == 90 || arr [ n - 1 ] + 15 >= 90 ) { ans = 90 ; } else { ans = arr [ n - 1 ] + 15 ; } } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC174_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int a = 1 ; int b = 0 ; for ( int i = 0 ; i < n ; i ++ ) { b = Math.max ( b , arr [ i ] ) ; } int ans = b ; while ( a <= b ) { int mid = ( a + b ) / 2 ; if ( check ( arr , k , mid ) ) { ans = mid ; b = mid - 1 ; } else { a = mid + 1 ; } } System.out.println ( ans ) ; } public static boolean check ( int [ ] arr , int k , int mid ) { int cnt = 0 ; for ( int i = 0 ; i < arr.length ; i ++ ) { if ( arr [ i ] % mid == 0 ) { cnt ++ ; } cnt -= arr [ i ] / mid ; } return cnt >= 0 ; } }
import java.util.Scanner ; public class codeforces_637_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String [ ] s = new String [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { s [ i ] = sc.next ( ) ; } int max = 0 ; String ans = "" ; for ( int i = 0 ; i < n ; i ++ ) { int cnt = 0 ; for ( int j = 0 ; j < n ; j ++ ) { if ( s [ i ].equals ( s [ j ] ) ) { cnt ++ ; } } if ( cnt > max ) { max = cnt ; ans = s [ i ] ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_11_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int [ ] x = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { x [ i ] = sc.nextInt ( ) ; } int m = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { if ( x [ i ] >= x [ i + 1 ] ) { int q = ( x [ i ] - x [ i + 1 ] ) / d + 1 ; m += q ; x [ i + 1 ] += q * d ; } } System.out.println ( m ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_ABC150_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] b = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { ans += Math.abs ( a [ i ] - b [ i ] ) ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC145_E { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int T = sc.nextInt ( ) ; int [ ] [ ] dp = new int [ N + 1 ] [ T + 1 ] ; int [ ] [ ] time = new int [ N + 1 ] [ 2 ] ; for ( int i = 1 ; i <= N ; i ++ ) { time [ i ] [ 0 ] = sc.nextInt ( ) ; time [ i ] [ 1 ] = sc.nextInt ( ) ; } for ( int i = 1 ; i <= N ; i ++ ) { for ( int j = 1 ; j <= T ; j ++ ) { if ( time [ i ] [ 0 ] > j ) { dp [ i ] [ j ] = dp [ i - 1 ] [ j ] ; } else { dp [ i ] [ j ] = Math.max ( dp [ i - 1 ] [ j ] , time [ i ] [ 1 ] + dp [ i - 1 ] [ j - time [ i ] [ 0 ] ] ) ; } } } int ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { ans += time [ i ] [ 1 ] ; } ans += dp [ N ] [ T ] ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_621_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int odd = 0 ; int sum = 0 ; for ( int i = n - 1 ; i >= 0 ; i -- ) { if ( a [ i ] % 2 == 1 ) { odd ++ ; } else { if ( odd > 0 ) { sum += a [ i ] ; odd -- ; } } } System.out.println ( sum ) ; } }
import java.util.Scanner ; public class codeforces_544_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; if ( k <= Math.max ( n * n / 2 , n * n - n * n / 2 ) ) { System.out.println ( "YES" ) ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( i % 2 == j % 2 && k > 0 ) { System.out.print ( "L" ) ; k -- ; } else { System.out.print ( "S" ) ; } } System.out.println ( ) ; } } else { System.out.println ( "NO" ) ; } } }
import java.util.Scanner ; public class atcoder_ABC107_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int K = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int [ ] plus = new int [ N ] ; int [ ] minus = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { if ( A [ i ] > 0 ) { plus [ i ] = A [ i ] ; } else { minus [ i ] = A [ i ] ; } } int x = 0 ; int y = minus.length - 1 ; int lastx = plus.length ; int lasty = minus.length ; int ans = ( int ) 1e9 ; for ( int k = 0 ; k <= K ; k ++ ) { for ( int j = 0 ; j <= k ; j ++ ) { if ( j > lastx || k - j > lasty ) { continue ; } if ( j == 0 ) { p = 0 ; } else { p = plus [ j - 1 ] ; } if ( k - j == 0 ) { m = 0 ; } else { m = minus [ lasty - ( k - j ) ] ; } ans = Math.min ( ans , 2 * p + Math.abs ( m ) , p + 2 * Math.abs ( m ) ) ; } } System.out.println ( ans ) ; } } }
import java.util.Scanner ; public class codeforces_450_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int [ ] l = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { l [ i ] = sc.nextInt ( ) ; } int [ ] l2 = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( l [ i ] % m == 0 ) { l2 [ i ] = l [ i ] / m ; } else { l2 [ i ] = l [ i ] / m + 1 ; } } int mx = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( l2 [ i ] > mx ) { mx = l2 [ i ] ; } } int ind = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( l2 [ i ] == mx ) { ind = i ; } } System.out.println ( ind + 1 ) ; } }
import java.util.Scanner ; public class atcoder_AGC017_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int P = sc.nextInt ( ) ; int [ ] a = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int one = 0 ; int zero = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( a [ i ] == 1 ) { one ++ ; } else { zero ++ ; } } long pattern_a = 0 ; long pattern_b = 0 ; for ( int j = 0 ; j <= zero ; j ++ ) { pattern_b += combi ( zero , j ) ; } int time = 0 ; while ( time <= one ) { if ( time % 2 == P ) { pattern_a += combi ( one , time ) ; } time ++ ; } System.out.println ( ( int ) ( pattern_a * pattern_b ) ) ; } public static long combi ( int n , int k ) { long a = 1 ; for ( int i = 0 ; i < k ; i ++ ) { a *= n - i ; a /= i + 1 ; } return a ; } }
import java.util.Scanner ; public class codeforces_682_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int c = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > c ) { c ++ ; } } System.out.println ( c + 1 ) ; } }
[INST:java]
import java.util.Scanner ; public class atcoder_ARC062_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int sum = a + b ; System.out.println ( sum ) ; } }
import java.util.Scanner ; public class atcoder_ABC114_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int ans = 0 ; for ( int i = 1 ; i <= N ; i ++ ) { if ( i % 10 == 7 || i % 10 == 5 || i % 10 == 3 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC002_B { public static void main ( String [ ] args ) { Scanner stdIn = new Scanner ( System.in ) ; int N = stdIn.nextInt ( ) ; int M = stdIn.nextInt ( ) ; int [ ] [ ] balls = new int [ N ] [ 2 ] ; for ( int i = 0 ; i < N ; i ++ ) { balls [ i ] [ 0 ] = 1 ; balls [ i ] [ 1 ] = 0 ; } balls [ 0 ] [ 0 ] = 0 ; balls [ 0 ] [ 1 ] = 1 ; for ( int i = 0 ; i < M ; i ++ ) { int x = stdIn.nextInt ( ) ; int y = stdIn.nextInt ( ) ; if ( balls [ x - 1 ] [ 0 ] >= 1 && balls [ x - 1 ] [ 1 ] >= 1 ) { balls [ x - 1 ] [ 0 ] -- ; balls [ y - 1 ] [ 1 ] ++ ; } else if ( balls [ x - 1 ] [ 0 ] == 0 ) { balls [ x - 1 ] [ 1 ] -- ; balls [ y - 1 ] [ 1 ] ++ ; } else { balls [ x - 1 ] [ 0 ] -- ; balls [ y - 1 ] [ 0 ] ++ ; } } int ans = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( balls [ i ] [ 1 ] > 0 ) { ans ++ ; } } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC145_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; String s = sc.next ( ) ; if ( n % 2 == 1 ) { System.out.println ( "No" ) ; } else if ( s.substring ( 0 , n / 2 ).equals ( s.substring ( n / 2 ) ) ) { System.out.println ( "Yes" ) ; } else { System.out.println ( "No" ) ; } } }
import java.util.Scanner ; public class codeforces_61_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int m = sc.nextInt ( ) ; int k = sc.nextInt ( ) ; int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < m ; j ++ ) { if ( sc.nextInt ( ) == k ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class atcoder_ABC136_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int ans = 0 ; int i = 1 ; while ( 10 * i <= N ) { ans += 10 * i - 10 * ( i - 1 ) ; i += 2 ; } ans += Math.max ( 0 , N - 10 * ( i - 1 ) + 1 ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ARC086_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int [ ] A = new int [ N ] ; for ( int i = 0 ; i < N ; i ++ ) { A [ i ] = sc.nextInt ( ) ; } int max = 0 ; int maxIndex = 0 ; for ( int i = 0 ; i < N ; i ++ ) { if ( Math.abs ( A [ i ] ) > max ) { max = Math.abs ( A [ i ] ) ; maxIndex = i ; } } if ( max == 0 ) { System.out.println ( 0 ) ; } else if ( A [ maxIndex ] > 0 ) { System.out.println ( 2 * N - 1 ) ; for ( int i = 0 ; i < N ; i ++ ) { if ( i != maxIndex ) { System.out.println ( maxIndex + 1 + " " + ( i + 1 ) ) ; } } for ( int i = 0 ; i < N - 1 ; i ++ ) { if ( i != maxIndex ) { System.out.println ( ( i + 1 ) + " " + ( i + 2 ) ) ; } } } else { System.out.println ( 2 * N - 1 ) ; for ( int i = 0 ; i < N ; i ++ ) { if ( i != maxIndex ) { System.out.println ( maxIndex + 1 + " " + ( i + 1 ) ) ; } } for ( int i = 1 ; i < N ; i ++ ) { if ( i != maxIndex ) { System.out.println ( ( i + 1 ) + " " + i ) ; } } } } } }
import java.util.Scanner ; public class atcoder_ABC124_C { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a = 0 ; int b = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( i % 2 == 0 ) { a += sc.nextInt ( ) ; } else { b += sc.nextInt ( ) ; } } int ans = Math.min ( n - a , n - b ) ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class codeforces_644_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; int [ ] d = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; d [ i ] = sc.nextInt ( ) ; } int [ ] res = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { res [ i ] = - 1 ; } int t = 0 ; for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > t && res [ i ] == - 1 ) { t = a [ i ] + d [ i ] ; res [ i ] = t ; } else if ( a [ i ] >= t && res [ i ] == - 1 ) { if ( res [ i - 1 ] != - 1 ) { t = res [ i - 1 ] + d [ i ] ; res [ i ] = t ; } else { res [ i ] = - 1 ; } } else { res [ i ] = - 1 ; } } for ( int i = 0 ; i < n ; i ++ ) { System.out.println ( res [ i ] ) ; } } }
import java.util.Scanner ; public class codeforces_624_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; for ( int i = 0 ; i < n ; i ++ ) { int max = 0 ; for ( int j = i + 1 ; j < n ; j ++ ) { if ( a [ j ] < a [ i ] ) { max = Math.max ( max , a [ j ] ) ; } } ans += max ; } System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_AGC027_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int x = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int ans = 0 ; if ( a [ 0 ] > x ) { System.out.println ( 0 ) ; return ; } for ( int i = 0 ; i < n ; i ++ ) { if ( a [ i ] > x ) { x = 0 ; break ; } x -= a [ i ] ; ans ++ ; } if ( x != 0 ) { ans -- ; } System.out.println ( ans ) ; } }
[java]
import java.util.Scanner ; public class codeforces_669_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int ans = ( n * 2 + 1 ) / 3 ; System.out.println ( ans ) ; } }
import java.util.Scanner ; public class atcoder_ABC135_D { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] a = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int [ ] dp = new int [ 13 ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( i == 0 ) { if ( a [ i ] != - 1 ) { dp [ a [ i ] ] ++ ; } else { for ( int j = 0 ; j < 10 ; j ++ ) { dp [ j ] ++ ; } } } else { if ( a [ i ] != - 1 ) { for ( int k = 0 ; k < 13 ; k ++ ) { dp [ ( k * 10 + a [ i ] ) % 13 ] += dp [ k ] ; } } else { for ( int j = 0 ; j < 10 ; j ++ ) { for ( int k = 0 ; k < 13 ; k ++ ) { dp [ ( k * 10 + j ) % 13 ] += dp [ k ] ; } } } for ( int k = 0 ; k < 13 ; k ++ ) { dp [ k ] %= 1000000007 ; } } } System.out.println ( dp [ 5 ] ) ; } }
import java.util.Scanner ; public class atcoder_ABC133_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int d = sc.nextInt ( ) ; int [ ] [ ] points = new int [ n ] [ d ] ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < d ; j ++ ) { points [ i ] [ j ] = sc.nextInt ( ) ; } } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { double dist = 0 ; for ( int k = 0 ; k < d ; k ++ ) { dist += Math.pow ( points [ i ] [ k ] - points [ j ] [ k ] , 2 ) ; } dist = Math.sqrt ( dist ) ; if ( dist % 1 == 0 ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_622_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int N = sc.nextInt ( ) ; int l = 1 ; int r = N ; while ( l < r ) { int m = ( l + r ) / 2 ; int idxcnt = m * ( m + 1 ) / 2 ; if ( idxcnt <= N ) { l = m + 1 ; } else { r = m ; } } l -- ; int idxcnt = l * ( l + 1 ) / 2 ; System.out.println ( N - idxcnt ) ; } }
import java.util.Scanner ; public class codeforces_519_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int a [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = sc.nextInt ( ) ; } int b [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { b [ i ] = sc.nextInt ( ) ; } int c [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { c [ i ] = sc.nextInt ( ) ; } int x = 0 ; for ( int i = 0 ; i < n ; i ++ ) { x += a [ i ] ; } int y = 0 ; for ( int i = 0 ; i < n ; i ++ ) { y += b [ i ] ; } int z = 0 ; for ( int i = 0 ; i < n ; i ++ ) { z += c [ i ] ; } System.out.println ( Math.abs ( x - y ) ) ; System.out.println ( Math.abs ( y - z ) ) ; } }
100%|██████████| 231/231 [00:00<00:00, 9402.08it/s]
import java.util.Scanner ; public class codeforces_131_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; int [ ] arr = new int [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = sc.nextInt ( ) ; } int count = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] + arr [ j ] == 0 ) { count ++ ; } } } System.out.println ( count ) ; } }
import java.util.Scanner ; public class codeforces_379_A { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int a = sc.nextInt ( ) ; int b = sc.nextInt ( ) ; int s = 0 ; int r = 0 ; int d = 122 ; int e = 121 ; while ( d % e == 1 ) { int x = 1 ; Queue < Integer > q = new LinkedList < > ( ) ; Thread t = new Thread ( ) { public void run ( ) { q.add ( x + d ) ; } } ; t.start ( ) ; try { t.join ( ) ; } catch ( InterruptedException e1 ) { e1.printStackTrace ( ) ; } int y = q.remove ( ) ; d = y ; while ( a > 0 || r >= b ) { a += r / b ; r = r % b ; s += a ; r += a % b ; a /= b ; } } System.out.println ( s ) ; } }
+ python3 -u test_translation.py --dataset Avatar --source_lang Python --target_lang Java --model yangccccc/codellama-multi --test_type use_test
testing translations
Filename:  atcoder_ABC146_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC146_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC119_B.java
Filename:  codeforces_569_A.java
Filename:  atcoder_ABC112_C.java
Filename:  atcoder_ABC104_C.java
Filename:  codeforces_678_A.java
Filename:  codeforces_400_A.java
Filename:  atcoder_ABC105_D.java
Filename:  atcoder_AGC033_B.java
Filename:  codeforces_55_A.java
Filename:  atcoder_ABC106_C.java
Filename:  atcoder_AGC046_B.java
Filename:  codeforces_7_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_7_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC021_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC021_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC089_C.java
Filename:  atcoder_AGC013_A.java
Filename:  codeforces_609_B.java
Filename:  atcoder_ABC151_A.java
Filename:  codeforces_581_B.java
Filename:  atcoder_ABC126_E.java
Filename:  atcoder_ABC118_C.java
Filename:  atcoder_ABC132_F.java
Filename:  codeforces_92_A.java
Filename:  atcoder_ABC170_A.java
Filename:  codeforces_653_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_653_A.java' returned non-zero exit status 1.
Filename:  codeforces_8_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_8_B.java' returned non-zero exit status 1.
Filename:  codeforces_146_A.java
Filename:  codeforces_299_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_299_A.java' returned non-zero exit status 1.
Filename:  codeforces_518_B.java
Filename:  codeforces_421_A.java
Filename:  codeforces_340_A.java
Filename:  atcoder_ABC140_F.java
Filename:  codeforces_534_B.java
Filename:  codeforces_672_A.java
Filename:  codeforces_148_B.java
Filename:  codeforces_59_A.java
Filename:  codeforces_474_B.java
Filename:  codeforces_267_A.java
Filename:  atcoder_ABC172_D.java
Filename:  atcoder_ABC112_A.java
Filename:  codeforces_342_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_342_B.java' returned non-zero exit status 1.
Filename:  codeforces_356_A.java
Filename:  atcoder_ABC178_A.java
Filename:  atcoder_ABC158_B.java
Filename:  codeforces_296_A.java
Filename:  atcoder_AGC019_A.java
Filename:  atcoder_ABC134_E.java
Filename:  codeforces_387_A.java
Filename:  codeforces_665_A.java
Filename:  codeforces_154_A.java
Filename:  atcoder_ABC150_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC150_D.java' returned non-zero exit status 1.
Filename:  codeforces_216_B.java
Filename:  codeforces_612_B.java
Filename:  codeforces_583_B.java
Filename:  codeforces_607_A.java
Filename:  atcoder_AGC010_B.java
Filename:  codeforces_190_A.java
Filename:  codeforces_387_B.java
Filename:  atcoder_ABC137_D.java
Filename:  atcoder_ABC120_C.java
Filename:  codeforces_397_B.java
Filename:  atcoder_ARC102_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ARC102_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC148_F.java
Filename:  atcoder_ABC070_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC070_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC152_C.java
Filename:  atcoder_ABC111_C.java
Filename:  codeforces_268_A.java
Filename:  codeforces_651_A.java
Filename:  codeforces_274_A.java
Filename:  codeforces_306_A.java
Filename:  codeforces_400_B.java
Filename:  codeforces_327_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_327_A.java' returned non-zero exit status 1.
Filename:  codeforces_567_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_567_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC109_B.java
Filename:  codeforces_579_A.java
Filename:  codeforces_189_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_189_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC037_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC037_E.java' returned non-zero exit status 1.
Filename:  codeforces_222_A.java
Filename:  atcoder_ABC165_C.java
Filename:  codeforces_203_B.java
Filename:  codeforces_287_A.java
Filename:  codeforces_37_A.java
Filename:  atcoder_AGC006_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC006_B.java' returned non-zero exit status 1.
Filename:  codeforces_632_B.java
Filename:  codeforces_110_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_110_B.java' returned non-zero exit status 1.
Filename:  atcoder_AGC034_B.java
Filename:  atcoder_ABC110_C.java
Filename:  atcoder_ABC123_B.java
Filename:  atcoder_AGC025_A.java
Filename:  atcoder_ABC108_B.java
Filename:  atcoder_ABC171_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC171_E.java' returned non-zero exit status 1.
Filename:  codeforces_445_A.java
Filename:  atcoder_ABC143_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC143_D.java' returned non-zero exit status 1.
Filename:  codeforces_30_A.java
Filename:  atcoder_ABC142_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC142_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC171_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC171_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC107_D.java
Filename:  codeforces_106_B.java
Filename:  atcoder_AGC002_A.java
Filename:  atcoder_ABC140_D.java
Filename:  atcoder_ABC167_C.java
Filename:  atcoder_ABC143_A.java
Filename:  atcoder_ABC139_B.java
Filename:  atcoder_ABC124_A.java
Filename:  codeforces_25_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_25_A.java' returned non-zero exit status 1.
Filename:  codeforces_282_B.java
Filename:  atcoder_ABC169_C.java
Filename:  codeforces_350_B.java
Filename:  atcoder_ABC142_A.java
Filename:  codeforces_333_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_333_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC166_C.java
Filename:  codeforces_79_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_79_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC004_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC004_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC174_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC174_C.java' returned non-zero exit status 1.
Filename:  codeforces_67_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_67_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC168_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC168_C.java' returned non-zero exit status 1.
Filename:  codeforces_354_A.java
Filename:  codeforces_49_A.java
Filename:  atcoder_ABC168_B.java
Filename:  atcoder_ABC149_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC149_C.java' returned non-zero exit status 1.
Filename:  codeforces_302_A.java
Filename:  codeforces_58_B.java
Filename:  atcoder_AGC028_A.java
Filename:  codeforces_56_B.java
Filename:  codeforces_99_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_99_A.java' returned non-zero exit status 1.
Filename:  codeforces_412_A.java
Filename:  codeforces_86_A.java
Filename:  atcoder_ABC128_C.java
Filename:  atcoder_AGC004_B.java
Filename:  atcoder_ABC150_E.java
Filename:  codeforces_456_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_456_A.java' returned non-zero exit status 1.
Filename:  codeforces_598_A.java
Filename:  atcoder_AGC027_B.java
Filename:  codeforces_408_B.java
Filename:  atcoder_AGC006_A.java
Filename:  atcoder_AGC043_B.java
Filename:  codeforces_31_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_31_A.java' returned non-zero exit status 1.
Filename:  atcoder_AGC011_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC011_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC125_C.java
Filename:  atcoder_AGC007_C.java
Filename:  codeforces_459_B.java
Filename:  atcoder_ABC125_B.java
Filename:  atcoder_ABC043_B.java
Filename:  codeforces_546_A.java
Filename:  codeforces_231_A.java
Filename:  atcoder_AGC033_A.java
Filename:  codeforces_500_A.java
Filename:  atcoder_ABC155_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC155_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC147_D.java
Filename:  atcoder_AGC046_A.java
Filename:  codeforces_596_B.java
Filename:  codeforces_171_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_171_A.java' returned non-zero exit status 1.
Filename:  codeforces_276_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_276_B.java' returned non-zero exit status 1.
Filename:  codeforces_617_B.java
Filename:  codeforces_55_B.java
Filename:  atcoder_ABC178_B.java
Filename:  atcoder_ABC164_D.java
Filename:  codeforces_242_B.java
Filename:  atcoder_ABC132_A.java
Filename:  atcoder_ABC169_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC169_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC126_D.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC126_D.java' returned non-zero exit status 1.
Filename:  atcoder_ABC129_E.java
Filename:  codeforces_678_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_678_B.java' returned non-zero exit status 1.
Filename:  codeforces_462_B.java
Filename:  codeforces_334_A.java
Filename:  atcoder_AGC029_C.java
Filename:  codeforces_313_B.java
Filename:  codeforces_705_B.java
Filename:  atcoder_ABC127_F.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC127_F.java' returned non-zero exit status 1.
Filename:  atcoder_ABC153_A.java
Filename:  atcoder_ABC158_A.java
Filename:  atcoder_AGC005_B.java
Filename:  atcoder_ABC125_A.java
Filename:  atcoder_ABC145_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC145_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC164_A.java
Filename:  codeforces_514_A.java
Filename:  codeforces_272_B.java
Filename:  codeforces_96_B.java
Filename:  atcoder_ABC169_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC169_E.java' returned non-zero exit status 1.
Filename:  atcoder_AGC035_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC035_B.java' returned non-zero exit status 1.
Filename:  codeforces_147_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_147_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC152_E.java
Filename:  atcoder_ABC123_D.java
Filename:  codeforces_369_B.java
Filename:  atcoder_ABC133_E.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC133_E.java' returned non-zero exit status 1.
Filename:  codeforces_373_B.java
Filename:  codeforces_242_A.java
Filename:  codeforces_608_A.java
Filename:  codeforces_469_A.java
Filename:  codeforces_351_A.java
Filename:  atcoder_AGC003_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC003_C.java' returned non-zero exit status 1.
Filename:  codeforces_629_A.java
Filename:  codeforces_459_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_459_A.java' returned non-zero exit status 1.
Filename:  codeforces_32_B.java
Filename:  atcoder_AGC012_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_AGC012_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC122_D.java
Filename:  atcoder_ABC042_A.java
Filename:  atcoder_ABC123_C.java
Filename:  atcoder_ABC167_D.java
Filename:  atcoder_ABC051_A.java
Filename:  atcoder_ABC122_C.java
Filename:  codeforces_673_A.java
Filename:  atcoder_ABC174_E.java
Filename:  codeforces_637_A.java
Filename:  codeforces_11_A.java
Filename:  atcoder_ABC150_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC150_C.java' returned non-zero exit status 1.
Filename:  atcoder_ABC145_E.java
Filename:  codeforces_621_A.java
Filename:  codeforces_544_B.java
Filename:  atcoder_ABC107_C.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ABC107_C.java' returned non-zero exit status 1.
Filename:  codeforces_450_A.java
Filename:  atcoder_AGC017_A.java
Filename:  codeforces_682_B.java
Filename:  atcoder_ARC062_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ARC062_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC114_C.java
Filename:  atcoder_AGC002_B.java
Filename:  atcoder_ABC145_B.java
Filename:  codeforces_61_B.java
Filename:  atcoder_ABC136_B.java
Filename:  atcoder_ARC086_B.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/atcoder_ARC086_B.java' returned non-zero exit status 1.
Filename:  atcoder_ABC124_C.java
Filename:  codeforces_644_B.java
Filename:  codeforces_624_B.java
Filename:  atcoder_AGC027_A.java
Filename:  codeforces_669_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_669_A.java' returned non-zero exit status 1.
Filename:  atcoder_ABC135_D.java
Filename:  atcoder_ABC133_B.java
Filename:  codeforces_622_A.java
Filename:  codeforces_519_B.java
Filename:  codeforces_131_B.java
Filename:  codeforces_379_A.java
Command 'javac ../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/codeforces_379_A.java' returned non-zero exit status 1.
../Experiment_Results/intermediate/SR/Translation/use_test/codellama-multi/Avatar/Python/Java-sanitized/pass_id.txt
#Success: 50
Success: ['atcoder_ABC112_A.java', 'codeforces_705_B.java', 'atcoder_AGC002_A.java', 'atcoder_ABC125_A.java', 'atcoder_ABC145_B.java', 'codeforces_55_A.java', 'atcoder_ABC151_A.java', 'atcoder_ABC152_C.java', 'codeforces_569_A.java', 'atcoder_ABC178_A.java', 'atcoder_ABC124_A.java', 'atcoder_ABC104_C.java', 'codeforces_608_A.java', 'atcoder_ABC140_D.java', 'atcoder_ABC051_A.java', 'atcoder_ABC108_B.java', 'atcoder_ABC133_B.java', 'atcoder_ABC042_A.java', 'atcoder_AGC046_A.java', 'codeforces_268_A.java', 'codeforces_534_B.java', 'codeforces_32_B.java', 'atcoder_AGC002_B.java', 'codeforces_607_A.java', 'codeforces_609_B.java', 'codeforces_450_A.java', 'codeforces_340_A.java', 'atcoder_ABC168_B.java', 'codeforces_59_A.java', 'codeforces_106_B.java', 'codeforces_673_A.java', 'codeforces_11_A.java', 'codeforces_546_A.java', 'atcoder_ABC118_C.java', 'codeforces_282_B.java', 'codeforces_354_A.java', 'atcoder_ABC143_A.java', 'codeforces_267_A.java', 'codeforces_445_A.java', 'atcoder_ABC158_A.java', 'codeforces_583_B.java', 'codeforces_544_B.java', 'atcoder_ABC043_B.java', 'codeforces_678_A.java', 'codeforces_581_B.java', 'atcoder_ABC139_B.java', 'atcoder_ABC164_A.java', 'atcoder_ABC142_A.java', 'codeforces_459_B.java', 'codeforces_131_B.java']
Fail: ['atcoder_ABC167_C.java', 'atcoder_AGC034_B.java', 'codeforces_637_A.java', 'atcoder_AGC028_A.java', 'codeforces_682_B.java', 'atcoder_AGC033_B.java', 'codeforces_397_B.java', 'atcoder_AGC004_B.java', 'codeforces_49_A.java', 'codeforces_306_A.java', 'codeforces_148_B.java', 'codeforces_373_B.java', 'codeforces_55_B.java', 'atcoder_ABC150_E.java', 'atcoder_AGC017_A.java', 'atcoder_ABC165_C.java', 'codeforces_56_B.java', 'atcoder_ABC178_B.java', 'atcoder_AGC007_C.java', 'codeforces_596_B.java', 'codeforces_96_B.java', 'atcoder_ABC110_C.java', 'codeforces_629_A.java', 'atcoder_ABC174_E.java', 'atcoder_ABC105_D.java', 'atcoder_ABC125_C.java', 'codeforces_617_B.java', 'codeforces_296_A.java', 'codeforces_462_B.java', 'codeforces_651_A.java', 'codeforces_612_B.java', 'codeforces_350_B.java', 'atcoder_ABC145_E.java', 'codeforces_190_A.java', 'codeforces_216_B.java', 'atcoder_AGC013_A.java', 'codeforces_579_A.java', 'atcoder_AGC029_C.java', 'codeforces_30_A.java', 'atcoder_ABC112_C.java', 'codeforces_222_A.java', 'atcoder_ABC147_D.java', 'atcoder_AGC027_A.java', 'codeforces_644_B.java', 'atcoder_AGC006_A.java', 'atcoder_ABC136_B.java', 'atcoder_ABC148_F.java', 'codeforces_351_A.java', 'codeforces_624_B.java', 'codeforces_274_A.java', 'atcoder_ABC172_D.java', 'codeforces_203_B.java', 'atcoder_ABC122_D.java', 'codeforces_408_B.java', 'atcoder_ABC114_C.java', 'codeforces_387_B.java', 'atcoder_AGC025_A.java', 'codeforces_598_A.java', 'atcoder_ABC125_B.java', 'atcoder_AGC005_B.java', 'atcoder_ABC153_A.java', 'codeforces_334_A.java', 'codeforces_621_A.java', 'codeforces_86_A.java', 'atcoder_AGC027_B.java', 'codeforces_242_A.java', 'atcoder_AGC046_B.java', 'atcoder_ABC152_E.java', 'atcoder_ABC109_B.java', 'atcoder_ABC132_A.java', 'atcoder_ABC089_C.java', 'codeforces_412_A.java', 'codeforces_369_B.java', 'codeforces_92_A.java', 'atcoder_ABC120_C.java', 'codeforces_231_A.java', 'atcoder_AGC019_A.java', 'atcoder_ABC170_A.java', 'atcoder_ABC129_E.java', 'codeforces_356_A.java', 'codeforces_500_A.java', 'codeforces_37_A.java', 'atcoder_ABC128_C.java', 'codeforces_474_B.java', 'codeforces_469_A.java', 'codeforces_421_A.java', 'atcoder_ABC126_E.java', 'codeforces_302_A.java', 'codeforces_61_B.java', 'codeforces_313_B.java', 'codeforces_672_A.java', 'codeforces_400_A.java', 'codeforces_622_A.java', 'atcoder_AGC033_A.java', 'atcoder_ABC111_C.java', 'atcoder_ABC123_C.java', 'atcoder_ABC122_C.java', 'atcoder_ABC119_B.java', 'atcoder_ABC158_B.java', 'atcoder_ABC135_D.java', 'atcoder_ABC134_E.java', 'codeforces_518_B.java', 'codeforces_514_A.java', 'codeforces_387_A.java', 'atcoder_ABC106_C.java', 'codeforces_146_A.java', 'atcoder_ABC140_F.java', 'codeforces_272_B.java', 'atcoder_ABC164_D.java', 'atcoder_AGC010_B.java', 'atcoder_ABC169_C.java', 'atcoder_ABC123_D.java', 'atcoder_ABC167_D.java', 'atcoder_ABC124_C.java', 'codeforces_632_B.java', 'codeforces_665_A.java', 'codeforces_287_A.java', 'codeforces_242_B.java', 'codeforces_154_A.java', 'atcoder_ABC137_D.java', 'atcoder_ABC123_B.java', 'codeforces_400_B.java', 'atcoder_AGC043_B.java', 'codeforces_519_B.java', 'atcoder_ABC149_C.java', 'atcoder_ARC062_B.java', 'atcoder_ABC155_D.java', 'atcoder_AGC004_D.java', 'codeforces_147_A.java', 'atcoder_ABC127_F.java', 'atcoder_ABC169_D.java', 'codeforces_678_B.java', 'atcoder_AGC035_B.java', 'codeforces_327_A.java', 'codeforces_7_B.java', 'codeforces_459_A.java', 'codeforces_333_B.java', 'atcoder_AGC037_E.java', 'codeforces_456_A.java', 'atcoder_ABC070_B.java', 'atcoder_ABC126_D.java', 'codeforces_171_A.java', 'codeforces_342_B.java', 'codeforces_653_A.java', 'codeforces_31_A.java', 'atcoder_ABC150_C.java', 'atcoder_ABC145_C.java', 'codeforces_669_A.java', 'codeforces_8_B.java', 'codeforces_189_A.java', 'atcoder_ABC142_C.java', 'atcoder_ABC146_D.java', 'atcoder_ARC102_C.java', 'atcoder_ARC086_B.java', 'atcoder_AGC003_C.java', 'atcoder_ABC107_C.java', 'codeforces_379_A.java', 'atcoder_ABC150_D.java', 'atcoder_AGC011_C.java', 'atcoder_ABC174_C.java', 'codeforces_276_B.java', 'codeforces_25_A.java', 'atcoder_ABC171_E.java', 'atcoder_ABC168_C.java', 'codeforces_67_B.java', 'atcoder_ABC171_B.java', 'codeforces_79_A.java', 'codeforces_99_A.java', 'atcoder_ABC169_E.java', 'atcoder_AGC021_B.java', 'codeforces_110_B.java', 'atcoder_AGC012_A.java', 'atcoder_ABC133_E.java', 'atcoder_ABC143_D.java', 'codeforces_299_A.java', 'atcoder_AGC006_B.java', 'codeforces_567_A.java', 'atcoder_ABC166_C.java', 'atcoder_ABC107_D.java', 'atcoder_AGC028_A.java', 'codeforces_58_B.java', 'atcoder_ABC148_F.java', 'atcoder_ABC105_D.java', 'atcoder_ABC132_F.java', 'codeforces_86_A.java']
+ kill_yang_java_processes
+ echo 'Killing all running Java processes for user '\''yang'\''...'
Killing all running Java processes for user 'yang'...
+ ps aux
+ grep '^yang'
+ grep 'java '
+ awk '{print $2}'
+ xargs -r kill -9
+ echo 'All Java processes for '\''yang'\'' have been killed.'
All Java processes for 'yang' have been killed.
+ echo 'All models for version '\''v0-Python-code'\'' have been run.'
All models for version 'v0-Python-code' have been run.
+ mv /home/ubuntu/translation/Experiment_Results GAs_ft_cl/Experiment_Results_v0-Python-code
