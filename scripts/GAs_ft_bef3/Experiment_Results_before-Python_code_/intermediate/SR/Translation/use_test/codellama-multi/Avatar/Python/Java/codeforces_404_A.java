 ```java
import java.io.BufferedReader ; import java.io.IOException ; import java.io.InputStreamReader ; import java.util.StringTokenizer ; public class atcoder_ABC131_A { public static void main ( String [ ] args ) throws IOException { BufferedReader br = new BufferedReader ( new InputStreamReader ( System.in ) ) ; StringTokenizer st = new StringTokenizer ( br.readLine ( ) ) ; int N = Integer.parseInt ( st.nextToken ( ) ) ; String [ ] s = new String [ N ] ; for ( int i = 0 ; i < N ; i ++ ) s [ i ] = br.readLine ( ) ; int flag = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i != j && i != N - j - 1 ) { if ( s [ i ].charAt ( j ) != s [ N - i - 1 ].charAt ( N - j - 1 ) ) { flag = 1 ; break ; } } } if ( flag == 1 ) break ; } if ( flag == 1 ) System.out.println ( "NO" ) ; else { int d1 = 0 ; int d2 = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i == j ) { d1 += s [ i ].charAt ( j ) ; } else if ( i == N - j - 1 ) { d2 += s [ i ].charAt ( j ) ; } } } if ( d1 != d2 ) System.out.println ( "NO" ) ; else { int rem = 0 ; for ( int i = 0 ; i < N ; i ++ ) { for ( int j = 0 ; j < N ; j ++ ) { if ( i != j && i != N - j - 1 ) { rem += s [ i ].charAt ( j ) ; } } } if ( rem != 0 ) System.out.println ( "NO" ) ; else System.out.println ( "YES" ) ; } } } }

```
