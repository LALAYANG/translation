 [INST:lg]  ```java
import java.util.* ; public class codeforces_670_B { public static void main ( String [ ] args ) { Scanner sc = new Scanner ( System.in ) ; int n = sc.nextInt ( ) ; ArrayList < Node > nodes = new ArrayList < > ( ) ; for ( int i = 0 ; i < n ; i ++ ) { nodes.add ( new Node ( ) ) ; } for ( int i = 0 ; i < n - 1 ; i ++ ) { int u = sc.nextInt ( ) ; int v = sc.nextInt ( ) ; int w = sc.nextInt ( ) ; nodes.get ( u - 1 ).addAdj ( nodes.get ( v - 1 ) , w ) ; nodes.get ( v - 1 ).addAdj ( nodes.get ( u - 1 ) , w ) ; } boolean [ ] visited = new boolean [ n ] ; for ( int i = 0 ; i < n ; i ++ ) { if ( ! visited [ i ] ) { dfs ( nodes.get ( i ) , visited ) ; } } for ( int i = 0 ; i < n ; i ++ ) { System.out.println ( nodes.get ( i ).color ) ; } } static void dfs ( Node node , boolean [ ] visited ) { visited [ node.id ] = true ; for ( int i = 0 ; i < node.adj.size ( ) ; i ++ ) { if ( ! visited [ node.adj.get ( i ).id ] ) { dfs ( node.adj.get ( i ) , visited ) ; } } } static class Node { int id ; int color ; ArrayList < Node > adj = new ArrayList < > ( ) ; public Node ( ) { this.id = this.adj.size ( ) ; } public void addAdj ( Node node , int w ) { this.adj.add ( node ) ; } } }

```
