
[INST] <<SYS>>
You are an expert Python programmer and assistant
<</SYS>>

Translate the following Java code to Python and enclose your solution inside ```python and ```.
A sample test case is provided below:

Test input:
8
7 3 5 4 2 1 6 8
3 8 2 5 4 6 7 1

Expected output:
17517


```
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.Comparator;
import java.util.Arrays;
import java.util.Random;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.Executors;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.StampedLock;
import java.util.concurrent.locks.St
