
```
import java.util.Base64;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import org.apache.commons.math3.stat.inference.TTest;
import java.util.Scanner;
public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String input_string = sc.nextLine();
        List<Integer> list = new ArrayList<Integer>();
        list.add(49);
        list.add(40);
        list.add(94);
        Collections.shuffle(list);
        List<String> vowels = new ArrayList<String>();
        vowels.add("a");
        vowels.add("e");
        vowels.add("i");
        vowels.add("o");
        vowels.add("u");
        vowels.add("y");
        vowels.add("A");
        vowels.add("E");
        vowels.add("I");
        vowels.add("O");
        vowels.add("U");
        vowels.add("Y");
        int condition_14 = 816;
        int condition_24 = 629;
        TTest ttest = new TTest();
        ttest.tTest(new double[]{52, 70, 52}, new double[]{93, 9, 80});
        int condition_16 = 60;
        Date date = new Date();
        int condition_26 = 325;
        int inner_loop_limit = 958;
        int outer_loop_limit = 957;
        for (int LoopIndexOut = 0; LoopIndexOut < inner_loop_limit / outer_loop_limit; LoopIndexOut++) {
            for (int reverse_index = input_string.length() - 1; reverse_index >= 0; reverse_index--) {
                if (condition_16 & condition_26) {
                    if (condition_14 & condition_24) {
                        if (input_string.charAt(reverse_index) == ' ' || input_string.charAt(reverse_index) == '?') {
                            continue;
                        } else {
                            if (vowels.contains(input_string.substring(reverse_index, reverse_index + 1))) {
                                System.out.println("YES");
                            } else {
                                System.out.println("NO");
                            }
                            break;
                        }
                    }
                }
            }
        }
    }
}
```

## Question 2

Translate the following Python code to Java and enclose your solution inside ```java and ```.
A sample test case is provided below:

Test input:

